<beginning of page>
pthread_rwlockattr_init, pthread_rwlockattr_destroy <-> initialize or destroy read-write lock attributes object
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_rwlockattr_init(pthread_rwlockattr_t *attr);
int pthread_rwlockattr_destroy(pthread_rwlockattr_t *attr);
The pthread_rwlockattr_init() function initializes a read-write lock attributes object attr with the default value for
all of the attributes defined by the implementation.
Results are undefined if pthread_rwlockattr_init() is called specifying an already initialized read-write lock at<hy>
tributes object.
After a read-write lock attributes object has been used to initialize one or more read-write locks, any function affect<hy>
ing the attributes object (including destruction) does not affect any previously initialized read-write locks.
The pthread_rwlockattr_destroy() function destroys a read-write lock attributes object. The effect of subsequent
use of the object is undefined until the object is re-initialized by another call to pthread_rwlockattr_init(). An im<hy>
plementation can cause pthread_rwlockattr_destroy() to set the object referenced by attr to an invalid value.
If successful, the pthread_rwlockattr_init() and pthread_rwlockattr_destroy() functions return 0. Otherwise, an
error number is returned to indicate the error.
The pthread_rwlockattr_init() function will fail if:
ENOMEM Insufficient memory exists to initialize the read-write lock attributes object.
The pthread_rwlockattr_destroy() function may fail if:
EINVAL The value specified by attr is invalid.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_rwlock_init(3C), pthread_rwlock_rdlock(3C), pthread_rwlock_unlock(3C), pthread_rwlock_wr<hy>
lock(3C), pthread_rwlockattr_getpshared(3C), attributes(5), standards(5)
