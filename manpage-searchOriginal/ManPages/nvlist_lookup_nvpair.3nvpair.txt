<beginning of page>
nvlist_lookup_nvpair, nvlist_exists <-> lookup named pairs
cc [ flag... ] file... -lnvpair [ library... ]
#include <libnvpair.h>
int nvlist_lookup_nvpair(nvlist_t *nvl, const char *name,
 nvpair_t **nvp);
boolean_t nvlist_exists(nvlist_t *nvl, const char *name);
The nvlist_lookup_nvpair() function returns the nvpair with the matching name, regardless of type. It is valid only
for lists allocated with NV_UNIQUE_NAME. See nvlist_alloc(3NVPAIR).
The nvlist_exists() function returns success if any nvpair exists with the given name. It is valid for all types of lists.
The nvlist_lookup_nvpair() function returns 0 on success and an error value on failure.
The nvlist_exists() function returns B_TRUE if an nvpair with the given name exists and B_FALSE otherwise.
The nvlist_lookup_nvpair() function will fail if:
EINVAL There is an invalid argument.
ENOENT No matching name-value pair is found.
ENOTSUP The list was not allocated with NV_UNIQUE_NAME.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
libnvpair(3LIB), nvlist_alloc(3NVPAIR), attributes(5), nvlist_lookup_nvpair(9F)
