<beginning of page>
copylist <-> copy a file into memory
cc [ flag ... ] file ... -lgen [ library ... ]
#include <libgen.h>
char *copylist(const char *filenm, off_t *szptr);
The copylist() function copies a list of items from a file into freshly allocated memory, replacing new-lines with
null characters. It expects two arguments: a pointer filenm to the name of the file to be copied, and a pointer szptr to
a variable where the size of the file will be stored.
Upon success, copylist() returns a pointer to the memory allocated. Otherwise it returns NULL if it has trouble find<hy>
ing the file, calling malloc(), or reading the file.
The copylist() function has a transitional interface for 64-bit file offsets. See lf64(5). Example 1 Example of copy<hy>
list() function.
 /* read "file" into buf */
 off_t size;
 char *buf;
 buf = copylist("file", &size);
 if (buf) {
  for (i=0; i<size; i++)
   if (buf[i])
    putchar(buf[i]);
   else
    putchar('\n');
  }
 } else {
  fprintf(stderr, "%s: Copy failed for "file".\n", argv[0]);
  exit (1);
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
malloc(3C), attributes(5), lf64(5)
When compiling multithreaded applications, the _REENTRANT flag must be defined on the compile line. This
flag should only be used in multithreaded applications.
