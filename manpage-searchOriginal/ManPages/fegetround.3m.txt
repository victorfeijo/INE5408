<beginning of page>
fegetround, fesetround <-> get and set current rounding direction
c99 [ flag... ] file... -lm [ library... ]
#include <fenv.h>
int fegetround(void);
int fesetround(int round);
The fegetround function gets the current rounding direction.
The fesetround function establishes the rounding direction represented by its argument round. If the argument is not
equal to the value of a rounding direction macro, the rounding direction is not changed.
The fegetround function returns the value of the rounding direction macro representing the current rounding direc<hy>
tion, or a negative value if there is no such rounding direction macro or the current rounding direction is not deter<hy>
minable.
The fesetround function returns a 0 value if and only if the requested rounding direction was established.
No errors are defined.
The following example saves, sets, and restores the rounding direction, reporting an error and aborting if setting the
rounding direction fails: Example 1 Save, set, and restore the rounding direction.
 #include <fenv.h>
 #include <assert.h>
 void f(int round_dir)
 {
  #pragma STDC FENV_ACCESS ON
  int save_round;
  int setround_ok;
  save_round = fegetround();
  setround_ok = fesetround(round_dir);
  assert(setround_ok == 0);
  /* ... */
  fesetround(save_round);
  /* ... */
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
fenv.h(3HEAD), attributes(5), standards(5)
