<beginning of page>
sasl_server_userdb_setpass_t <-> user database plaintext password setting callback function
cc [ flag ... ] file ... -lsasl [ library ... ]
#include <sasl/sasl.h>
int sasl_server_userdb_setpass_t(sasl_conn_t *conn, void *context,
 const char *user, const char *pass, unsigned passlen, struct propctx *propctx,
 unsigned flags);
Use the sasl_server_userdb_setpass_t() callback function to store or change a a plaintext password in the callback
supplier's user database.
conn The SASL connection context.
context The context from the callback record.
user A null-terminated user name with user@realm syntax.
pass The password to check. This string cannot be null-terminated.
passlen The length of pass.
propctx Auxiliary properties. The value of propctx is not stored.
flags See sasl_setpass(3SASL). sasl_server_userdb_setpass_t() uses the same flags that are passed to sasl_set<hy>
pass().
Like other SASL callback functions, sasl_server_userdb_setpass_t() returns an integer that corresponds to a SASL
error code. See <sasl.h> for a complete list of SASL error codes.
SASL_OK The call to sasl_server_userdb_setpass_t() was successful.
See sasl_errors(3SASL) for information on SASL error codes.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wlibsasl _ Interface StabilityEvolving _ MT-LevelMT-Safe
sasl_errors(3SASL), sasl_setpass(3SASL), attributes(5)
