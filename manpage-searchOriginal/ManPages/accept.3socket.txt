<beginning of page>
accept <-> accept a connection on a socket
cc [ flag ... ] file ... -lsocket -lnsl [ library ... ]
#include <sys/types.h>
#include <sys/socket.h>
int accept(int s, struct sockaddr *addr, socklen_t *addrlen);
The argument s is a socket that has been created with socket(3SOCKET) and bound to an address with
bind(3SOCKET), and that is listening for connections after a call to listen(3SOCKET). The accept() function ex<hy>
tracts the first connection on the queue of pending connections, creates a new socket with the properties of s, and al<hy>
locates a new file descriptor, ns, for the socket. If no pending connections are present on the queue and the socket is
not marked as non-blocking, accept() blocks the caller until a connection is present. If the socket is marked as non-
blocking and no pending connections are present on the queue, accept() returns an error as described below. The
accept() function uses the netconfig(4) file to determine the STREAMS device file name associated with s. This is
the device on which the connect indication will be accepted. The accepted socket, ns, is used to read and write data
to and from the socket that connected to ns. It is not used to accept more connections. The original socket (s) re<hy>
mains open for accepting further connections.
The argument addr is a result parameter that is filled in with the address of the connecting entity as it is known to the
communications layer. The exact format of the addr parameter is determined by the domain in which the communi<hy>
cation occurs.
The argument addrlen is a value-result parameter. Initially, it contains the amount of space pointed to by addr; on re<hy>
turn it contains the length in bytes of the address returned.
The accept() function is used with connection-based socket types, currently with SOCK_STREAM.
It is possible to select(3C) or poll(2) a socket for the purpose of an accept() by selecting or polling it for a read.
However, this will only indicate when a connect indication is pending; it is still necessary to call accept().
The accept() function returns <mi>1 on error. If it succeeds, it returns a non-negative integer that is a descriptor for the
accepted socket.
accept() will fail if:
EBADF The descriptor is invalid.
ECONNABORTED The remote side aborted the connection before the accept() operation completed.
EFAULT The addr parameter or the addrlen parameter is invalid.
EINTR The accept() attempt was interrupted by the delivery of a signal.
EMFILE The per-process descriptor table is full.
ENODEV The protocol family and type corresponding to s could not be found in the netconfig file.
ENOMEM There was insufficient user memory available to complete the operation.
ENOSR There were insufficient STREAMS resources available to complete the operation.
ENOTSOCK The descriptor does not reference a socket.
EOPNOTSUPP The referenced socket is not of type SOCK_STREAM.
<beginning of page>
EPROTO A protocol error has occurred; for example, the STREAMS protocol stack has not been initialized or the
connection has already been released.
EWOULDBLOCK The socket is marked as non-blocking and no connections are present to be accepted.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelSafe
poll(2), bind(3SOCKET), connect(3SOCKET), listen(3SOCKET), select(3C), socket.h(3HEAD), socket(3SOCK<hy>
ET), netconfig(4), attributes(5)
