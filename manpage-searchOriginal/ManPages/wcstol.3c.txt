<beginning of page>
wcstol, wcstoll, wstol, watol, watoll, watoi <-> convert wide character string to long integer
#include <wchar.h>
long wcstol(const wchar_t *restrict nptr, wchar_t **restrict endptr,
 int base);
long long wcstoll(const wchar_t *restrict nptr, wchar_t **restrict endptr,
 int base);
#include <widec.h>
long wstol(const wchar_t *nptr, wchar_t **endptr, int base);
long watol(wchar_t *nptr);
long long watoll(wchar_t *nptr);
int watoi(wchar_t *nptr);
The wcstol() and wcstoll() functions convert the initial portion of the wide character string pointed to by nptr to long
and long long representation, respectively. They first decompose the input string into three parts: 1. an initial, possi<hy>
bly empty, sequence of white-space wide-character codes (as specified by iswspace(3C)) 2. a subject sequence in<hy>
terpreted as an integer represented in some radix determined by the value of base 3. a final wide character string of
one or more unrecognised wide character codes, including the terminating null wide-character code of the input
wide character string
They then attempt to convert the subject sequence to an integer, and return the result.
If the value of base is 0, the expected form of the subject sequence is that of a decimal constant, octal constant or
hexadecimal constant, any of which may be preceded by a `+' or `<mi>' sign. A decimal constant begins with a non-ze<hy>
ro digit, and consists of a sequence of decimal digits. An octal constant consists of the prefix `0' optionally followed
by a sequence of the digits `0' to `7' only. A hexadecimal constant consists of the prefix `0x' or `0X' followed by a
sequence of the decimal digits and letters `a' (or `A') to `f' (or `F') with values 10 to 15 respectively.
If the value of base is between 2 and 36, the expected form of the subject sequence is a sequence of letters and digits
representing an integer with the radix specified by base, optionally preceded by a `+' or `<mi>' sign, but not including
an integer suffix. The letters from `a' (or `A') to `z' (or `Z') inclusive are ascribed the values 10 to 35; only letters
whose ascribed values are less than that of base are permitted. If the value of base is 16, the wide-character code
representations of `0x' or `0X' may optionally precede the sequence of letters and digits, following the sign if
present.
The subject sequence is defined as the longest initial subsequence of the input wide character string, starting with the
first non-white-space wide-character code, that is of the expected form. The subject sequence contains no wide-char<hy>
acter codes if the input wide character string is empty or consists entirely of white-space wide-character code, or if
the first non-white-space wide-character code is other than a sign or a permissible letter or digit.
If the subject sequence has the expected form and the value of base is 0, the sequence of wide-character codes start<hy>
ing with the first digit is interpreted as an integer constant. If the subject sequence has the expected form and the val<hy>
ue of base is between 2 and 36, it is used as the base for conversion, ascribing to each letter its value as given above.
If the subject sequence begins with a minus sign (-), the value resulting from the conversion is negated. A pointer to
the final wide character string is stored in the object pointed to by endptr, provided that endptr is not a null pointer.
If the subject sequence is empty or does not have the expected form, no conversion is performed; the value of nptr is
stored in the object pointed to by endptr, provided that endptr is not a null pointer.
These functions do not change the setting of errno if successful.
Since 0, {LONG_MIN} or {LLONG_MIN}, and {LONG_MAX} or {LLONG_MAX} are returned on error and
are also valid returns on success, an application wanting to check for error situations should set errno to 0, call one
of these functions, then check errno.
The wstol() function is equivalent to wcstol().
The watol() function is equivalent to wstol(str,(wchar_t **)NULL, 10).
<beginning of page>
The watoll() function is the long-long (double long) version of watol().
The watoi() function is equivalent to (int)watol().
Upon successful completion, these functions return the converted value, if any. If no conversion could be performed,
0 is returned and errno may be set to indicate the error. If the correct value is outside the range of representable val<hy>
ues, {LONG_MIN}, {LONG_MAX}, {LLONG_MIN}, or {LLONG_MAX} is returned (according to the sign of
the value), and errno is set to ERANGE.
These functions will fail if:
EINVAL The value of base is not supported.
ERANGE The value to be returned is not representable.
These functions may fail if:
EINVAL No conversion could be performed.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
wcstol() and wcstoll() are Standard. _ MT-LevelMT-Safe
iswalpha(3C), iswspace(3C), scanf(3C), wcstod(3C), attributes(5), standards(5)
Truncation from long long to long can take place upon assignment or by an explicit cast.
