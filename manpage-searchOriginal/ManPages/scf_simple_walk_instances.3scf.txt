<beginning of page>
scf_simple_walk_instances <-> observational interface for Service Configuration Facility
cc [ flag... ] file... -lscf [ library... ]
#include <libscf.h>
int scf_simple_walk_instances(uint_t flags, void *private,
 int (*inst_callback)(scf_handle_t *, scf_instance_t *, void *));
The scf_simple_walk_instances() function iterates over every service instance in a specified state and calls a call<hy>
back function provided by the user on each specified instance.
The function takes a flags argument to indicate which instance states are involved in the iteration, an opaque buffer
to be passed to the callback function, and a callback function with three arguments, a handle, an instance pointer,
and an opaque buffer. If the callback function returns a value other than success, iteration is ended, an error is set,
and the function returns -1.
The handle passed to the callback function is provided to the callback function by the library. This handle is used by
the callback function for all low-level allocation involved in the function.
The simplified library provides defined constants for the flags argument. The user can use a bitwise OR to apply
more than one flag. The SCF_STATE_ALL flag is a bitwise OR of all the other states.The flags are: <bu>
SCF_STATE_UNINIT <bu> SCF_STATE_MAINT <bu> SCF_STATE_OFFLINE <bu> SCF_STATE_DISABLED <bu>
SCF_STATE_ONLINE <bu> SCF_STATE_DEGRADED <bu> SCF_STATE_ALL
Upon successful completion, scf_simple_walk_instances() returns 0. Otherwise, it returns -1.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelMT-Safe
libscf(3LIB), attributes(5)
