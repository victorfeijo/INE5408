<beginning of page>
elf_strptr <-> make a string pointer
cc [ flag ... ] file ... -lelf [ library ... ]
#include <libelf.h>
char *elf_strptr(Elf *elf, size_t section, size_t offset);
The elf_strptr() function converts a string section offset to a string pointer. elf identifies the file in which the string
section resides, and section identifies the section table index for the strings. elf_strptr() normally returns a pointer to
a string, but it returns a null pointer when elf is null, section is invalid or is not a section of type SHT_STRTAB, the
section data cannot be obtained, offset is invalid, or an error occurs. Example 1 A sample program of calling
elf_strptr() function.
A prototype for retrieving section names appears below. The file header specifies the section name string table in the
e_shstrndx member. The following code loops through the sections, printing their names.
 /* handle the error */
 if ((ehdr = elf32_getehdr(elf)) == 0) {
  return;
 }
 ndx = ehdr->e_shstrndx;
 scn = 0;
 while ((scn = elf_nextscn(elf, scn)) != 0) {
  char *name = 0;
  if ((shdr = elf32_getshdr(scn)) != 0)
  name = elf_strptr(elf, ndx, (size_t)shdr->sh_name);
  printf("'%s'\n", name? name: "(null)");
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT-LevelMT-Safe
elf(3ELF), elf32_getshdr(3ELF), elf32_xlatetof(3ELF), elf_getdata(3ELF), libelf(3LIB), attributes(5)
A program may call elf_getdata() to retrieve an entire string table section. For some applications, that would be both
more efficient and more convenient than using elf_strptr().
