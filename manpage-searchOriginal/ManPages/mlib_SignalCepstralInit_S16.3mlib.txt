<beginning of page>
mlib_SignalCepstralInit_S16, mlib_SignalCepstralInit_F32 <-> initialization for cepstral analysis
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_SignalCepstralInit_S16(void *state, mlib_s32 order);
mlib_status mlib_SignalCepstralInit_F32(void *state, mlib_s32 order);
Each of these functions initializes the internal state structure for cepstral analysis.
The init function performs internal state structure allocation and global initialization. Per function call initialization
is done in each function, so the same internal state structure can be reused for multiplefunction calls.
Each of the functions takes the following arguments:
order The order of the input signal vector and the cepstral coefficients, where length = 2**order.
state Pointer to the internal state structure.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_SignalCepstral_S16(3MLIB), mlib_SignalCepstral_S16_Adp(3MLIB), mlib_SignalCep<hy>
stral_F32(3MLIB), mlib_SignalCepstralFree_S16(3MLIB), mlib_SignalCepstralFree_F32(3MLIB), at<hy>
tributes(5)
