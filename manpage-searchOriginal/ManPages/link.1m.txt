<beginning of page>
link, unlink <-> link and unlink files and directories
/usr/sbin/link existing-file new-file
/usr/xpg4/bin/link existing-file new-file
/usr/sbin/unlink file
The link and unlink commands link and unlink files and directories. Only super-users can use these commands on
directories.
Use link to create a new file that points to an existing file. The existing-file and new-file operands specify the exist<hy>
ing file and newly-created files. See OPERANDS.
link and unlink directly invoke the link(2) and unlink(2) system calls, performing exactly what they are told to do
and abandoning all error checking. This differs from the ln(1) command. See ln(1).
While linked files and directories can be removed using unlink, it is safer to use rm(1) and rmdir(1) instead. See
rm(1) and rmdir(1).
If the existing file being hard linked is itself a symbolic link, then the newly created file (new-file) will be a hard link
to the file referenced by the symbolic link, not to the symbolic link object itself (existing-file).
The following operands are supported:
existing-file Specifies the name of the existing file to be linked.
file Specifies the name of the file to be unlinked.
new-file Specifies the name of newly created (linked) file.
See environ(5) for descriptions of the following environment variables that affect the execution of link: LANG,
LC_ALL, LC_CTYPE, LC_MESSAGES, and NLSPATH.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wxcu4 _ Interface StabilityStandard
ln(1), rm(1), link(2), unlink(2), attributes(5), environ(5), standards(5)
