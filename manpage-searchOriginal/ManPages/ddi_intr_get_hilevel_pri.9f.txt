<beginning of page>
ddi_intr_get_hilevel_pri <-> get minimum priority level for a high-level interrupt
#include <sys/types.h>
#include <sys/conf.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>
int ddi_intr_get_hilevel_pri(void);
Solaris DDI specific (Solaris DDI).
Upon a successful return, the ddi_intr_get_hilevel_pri() function returns the minimum priority level for a high-lev<hy>
el interrupt. The return priority value can be used to compare to other priority values, such as those returned from
ddi_intr_get_pri(9F), to determine if a given interrupt priority is a high-level interrupt.
High-level interrupts must be handled without using system services that manipulate thread or process states, be<hy>
cause such interrupts are not blocked by the scheduler.
In addition, high-level interrupt handlers must take care to do a minimum of work because they cannot be preempt<hy>
ed.
A typical high-level interrupt handler puts data into a circular buffer and schedule a soft interrupt by calling ddi_in<hy>
tr_trigger_softint(). The circular buffer can be protected by using a mutex that is properly initialized for the inter<hy>
rupt handler.
The ddi_intr_get_hilevel_pri() function can be used before calling ddi_intr_add_handler() to help determine
which type of interrupt handler can be used. Most device drivers are designed with the knowledge that supported de<hy>
vices always generate low level interrupts. On some machines, however, interrupts are high-level above the sched<hy>
uler level and on other machines they are not. Devices such as those those using SBus interrupts or VME bus level 6
or 7 interrupts must use the ddi_intr_get_hilevel_pri() function to test the type of interrupt handler that can be used.
The ddi_intr_get_hilevel_pri() function returns the priority value for a high-level interrupt.
The ddi_intr_get_hilevel_pri() function can be called from either user or kernel non-interrupt context.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed
attributes(5), ddi_intr_add_handler(9F), ddi_intr_alloc(9F), ddi_intr_enable(9F), ddi_intr_get_pri(9F),
ddi_intr_trigger_softint(9F), mutex(9F)
Writing Device Drivers
