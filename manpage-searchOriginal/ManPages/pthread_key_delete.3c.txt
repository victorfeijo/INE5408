<beginning of page>
pthread_key_delete <-> delete thread-specific data key
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_key_delete(pthread_key_t key);
The pthread_key_delete() function deletes a thread-specific data key previously returned by pthread_key_create().
The thread-specific data values associated with key need not be NULL at the time pthread_key_delete() is called. It
is the responsibility of the application to free any application storage or perform any cleanup actions for data struc<hy>
tures related to the deleted key or associated thread-specific data in any threads; this cleanup can be done either be<hy>
fore or after pthread_key_delete() is called. Any attempt to use key following the call to pthread_key_delete() re<hy>
sults in undefined behaviour.
The pthread_key_delete() function is callable from within destructor functions. No destructor functions will be in<hy>
voked by pthread_key_delete(). Any destructor function that may have been associated with key will no longer be
called upon thread exit.
If successful, the pthread_key_delete() function returns 0. Otherwise, an error number is returned to indicate the
error.
The pthread_key_delete() function may fail if:
EINVAL The key value is invalid.
The pthread_key_delete() function will not return an error code of EINTR.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_key_create(3C), attributes(5), standards(5)
