<beginning of page>
mlib_VideoReversibleColorYUV2RGB_U8_U8, mlib_VideoReversibleColorYUV2RGB_U8_S16, mlib_VideoRe<hy>
versibleColorYUV2RGB_S16_S16, mlib_VideoReversibleColorYUV2RGB_S16_S32 <-> reversible color space con<hy>
version for wavelet transformation
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoReversibleColorYUV2RGB_U8_U8(mlib_u8 *r,
 mlib_u8 *g, mlib_u8 *b, const mlib_u8 *y, const mlib_u8 *u,
 const mlib_u8 *v, mlib_s32 n, mlib_s32 depth);
mlib_status mlib_VideoReversibleColorYUV2RGB_U8_S16(mlib_u8 *r,
 mlib_u8 *g, mlib_u8 *b, const mlib_s16 *y, const mlib_s16 *u,
 const mlib_s16 *v, mlib_s32 n, mlib_s32 depth);
mlib_status mlib_VideoReversibleColorYUV2RGB_S16_S16(mlib_s16 *r,
 mlib_s16 *g, mlib_s16 *b, const mlib_s16 *y, const mlib_s16 *u,
 const mlib_s16 *v, mlib_s32 n, mlib_s32 depth);
mlib_status mlib_VideoReversibleColorYUV2RGB_S16_S32(mlib_s16 *r,
 mlib_s16 *g, mlib_s16 *b, const mlib_s32 *y, const mlib_s32 *u,
 const mlib_s32 *v, mlib_s32 n, mlib_s32 depth);
Each of the functions provides support to reversible wavelet transformation. It is for reversible color space conver<hy>
sion.
Each of the functions takes the following arguments:
r Pointer to destination R component.
g Pointer to destination G component.
b Pointer to destination B component.
y Pointer to source Y component.
u Pointer to source U component.
v Pointer to source V component.
n Length of data.
depth Number of bit planes required to store the original R, G, and B components.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoReversibleColorRGB2YUV_U8_U8(3MLIB), attributes(5)
