<beginning of page>
fdatasync <-> synchronize a file's data
#include <unistd.h>
int fdatasync(int fildes);
The fdatasync() function forces all currently queued I/O operations associated with the file indicated by file descrip<hy>
tor fildes to the synchronized I/O completion state.
The functionality is as described for fsync(3C) (with the symbol _XOPEN_REALTIME defined), with the excep<hy>
tion that all I/O operations are completed as defined for synchronised I/O data integrity completion.
If successful, the fdatasync() function returns 0. Otherwise, the function returns <mi>1 and sets errno to indicate the er<hy>
ror. If the fdatasync() function fails, outstanding I/O operations are not guaranteed to have been completed.
The fdatasync() function will fail if:
EBADF The fildes argument is not a valid file descriptor open for writing.
EINVAL The system does not support synchronized I/O for this file.
ENOSYS The function fdatasync() is not supported by the system.
In the event that any of the queued I/O operations fail, fdatasync() returns the error conditions defined for read(2)
and write(2).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelAsync-Signal-Safe _ StandardSee standards(5).
fcntl(2), open(2), read(2), write(2), fsync(3C), aio_fsync(3C), fcntl.h(3HEAD), attributes(5), standards(5)
