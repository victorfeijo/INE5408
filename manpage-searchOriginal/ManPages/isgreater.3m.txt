<beginning of page>
isgreater <-> test if x greater than y
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
int isgreater(real-floating x, real-floating y);
The isgreater() macro determines whether its first argument is greater than its second argument. The value of is<hy>
greater(x, y) is equal to (x) > (y); however, unlike (x) > (y), isgreater(x, y) does not raise the invalid floating-point
exception when x and y are unordered.
Upon successful completion, the isgreater() macro returns the value of (x) > (y).
If x or y is NaN, 0 is returned.
No errors are defined.
The relational and equality operators support the usual mathematical relationships between numeric values. For any
ordered pair of numeric values, exactly one of the relationships (less, greater, and equal) is true. Relational operators
can raise the invalid floating-point exception when argument values are NaNs. For a NaN and a numeric value, or for
two NaNs, just the unordered relationship is true. This macro is a quiet (non-floating-point exception raising) version
of a relational operator. It facilitates writing efficient code that accounts for quiet NaNs without suffering the invalid
floating-point exception. In the SYNOPSIS section, real-floating indicates that the argument is an expression of re<hy>
al-floating type.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
isgreaterequal(3M), isless(3M), islessequal(3M), islessgreater(3M), isunordered(3M), math.h(3HEAD), at<hy>
tributes(5), standards(5)
