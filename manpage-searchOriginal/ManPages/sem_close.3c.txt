<beginning of page>
sem_close <-> close a named semaphore
#include <semaphore.h>
int sem_close(sem_t *sem);
The sem_close() function is used to indicate that the calling process is finished using the named semaphore indicated
by sem. The effects of calling sem_close() for an unnamed semaphore (one created by sem_init(3C)) are undefined.
The sem_close() function deallocates (that is, make available for reuse by a subsequent sem_open(3C) by this
process) any system resources allocated by the system for use by this process for this semaphore. The effect of sub<hy>
sequent use of the semaphore indicated by sem by this process is undefined. If the semaphore has not been removed
with a successful call to sem_unlink(3C), then sem_close() has no effect on the state of the semaphore. If the
sem_unlink(3C) function has been successfully invoked for name after the most recent call to sem_open(3C) with
O_CREAT for this semaphore, then when all processes that have opened the semaphore close it, the semaphore is
no longer be accessible.
If successful, sem_close() returns 0, otherwise it returns <mi>1 and sets errno to indicate the error.
The sem_close() function will fail if:
EINVAL The sem argument is not a valid semaphore descriptor.
ENOSYS The sem_close() function is not supported by the system.
The sem_close() function should not be called for an unnamed semaphore initialized by sem_init(3C).
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyCommitted _ MT-LevelMT-Safe _ StandardSee standards(5).
sem_init(3C), sem_open(3C), sem_unlink(3C), attributes(5), standards(5)
Solaris 2.6 was the first release to support the Asynchronous Input and Output option. Prior to this release, this func<hy>
tion always returned <mi>1 and set errno to ENOSYS.
