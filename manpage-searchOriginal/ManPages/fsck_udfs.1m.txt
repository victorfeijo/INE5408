<beginning of page>
fsck_udfs <-> file system consistency check and interactive repair
fsck -F udfs [generic_options] [special ...]
fsck -F udfs [generic_options] [-o specific_options]
 [special ...]
fsck audits and interactively repairs inconsistent conditions on file systems. A file system to be checked can be spec<hy>
ified by giving the name of the block or character special device or by giving the name of its mount point if a match<hy>
ing entry exists in /etc/vfstab.
special represents the character special device, for example, /dev/rdsk/c0t2d0s0, on which the file system resides.
The character special device, not the block special device should be used. fsck does not work on a mounted block
device.
If no special device is specified, all udfs file systems specified in the vfstab file with a fsckdev entry are checked. If
the -p (preen) option is specified, udfs file systems with an fsckpass number greater than 1 are checked in parallel.
See fsck(1M).
In the case of correcting serious inconsistencies, by default, fsck asks for confirmation before making a repair and
waits for the operator to respond with either yes or no. If the operator does not have write permission on the file sys<hy>
tem, fsck defaults to the -n (no corrections) option. See fsck(1M).
Repairing some file system inconsistencies can result in loss of data. The amount and severity of data loss can be de<hy>
termined from the diagnostic output.
fsck automatically corrects innocuous inconsistencies. It displays a message for each corrected inconsistency that
identifies the nature of the correction which took place on the file system. After successfully correcting a file system,
fsck prints the number of files on that file system and the number of used and free blocks.
Inconsistencies checked are as follows: <bu> Blocks claimed by more than one file or the free list <bu> Blocks claimed by a
file or the free list outside the range of the file system <bu> Incorrect link counts in file entries <bu> Incorrect directory sizes
<bu> Bad file entry format <bu> Blocks not accounted for anywhere <bu> Directory checks, file pointing to unallocated file entry
and absence of a parent directory entry <bu> Descriptor checks, more blocks for files than there are in the file system <bu>
Bad free block list format <bu> Total free block count incorrect
The following options are supported:
generic_options The following generic_options are supported:
-m Check but do not repair. This option checks to be sure that the file system is suitable for mounting, and returns
the appropriate exit status. If the file system is ready for mounting, fsck displays a message such as:
 udfs fsck: sanity check: /dev/rdsk/c0t2d0s0 okay
-n | -N Assume a no response to all questions asked by fsck; do not open the file system for writing.
-V Echo the expanded command line, but do not execute the command. This option can be used to verify and to vali<hy>
date the command line.
-y | -Y Assume a yes response to all questions asked by fsck.
-o specific_options Specify udfs file system specific options in a comma-separated list with no intervening spaces.
The following specific_options are available:
f Force checking of file systems regardless of the state of their logical volume integrity state.
<beginning of page>
p Check and fix the file system non-interactively (preen). Exit immediately if there is a problem that requires inter<hy>
vention. This option is required to enable parallel file system checking.
w Check writable file systems only.
/etc/vtstab List of default parameters for each file system.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wudf
fsck(1M), fsdb_udfs(1M), fstyp(1M), mkfs(1M), mkfs_udfs(1M), mountall(1M), reboot(1M), vfstab(4), at<hy>
tributes(5)
The operating system buffers file system data. Running fsck on a mounted file system can cause the operating sys<hy>
tem's buffers to become out of date with respect to the disk. For this reason, use fsck only when the file system is
unmounted. If this is not possible, take care that the system is quiescent and that it is rebooted immediately after run<hy>
ning fsck. A panic will probably occur if running fsck on a file system that modifies the file system while it is
mounted.
If an unmount of the file system is not done before the system is shut down, the file system might become corrupted.
In this case, a file system check needs to be completed before the next mount operation.
not writable
You cannot write to the device.
Currently Mounted on
The device is already mounted and cannot run fsck.
FILE SYSTEM WAS MODIFIED
File system has been modified to bring it to a consistent state.
Can't read allocation extent
Cannot read the block containing allocation extent.
Bad tag on alloc extent
Invalid tag detected when expecting an allocation extent.
Volume sequence tag error
Invalid tag detected in the volume sequence.
Space bitmap tag error
Invalid tag detected in the space bitmap.
UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY
Use fsck in interactive mode.
<beginning of page>
