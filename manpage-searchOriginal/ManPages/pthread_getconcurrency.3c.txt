<beginning of page>
pthread_getconcurrency, pthread_setconcurrency <-> get or set level of concurrency
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_getconcurrency(void);
int pthread_setconcurrency(int new_level);
Unbound threads in a process may or may not be required to be simultaneously active. By default, the threads imple<hy>
mentation ensures that a sufficient number of threads are active so that the process can continue to make progress.
While this conserves system resources, it may not produce the most effective level of concurrency.
The pthread_setconcurrency() function allows an application to inform the threads implementation of its desired
concurrency level, new_level. The actual level of concurrency provided by the implementation as a result of this
function call is unspecified.
If new_level is 0, it causes the implementation to maintain the concurrency level at its discretion as if pthread_set<hy>
concurrency() was never called.
The pthread_getconcurrency() function returns the value set by a previous call to the pthread_setconcurrency()
function. If the pthread_setconcurrency() function was not previously called, this function returns 0 to indicate
that the implementation is maintaining the concurrency level.
When an application calls pthread_setconcurrency() it is informing the implementation of its desired concurrency
level. The implementation uses this as a hint, not a requirement.
If an implementation does not support multiplexing of user threads on top of several kernel scheduled entities, the
pthread_setconcurrency() and pthread_getconcurrency() functions will be provided for source code compatibili<hy>
ty but they will have no effect when called. To maintain the function semantics, the new_level parameter will be
saved when pthread_setconcurrency() is called so that a subsequent call to pthread_getconcurrency() returns the
same value.
If successful, the pthread_setconcurrency() function returns 0. Otherwise, an error number is returned to indicate
the error.
The pthread_getconcurrency() function always returns the concurrency level set by a previous call to
pthread_setconcurrency(). If the pthread_setconcurrency() function has never been called, pthread_getconcur<hy>
rency() returns 0.
The pthread_setconcurrency() function will fail if:
EINVAL The value specified by new_level is negative.
EAGAIN The value specific by new_level would cause a system resource to be exceeded.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_create(3C), pthread_attr_init(3C), attributes(5), standards(5)
