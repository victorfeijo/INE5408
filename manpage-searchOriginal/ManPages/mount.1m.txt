<beginning of page>
mount, umount <-> mount or unmount file systems and remote resources
mount [-p | -v]
mount [-F FSType] [generic_options] [-o specific_options]
 [-O] special | mount_point
mount [-F FSType] [generic_options] [-o specific_options]
 [-O] special mount_point
mount -a [-F FSType] [-V] [current_options]
 [-o specific_options] [mount_point]...
umount [-f] [-V] [-o specific_options] special | mount_point
umount -a [-f] [-V] [-o specific_options] [mount_point]...
mount attaches a file system to the file system hierarchy at the mount_point, which is the pathname of a directory. If
mount_point has any contents prior to the mount operation, these are hidden until the file system is unmounted.
umount unmounts a currently mounted file system, which may be specified either as a mount_point or as special,
the device on which the file system resides.
The table of currently mounted file systems can be found by examining the mounted file system information file.
This is provided by a file system that is usually mounted on /etc/mnttab. The mounted file system information is de<hy>
scribed in mnttab(4). Mounting a file system adds an entry to the mount table; a umount removes an entry from the
table.
When invoked with both the special and mount_point arguments and the -F option, mount validates all arguments
except for special and invokes the appropriate FSType-specific mount module. If invoked with no arguments, mount
lists all the mounted file systems recorded in the mount table, /etc/mnttab. If invoked with a partial argument list
(with only one of special or mount_point, or with both special or mount_point specified but not FSType), mount will
search /etc/vfstab for an entry that will supply the missing arguments. If no entry is found, and the special argument
starts with /, the default local file system type specified in /etc/default/fs will be used. Otherwise the default remote
file system type will be used. The default remote file system type is determined by the first entry in the
/etc/dfs/fstypes file. After filling in missing arguments, mount will invoke the FSType-specific mount module.
For file system types that support it, a file can be mounted directly as a file system by specifying the full path to the
file as the special argument. In such a case, the nosuid option is enforced. If specific file system support for such
loopback file mounts is not present, you can still use lofiadm(1M) to mount a file system image. In this case, no spe<hy>
cial options are enforced.
Only a user with sufficient privilege (at least PRIV_SYS_MOUNT) can mount or unmount file systems using
mount and umount. However, any user can use mount to list mounted file systems and resources.
-F FSType
Used to specify the FSType on which to operate. The FSType must be specified or must be determinable from
/etc/vfstab, or by consulting /etc/default/fs or /etc/dfs/fstypes.
-a [ mount_points. . . ]
Perform mount or umount operations in parallel, when possible.
If mount points are not specified, mount will mount all file systems whose /etc/vfstab "mount at boot" field is yes.
If mount points are specified, then /etc/vfstab "mount at boot" field will be ignored.
If mount points are specified, umount will only umount those mount points. If none is specified, then umount will
attempt to unmount all file systems in /etc/mnttab, with the exception of certain system required file systems: /,
/usr, /var, /var/adm, /var/run, /proc, /dev/fd and /tmp.
-f
Forcibly unmount a file system.
Without this option, umount does not allow a file system to be unmounted if a file on the file system is busy. Using
<beginning of page>
this option can cause data loss for open files; programs which access files after the file system has been unmounted
will get an error (EIO).
-p
Print the list of mounted file systems in the /etc/vfstab format. Must be the only option specified. See BUGS.
-v
Print the list of mounted file systems in verbose format. Must be the only option specified.
-V
Echo the complete command line, but do not execute the command. umount generates a command line by using the
options and arguments provided by the user and adding to them information derived from /etc/mnttab. This option
should be used to verify and validate the command line.
generic_options
Options that are commonly supported by most FSType-specific command modules. The following options are avail<hy>
able:
-m
Mount the file system without making an entry in /etc/mnttab.
-g
Globally mount the file system. On a clustered system, this globally mounts the file system on all nodes of the clus<hy>
ter. On a non-clustered system this has no effect.
-o
Specify FSType-specific options in a comma separated (without spaces) list of suboptions and keyword-attribute
pairs for interpretation by the FSType-specific module of the command. (See mount_ufs(1M).) When you use -o
with a file system that has an entry in /etc/vfstab, any mount options entered for that file system in /etc/vfstab are
ignored.
The following options are supported:
devices | nodevices
Allow or disallow the opening of device-special files. The default is devices.
If you use nosuid in conjunction with devices, the behavior is equivalent to that of nosuid.
exec | noexec
Allow or disallow executing programs in the file system. Allow or disallow mmap(2) with PROT_EXEC for files
within the file system. The default is exec.
loop
Ignored for compatibility.
nbmand | nonbmand
Allow or disallow non-blocking mandatory locking semantics on this file system. Non-blocking mandatory locking
is disallowed by default.
If the file system is mounted with the nbmand option, then applications can use the fcntl(2) interface to place non-
blocking mandatory locks on files and the system enforces those semantics. If you enable this option, it can cause
<beginning of page>
standards conformant applications to see unexpected errors.
To avoid the possibility of obtaining mandatory locks on system files, do not use the nbmand option with the fol<hy>
lowing file systems:
 /
 /usr
 /etc
 /var
 /proc
 /dev
 /devices
 /system/contract
 /system/object
 /etc/mnttab
 /etc/dfs/sharetab
Do not use the remount option to change the nbmand disposition of the file system. The nbmand option is mutual<hy>
ly exclusive of the global option. See -g.
ro | rw
Specify read-only or read-write. The default is rw.
setuid | nosetuid
Allow or disallow setuid or setgid execution. The default is setuid.
If you specify setuid in conjunction with nosuid, the behavior is the same as nosuid.
nosuid is equivalent to nosetuid and nodevices. When suid or nosuid is combined with setuid or nosetuid and de<hy>
vices or nodevices, the most restrictive options take effect.
This option is highly recommended whenever the file system is shared by way of NFS with the root= option. With<hy>
out it, NFS clients could add setuid programs to the server or create devices that could open security holes.
suid | nosuid
Allow or disallow setuid or setgid execution. The default is suid. This option also allows or disallows opening any
device-special entries that appear within the filesystem.
nosuid is equivalent to nosetuid and nodevices. When suid or nosuid is combined with setuid or nosetuid and de<hy>
vices or nodevices, the most restrictive options take effect.
This option is highly recommended whenever the file system is shared using NFS with the root=option, because,
without it, NFS clients could add setuid programs to the server, or create devices that could open security holes.
-O
Overlay mount. Allow the file system to be mounted over an existing mount point, making the underlying file sys<hy>
tem inaccessible. If a mount is attempted on a pre-existing mount point without setting this flag, the mount will fail,
producing the error "device busy".
-r
Mount the file system read-only.
Example 1 Mounting and Unmounting a DVD Image Directly
The following commands mount and unmount a DVD image.
<beginning of page>
 # mount -F hsfs /images/solaris.iso /mnt/solaris-image
 # umount /mnt/solaris-image
See largefile(5) for the description of the behavior of mount and umount when encountering files greater than or
equal to 2 Gbyte ( 2^31 bytes).
/etc/mnttab
Table of mounted file systems.
/etc/default/fs
Default local file system type. Default values can be set for the following flags in /etc/default/fs. For example: LO<hy>
CAL=ufs
LOCAL:
The default partition for a command if no FSType is specified.
/etc/vfstab
List of default parameters for each file system.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
lofiadm(1M), mount_cachefs(1M), mount_hsfs(1M), mount_nfs(1M), mount_pcfs(1M), mount_smbfs(1M),
mount_tmpfs(1M), mount_udfs(1M), mount_ufs(1M), mountall(1M), umountall(1M), fcntl(2), mmap(2), mnt<hy>
tab(4), vfstab(4), attributes( 5), largefile(5), privileges(5), lofs(7FS), pcfs(7FS)
If the directory on which a file system is to be mounted is a symbolic link, the file system is mounted on the directo<hy>
ry to which the symbolic link refers, rather than on top of the symbolic link itself.
The mount -p output is incorrect for cachefs.
