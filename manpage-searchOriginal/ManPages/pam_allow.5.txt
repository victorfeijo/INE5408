<beginning of page>
pam_allow <-> PAM authentication, account, session and password management PAM module to allow operations
pam_allow.so.1
The pam_allow module implements all the PAM service module functions and returns PAM_SUCCESS for all
calls. Opposite functionality is available in the pam_deny(5) module.
Proper Solaris authentication operation requires pam_unix_cred(5) be stacked above pam_allow.
The following options are interpreted:
debug Provides syslog(3C) debugging information at the LOG_AUTH | LOG_DEBUG level.
PAM_SUCCESS is always returned. Example 1 Allowing ssh none
The following example is a pam.conf fragment that illustrates a sample for allowing ssh none authentication:
 sshd-none auth required pam_unix_cred.so.1
 sshd-none auth sufficient pam_allow.so.1
 sshd-none account sufficient pam_allow.so.1
 sshd-none session sufficient pam_allow.so.1
 sshd-none password sufficient pam_allow.so.1
Example 2 Allowing Kiosk Automatic Login Service
The following is example is a pam.conf fragment that illustrates a sample for allowing gdm kiosk auto login:
 gdm-autologin auth required pam_unix_cred.so.1
 gdm-autologin auth sufficient pam_allow.so.1
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT LevelMT-Safe with exceptions
libpam(3LIB), pam(3PAM), pam_sm(3PAM), syslog(3C), pam.conf(4), attributes(5), pam_deny(5),
pam_unix_cred(5)
The interfaces in libpam(3LIB) are MT-Safe only if each thread within the multi-threaded application uses its own
PAM handle.
This module is intended to be used to either allow access to specific services names, or to all service names not spec<hy>
ified (by specifying it as the default service stack).
