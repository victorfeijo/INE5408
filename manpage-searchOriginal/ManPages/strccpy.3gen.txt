<beginning of page>
strccpy, streadd, strcadd, strecpy <-> copy strings, compressing or expanding escape codes
cc [ flag ... ] file ... -lgen [ library ... ]
#include <libgen.h>
char *strccpy(char *output, const char *input);
char *strcadd(char *output, const char *input);
char *strecpy(char *output, const char *input, const char *exceptions);
char *streadd(char *output, const char *input, const char *exceptions);
strccpy() copies the input string, up to a null byte, to the output string, compressing the C-language escape se<hy>
quences (for example, \n, \001) to the equivalent character. A null byte is appended to the output. The output argu<hy>
ment must point to a space big enough to accommodate the result. If it is as big as the space pointed to by input it is
guaranteed to be big enough. strccpy() returns the output argument.
strcadd() is identical to strccpy(), except that it returns the pointer to the null byte that terminates the output.
strecpy() copies the input string, up to a null byte, to the output string, expanding non-graphic characters to their
equivalent C-language escape sequences (for example, \n, \001). The output argument must point to a space big
enough to accommodate the result; four times the space pointed to by input is guaranteed to be big enough (each
character could become \ and 3 digits). Characters in the exceptions string are not expanded. The exceptions argu<hy>
ment may be zero, meaning all non-graphic characters are expanded. strecpy() returns the output argument.
streadd() is identical to strecpy(), except that it returns the pointer to the null byte that terminates the output. Ex<hy>
ample 1 Example of expanding and compressing escape codes.
 /* expand all but newline and tab */
 strecpy( output, input, "\n\t" );
 /* concatenate and compress several strings */
 cp = strcadd( output, input1 );
 cp = strcadd( cp, input2 );
 cp = strcadd( cp, input3 );
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
string(3C), strfind(3GEN), attributes(5)
When compiling multi-thread applications, the _REENTRANT flag must be defined on the compile line. This flag
should only be used in multi-thread applications.
