<beginning of page>
fsck_pcfs <-> file system consistency check and interactive repair
fsck -F pcfs [generic_options] special
fsck -F pcfs [generic_options] [-o specific_options] special
The fsck utility audits and interactively repairs inconsistent conditions on file systems. special represents the charac<hy>
ter special device on which the file system resides, for example /dev/rdiskette. The character special device, not the
block special device, should be used.
In the case of correcting serious inconsistencies, by default, fsck asks for confirmation before making a repair and
waits for the operator to respond either yes or no. If the operator does not have write permission on the file system,
fsck defaults to a -n (no corrections) action. See fsck(1M).
Repairing some file system inconsistencies may result in loss of data. The amount and severity of data loss may be
determined from the diagnostic output.
When executed with the verify option (-o v), fsck_pcfs automatically scans the entire file system to verify that all of
its allocation units are accessible. If it finds any units inaccessible, it updates the file allocation table (FAT) appropri<hy>
ately. It also updates any effected directory entries to reflect the problem. This directory update includes truncating
the file at the point in its allocation chain where the file data is no longer accessible. Any remaining accessible allo<hy>
cation units become orphaned.
Orphaned chains of accessible allocation units are, with the operator's concurrence, linked back into the file system
as files in the root directory. These files are assigned names of the form fileNNNN.chk, where the Ns are digits in the
integral range from 0 through 9.
After successfully scanning and correcting any errors in the file system, fsck displays a summary of information
about the file system. This summary includes the size of the file system in bytes, the number of bytes used in direc<hy>
tories and individual files, and the number of available allocation units remaining in the file system.
generic_options The following generic options are supported:
-m Check but do not repair. This option checks that the file system is suitable for mounting, returning the appropri<hy>
ate exit status. If the file system is ready for mounting, fsck displays a message such as:
 pcfs fsck: sanity check:
 /dev/rdiskette okay
-n | -N
 Assume a no response to all questions asked by fsck; do not open the file system for writing.
-V Echo the expanded command line, but do not execute the command. This option may be used to verify and to
validate the command line.
-y | -Y Assume a yes response to all questions asked by fsck.
-o specific_options Specify pcfs file system specific options in a comma-separated list, in any combination, with no
intervening spaces.
v Verify all allocation units are accessible prior to correcting inconsistencies in the metadata.
p Check and fix the file system non-interactively (preen). Exit immediately if there is a problem requiring interven<hy>
tion.
w Check writable file systems only.
<beginning of page>
special The device which contains the pcfs. The device name for a diskette is specified as /dev/rdiskette0 for the
first diskette drive, or /dev/rdiskette1 for a second diskette drive. A hard disk device or high-capacity removable de<hy>
vice name much be qualified with a suffix to indicate the proper FDISK partition.
For example, in the names: /dev/rdsk/c0t0d0p0:c and /dev/rdsk/c0t4d0s2:c, the :c suffix indicates the first partition
on the disk contains the pcfs.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wesu _ Interface StabilityStable
fsck(1M), fstyp(1M), fdisk(1M), mkfs(1M), mkfs_pcfs(1M), mountall(1M), attributes(5), pcfs(7FS),
The operating system buffers file system data. Running fsck on a mounted file system can cause the operating sys<hy>
tem's buffers to become out of date with respect to the disk. For this reason, the file system should be unmounted
when fsck is used. If this is not possible, care should be taken that the system is quiescent and that it is rebooted im<hy>
mediately after fsck is run. Quite often, however, this is not sufficient. A panic will probably occur if running fsck
on a file system modifies the file system.
