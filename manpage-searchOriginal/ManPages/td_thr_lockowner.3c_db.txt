<beginning of page>
td_thr_lockowner <-> iterate over the set of locks owned by a thread
cc [ flag... ] file... -lc_db [ library... ]
#include <proc_service.h>
#include <thread_db.h>
td_err_e td_thr_lockowner(const td_thrhandle_t *th_p, td_sync_iter_f *cb,
 void *cb_data_p);
The td_thr_lockowner() function calls the iterator function cb once for every mutex that is held by the thread whose
handle is th_p. The synchronization handle and the pointer cb_data_p are passed to the function. See
td_ta_thr_iter(3C_DB) for a similarly structured function.
Iteration terminates early if the callback function cb returns a non-zero value.
TD_OK The call completed successfully.
TD_BADTH An invalid thread handle was passed in.
TD_BADPH There is a NULL external process handle associated with this internal process handle.
TD_DBERR A call to one of the imported interface routines failed.
TD_ERR A libc_db internal error occurred.
See attributes(5) for description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelSafe
libc_db(3LIB), td_ta_thr_iter(3C_DB), attributes(5)
