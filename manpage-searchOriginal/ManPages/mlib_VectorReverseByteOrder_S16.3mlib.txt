<beginning of page>
mlib_VectorReverseByteOrder_S16, mlib_VectorReverseByteOrder_U16, mlib_VectorReverseByteOrder_S32,
mlib_VectorReverseByteOrder_U32, mlib_VectorReverseByteOrder_S64, mlib_VectorReverseByteOrder_U64,
mlib_VectorReverseByteOrder_F32, mlib_VectorReverseByteOrder_D64 <-> reverse byte order of vector, in place
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VectorReverseByteOrder_S16(mlib_s16 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_U16(mlib_u16 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_S32(mlib_s32 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_U32(mlib_u32 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_S64(mlib_s64 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_U64(mlib_u64 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_F32(mlib_f32 *xz,
 mlib_s32 n);
mlib_status mlib_VectorReverseByteOrder_D64(mlib_d64 *xz,
 mlib_s32 n);
Each of these functions changes the encoding of each element from big endian to little endian, or from little endian
to big endian.
It reverses the byte order of each element of the vector, in place.
Each of the functions takes the following arguments:
xz Pointer to input and output vector.
n Number of elements in the vectors.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VectorReverseByteOrder(3MLIB), mlib_VectorReverseByteOrder_Inp(3MLIB), mlib_VectorReverse<hy>
ByteOrder_S16_S16(3MLIB), attributes(5)
