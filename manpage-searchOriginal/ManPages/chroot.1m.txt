<beginning of page>
chroot <-> change root directory for a command
/usr/sbin/chroot newroot command
The chroot utility causes command to be executed relative to newroot. The meaning of any initial slashes (/) in the
path names is changed to newroot for command and any of its child processes. Upon execution, the initial working
directory is newroot.
Notice that redirecting the output of command to a file,
 chroot newroot command >x
will create the file x relative to the original root of command, not the new one.
The new root path name is always relative to the current root. Even if a chroot is currently in effect, the newroot ar<hy>
gument is relative to the current root of the running process.
This command can be run only by the super-user.
The exit status of chroot is the return value of command. Example 1 Using the chroot Utility
The chroot utility provides an easy way to extract tar files (see tar(1)) written with absolute filenames to a different
location. It is necessary to copy the shared libraries used by tar (see ldd(1)) to the newroot filesystem.
 example# mkdir /tmp/lib; cd /lib
 example# cp ld.so.1 libc.so.1 libcmd.so.1 libdl.so.1 \
  libsec.so.1 /tmp/lib
 example# cp /usr/bin/tar /tmp
 example# dd if=/dev/rmt/0 | chroot /tmp tar xvf -
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
cd(1), tar(1), chroot(2), ttyname(3C), attributes(5)
Exercise extreme caution when referencing device files in the new root file system.
References by routines such as ttyname(3C) to stdin, stdout, and stderr will find that the device associated with the
file descriptor is unknown after chroot is run.
