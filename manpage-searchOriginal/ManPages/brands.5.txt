<beginning of page>
brands <-> alternate operating environments for non-global zones
The branded zone (BrandZ) framework extends the Solaris Zones infrastructure described in zones(5) to include the
creation of brands, which provide non-global zones that contain non-native operating environments.
The term "brand" can refer to a wide range of operating environments. All brand management is performed as exten<hy>
sions to the current zones structure.
Every zone is configured with an associated brand. The brand type is used to determine which scripts are executed
when a zone is installed and booted. In addition, a zone's brand is used to properly identify the correct application
type at application launch time. The default brand is determined by the installed distribution in the global zone.
A branded zone will support exactly one brand of non-native binary, which means that a branded zone provides a
single operating environment. Once a zone has been assigned a brand, that brand cannot be changed or removed.
BrandZ extends the zones tools in the following ways: <bu> A brand is an attribute of a zone, set at zone create time. <bu>
The zonecfg tool (see zonecfg(1M)) is used to set a zone's brand type and configure the zone. <bu> The zoneadm tool
(see zoneadm(1M)) is used to report a zone's brand type and administer the zone.
The devices supported by each zone are documented in the man pages and other documentation for that brand. The
zones infrastructure detects any attempt to add an unsupported device and issues a warning to the administrator. If
the administrator chooses to add an unsupported device despite that warning, that device might or might not work as
expected. The configuration will be untested and unsupported.
See attributes(5) for a description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wzoneu _ Interface StabilityEvolving
mdb(1), zlogin(1), zonename(1), dtrace(1M), in.rlogind(1M), sshd(1M), zoneadm(1M), zonecfg(1M), kill(2),
priocntl(2), getzoneid(3C), ucred_get(3C), getzoneid(3C), proc(4), attributes(5), lx(5), native(5), privileges(5),
zones(5), lx_systrace(7D), crgetzoneid(9F)
