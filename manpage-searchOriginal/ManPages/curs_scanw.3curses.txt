<beginning of page>
curs_scanw, scanw, wscanw, mvscanw, mvwscanw, vwscanw <-> convert formatted input from a curses widow
cc [ flag ... ] file ... -lcurses [ library ... ]
#include <curses.h>
int scanw(char *fmt, /* arg */ ...);
int wscanw(WINDOW *win, char *fmt, /* arg */ ...);
int mvscanw(int y, int x, char *fmt, /* arg */ ...);
int mvwscanw(WINDOW *win, int y, int x, char *fmt, /* arg */...);
int vwscanw(WINDOW *win, char *fmt, va_list varglist);
The scanw(), wscanw(), and mvscanw() routines correspond to scanf() (see scanf(3C)). The effect of these routines
is as though wgetstr() were called on the window, and the resulting line used as input for the scan. Fields which do
not map to a variable in the fmt field are lost.
The vwscanw() routine is similar to vwprintw() in that it performs a wscanw() using a variable argument list. The
third argument is a va_list, a pointer to a list of arguments, as defined in <varargs.h>.
vwscanw() returns ERR on failure and an integer equal to the number of fields scanned on success.
Applications may interrogate the return value from the scanw, wscanw(), mvscanw(), and mvwscanw() routines to
determine the number of fields which were mapped in the call.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelUnsafe
curs_getstr(3CURSES), curs_printw(3CURSES), curses(3CURSES), scanf(3C), attributes(5)
The header <curses.h> automatically includes the headers <stdio.h> and <unctrl.h>.
