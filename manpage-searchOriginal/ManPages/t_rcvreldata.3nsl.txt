<beginning of page>
t_rcvreldata <-> receive an orderly release indication or confirmation containing user data
#include <xti.h>
int t_rcvreldata(int fd, struct t_discon *discon);
This function is used to receive an orderly release indication for the incoming direction of data transfer and to re<hy>
trieve any user data sent with the release. The argument fd identifies the local transport endpoint where the connec<hy>
tion exists, and discon points to a t_discon structure containing the following members:
 struct netbuf udata;
 int reason;
 int sequence;
After receipt of this indication, the user may not attempt to receive more data by means of t_rcv(3NSL) or
t_rcvv(3NSL) Such an attempt will fail with t_error set to TOUTSTATE. However, the user may continue to send
data over the connection if t_sndrel(3NSL) or t_sndreldata (3N) has not been called by the user.
The field reason specifies the reason for the disconnection through a protocol-dependent reason code, and udata
identifies any user data that was sent with the disconnection; the field sequence is not used.
If a user does not care if there is incoming data and does not need to know the value of reason, discon may be a null
pointer, and any user data associated with the disconnection will be discarded.
If discon<->>udata.maxlen is greater than zero and less than the length of the value, t_rcvreldata() fails with t_er<hy>
rno set to TBUFOVFLW.
This function is an optional service of the transport provider, only supported by providers of service type
T_COTS_ORD. The flag T_ORDRELDATA in the info<->>flag field returned by t_open(3NSL) or t_get<hy>
info(3NSL) indicates that the provider supports orderly release user data; when the flag is not set, this function be<hy>
haves like t_rcvrel(3NSL) and no user data is returned.
This function may not be available on all systems.
Upon successful completion, a value of 0 is returned. Otherwise, a value of -1 is returned and t_errno is set to in<hy>
dicate an error.
T_DATAXFER, T_OUTREL.
On failure, t_errno is set to one of the following:
TBADF The specified file descriptor does not refer to a transport endpoint.
TBUFOVFLW The number of bytes allocated for incoming data (maxlen) is greater than 0 but not sufficient to store
the data, and the disconnection information to be returned in discon will be discarded. The provider state, as seen by
the user, will be changed as if the data was successfully retrieved.
TLOOK An asynchronous event has occurred on this transport endpoint and requires immediate attention.
TNOREL No orderly release indication currently exists on the specified transport endpoint.
TNOTSUPPORT Orderly release is not supported by the underlying transport provider.
TOUTSTATE The communications endpoint referenced by fd is not in one of the states in which a call to this func<hy>
tion is valid.
<beginning of page>
TPROTO This error indicates that a communication problem has been detected between XTI and the transport
provider for which there is no other suitable XTI error (t_errno).
TSYSERR A system error has occurred during execution of this function.
In the TLI interface definition, no counterpart of this routine was defined.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT LevelSafe
t_getinfo(3NSL), t_open(3NSL), t_sndreldata(3NSL), t_rcvrel(3NSL), t_sndrel(3NSL), attributes(5)
The interfaces t_sndreldata(3NSL) and t_rcvreldata() are only for use with a specific transport called "minimal
OSI," which is not available on the Solaris platform. These interfaces are not available for use in conjunction with
Internet Transports (TCP or UDP).
