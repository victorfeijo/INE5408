<beginning of page>
abort <-> terminate the process abnormally
#include <stdlib.h>
void abort(void);
The abort() function causes abnormal process termination to occur, unless the signal SIGABRT is being caught and
the signal handler does not return. The abnormal termination processing includes at least the effect of fclose(3C) on
all open streams and message catalogue descriptors, and the default actions defined for SIGABRT. The SIGABRT
signal is sent to the calling process as if by means of the raise(3C) function with the argument SIGABRT.
The status made available to wait(3C) or waitpid(3C) by abort will be that of a process terminated by the SIGA<hy>
BRT signal. abort will override blocking or ignoring the SIGABRT signal.
The abort() function does not return.
No errors are defined.
Catching the signal is intended to provide the application writer with a portable means to abort processing, free from
possible interference from any implementation-provided library functions. If SIGABRT is neither caught nor ig<hy>
nored, and the current directory is writable, a core dump may be produced.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelSafe
exit(2), getrlimit(2), kill(2), fclose(3C), raise(3C), signal(3C), wait(3C), waitpid(3C), attributes(5), standards(5)
