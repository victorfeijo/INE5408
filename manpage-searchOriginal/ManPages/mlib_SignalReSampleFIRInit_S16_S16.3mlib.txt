<beginning of page>
mlib_SignalReSampleFIRInit_S16_S16, mlib_SignalReSampleFIRInit_S16S_S16S, mlib_SignalReSample<hy>
FIRInit_F32_F32, mlib_SignalReSampleFIRInit_F32S_F32S <-> initialization for resampling with filtering
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_SignalReSampleFIRInit_S16_S16(void **state,
 const mlib_f32 *flt, mlib_s32 tap, mlib_s32 ufactor,
 mlib_s32 uphase, mlib_s32 dfactor, mlib_s32 dphase);
mlib_status mlib_SignalReSampleFIRInit_S16S_S16S(void **state,
 const mlib_f32 *flt, mlib_s32 tap, mlib_s32 ufactor,
 mlib_s32 uphase, mlib_s32 dfactor, mlib_s32 dphase);
mlib_status mlib_SignalReSampleFIRInit_F32_F32(void **state,
 const mlib_f32 *flt, mlib_s32 tap, mlib_s32 ufactor,
 mlib_s32 uphase, mlib_s32 dfactor, mlib_s32 dphase);
mlib_status mlib_SignalReSampleFIRInit_F32S_F32S(void **state,
 const mlib_f32 *flt, mlib_s32 tap, mlib_s32 ufactor,
 mlib_s32 uphase, mlib_s32 dfactor, mlib_s32 dphase);
Each of these functions allocates memory for the internal state structure and converts the parameters into an internal
representation for rational sample rate conversion with FIR filtering between upsampling and downsampling.
Each of the functions takes the following arguments:
state Internal state structure.
flt Filter coefficient array, two-channel interleaved in the cases of stereo.
tap Taps of the filter.
ufactor Factor by which to upsample.
uphase Phase in upsampling. 0 <<=> uphase < ufactor.
dfactor Factor by which to downsample.
dphase Phase in downsampling. 0 <<=> dphase < dfactor.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_SignalReSampleFIR_S16_S16_Sat(3MLIB), mlib_SignalReSampleFIR_F32_F32(3MLIB), mlib_Signal<hy>
ReSampleFIRFree_S16_S16(3MLIB), mlib_SignalReSampleFIRFree_F32_F32(3MLIB), attributes(5)
