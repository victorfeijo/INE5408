<beginning of page>
drv_usectohz <-> convert microseconds to clock ticks
#include <sys/types.h>
#include <sys/ddi.h>
clock_t drv_usectohz(clock_t microsecs);
Architecture independent level 1 (DDI/DKI).
microsecs The number of microseconds to convert.
The drv_usectohz() function converts a length of time expressed in microseconds to a number of system clock ticks.
The time arguments to timeout(9F) and delay(9F) are expressed in clock ticks.
The drv_usectohz() function is a portable interface for drivers to make calls to timeout(9F) and delay(9F) and re<hy>
main binary compatible should the driver object file be used on a system with a different clock speed (a different
number of ticks in a second).
The value returned is the number of system clock ticks equivalent to the microsecs argument. No error value is re<hy>
turned. If the clock tick equivalent to microsecs is too large to be represented as a clock_t, then the maximum
clock_t value will be returned.
The drv_usectohz() function can be called from user, interrupt, or kernel context.
delay(9F), drv_hztousec(9F), timeout(9F)
Writing Device Drivers
If the microsecs argument to drv_usectohz() is less than drv_hztousec(9F), drv_usectohz() returns one tick. This,
coupled with multiplication, can result in significantly longer durations than expected. For example, on a machine
where hz is 100, calling drv_usectohz() with a microsecs value less than 10000 returns a result equivalent to 10000
(1 tick). This type of mistake causes code such as"5000 * drv_usectohz(1000)" to compute a duration of 50 seconds
instead of the intended 5 seconds.
