<beginning of page>
wsscanf <-> formatted input conversion
#include<stdio.h>
#include <widec.h>
int wsscanf(wchar_t *s, const char *format, /* pointer */ ... );
The wsscanf() function reads Process Code characters from the Process Code string s, interprets them according to
the format, and stores the results in its arguments. It expects, as arguments, a control string format, and a set of
pointer arguments indicating where the converted input should be stored. The results are undefined if there are insuf<hy>
ficient args for the format. If the format is exhausted while args remain, the excess args are simply ignored.
The conversion specifications and behavior of wsscanf() are the same as the regular sscanf(3C) function except that
the source is a Process Code string for wsscanf() and on Extended Unix Code (EUC) character string for ss<hy>
canf(3C).
Upon successful completion, wsscanf() returns the number of characters matched. Otherwise, it returns a negative
value.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) lw(2.75i) lw(2.75i) lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE MT-LevelMT-Safe
wsprintf(3C), printf(3C), scanf(3C), attributes(5)
