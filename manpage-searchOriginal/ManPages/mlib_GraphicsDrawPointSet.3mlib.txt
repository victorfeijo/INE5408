<beginning of page>
mlib_GraphicsDrawPointSet, mlib_GraphicsDrawPointSet_8, mlib_GraphicsDrawPointSet_32, mlib_Graphics<hy>
DrawPointSet_X_8, mlib_GraphicsDrawPointSet_X_32, mlib_GraphicsDrawPointSet_B_8, mlib_GraphicsDraw<hy>
PointSet_B_32, mlib_GraphicsDrawPolypoint_8, mlib_GraphicsDrawPolypoint_32, mlib_GraphicsDrawPoly<hy>
point_X_8, mlib_GraphicsDrawPolypoint_X_32, mlib_GraphicsDrawPolypoint_B_8, mlib_GraphicsDrawPoly<hy>
point_B_32 <-> draw a set of points
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_GraphicsDrawPointSet_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsDrawPointSet_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsDrawPointSet_X_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsDrawPointSet_X_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsDrawPointSet_B_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
mlib_status mlib_GraphicsDrawPointSet_B_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
mlib_status mlib_GraphicsDrawPolypoint_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsDrawPolypoint_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsDrawPolypoint_X_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
mlib_status mlib_GraphicsDrawPolypoint_X_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
mlib_status mlib_GraphicsDrawPolypoint_B_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
mlib_status mlib_GraphicsDrawPolypoint_B_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
Each of the mlib_GraphicsDrawPointSet_*() and mlib_GraphicsDrawPolypoint_*() functions draws a set of
points at (x1,y1), (x2,y2), ..., and (xn,yn).
Each of the mlib_GraphicsDrawPointSet_X_*() and mlib_GraphicsDrawPolypoint_X_*() functions draws a set
of points at (x1,y1), (x2,y2), ..., and (xn,yn) in Xor mode as follows:
  data[x,y] ^= c ^ c2
Each of the mlib_GraphicsDrawPointSet_B_*() and mlib_GraphicsDrawPolypoint_B_*() functions draws a set
of points at (x1,y1), (x2,y2), ..., and (xn,yn) with alpha blending as follows:
  data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
<beginning of page>
The mlib_GraphicsDrawPolypoint_*() functions are aliases of the mlib_GraphicsDrawPointSet_*() functions.
Each of the functions takes some of the following arguments:
buffer Pointer to the image into which the function is drawing.
x Pointer to array of X coordinates of the points.
y Pointer to array of Y coordinates of the points.
npoints Number of points in the arrays.
c Color used in the drawing.
c2 Alternation color.
a Alpha value for blending. 0 <<=> a <<=> 255.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_GraphicsDrawPoint(3MLIB), attributes(5)
