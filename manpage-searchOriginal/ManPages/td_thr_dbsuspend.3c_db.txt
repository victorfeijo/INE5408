<beginning of page>
td_thr_dbsuspend, td_thr_dbresume <-> suspend and resume threads in libc_db
cc [ flag... ] file... -lc_db [ library... ]
#include <proc_service.h>
#include <thread_db.h>
td_err_e td_thr_dbsuspend(const td_thrhandle_t *th_p);
td_err_e td_thr_dbresume(const td_thrhandle_t *th_p);
These operations do nothing other than call ps_lstop(3PROC) and ps_lcontinue(3PROC), respectively, on the light<hy>
weight process (LWP) identified by the thread handle, th_p. Since ps_lstop() and ps_lcontinue() must be provided
by the caller's application (see proc_service(3PROC)), and the application (a debugger-like entity) has full control
over the stopped state of the process and all of its LWPs, td_thr_dbsuspend() and td_thr_dbresume() are unneces<hy>
sary interfaces. They exist only to maintain interface compatibility with the past.
TD_OK The call completed successfully.
TD_BADTH An invalid thread handle was passed in.
TD_DBERR A call to ps_lstop() or ps_lcontinue() failed.
TD_ERR A libc_db internal error occurred.
See attributes(5) for description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelSafe
libc_db(3LIB), attributes(5)
