<beginning of page>
curs_alecompat, movenextch, wmovenextch, moveprevch, wmoveprevch, adjcurspos, wadjcurspos <-> these functions
are added to ALE curses library for moving the cursor by character.
cc [ flag ... ] file ... -lcurses [ library .. ]
#include <curses.h>
int movenextch(void);
int wmovenextch(WINDOW *win);
int moveprevch(void);
int wmoveprevch(WINDOW *win);
int adjcurspos(void);
int wadjcurspos(WINDOW *win);
movenextch() and wmovenextch() move the cursor to the next character to the right. If the next character is a multi<hy>
column character, the cursor is positioned on the first (left-most) column of that character. The new cursor position
will be on the next character, even if the cursor was originally positioned on the left-most column of a multicolumn
character. Note that the simple cursor increment (++x) does not guarantee movement to the next character, if the
cursor was originally positioned on a multicolumn character. getyx(3CURSES) can be used to find the new position.
moveprevc() and wmoveprevch() routines are the opposite of movenextch() and wmovenextch(), moving the cur<hy>
sor to the left-most column of the previous character.
adjcurspos() and wadjcurspos() move the cursor to the first(left-most) column of the multicolumn character that
the cursor is presently on. If the cursor is already on the first column, or if the cursor is on a single-column charac<hy>
ter, these routines will have no effect.
All routines return the integer ERR upon failure and an integer value other than ERR upon successful completion.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelUnsafe
curses(3CURSES), getyx(3CURSES), attributes(5)
The header file <curses.h> automatically includes the header files <stdio.h> , <unctrl.h> and <widec.h>.
Note that movenextch(), moveprevch(), and adjcurspos() may be macros.
