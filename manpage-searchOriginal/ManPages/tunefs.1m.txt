<beginning of page>
tunefs <-> tune an existing UFS file system
tunefs [-a maxcontig] [-d rotdelay] [-e maxbpg]
 [-m minfree] [-o space | time] special | filesystem
tunefs is designed to change the dynamic parameters of a file system that affect the layout policies. When using
tunefs with filesystem, filesystem must be in /etc/vfstab. The parameters that can be changed are indicated by the op<hy>
tions given below.
The following options are supported:
-a maxcontig The maximum number of logical blocks, belonging to one file, that is allocated contiguously. The de<hy>
fault is calculated as follows:
 maxcontig = disk drive maximum transfer size / disk block size
If the disk drive's maximum transfer size cannot be determined, the default value for maxcontig is calculated from
kernel parameters as follows:
If maxphys is less than ufs_maxmaxphys, which is 1 Mbyte, then maxcontig is set to maxphys. Otherwise, max<hy>
contig is set to ufs_maxmaxphys.
You can set maxcontig to any positive integer value.
The actual value will be the lesser of what has been specified and what the hardware supports.
-d rotdelay This parameter is obsolete as of the Solaris 10 release. The value is always set to 0, regardless of the in<hy>
put value.
-e maxbpg Indicates the maximum number of contiguous logical blocks any single file can allocate from a cylinder
group before it is forced to begin allocating blocks from another cylinder group. Typically this value is set to approx<hy>
imately one quarter of the total contiguous logical blocks in a cylinder group. The intent is to prevent any single file
from using up all the blocks in a single cylinder group, thus degrading access times for all files subsequently allocat<hy>
ed in that cylinder group.
The effect of this limit is to cause big files to do long seeks more frequently than if they were allowed to allocate all
the blocks in a cylinder group before seeking elsewhere. For file systems with exclusively large files, this parameter
should be set higher.
-m minfree Specifies the minimum free space threshold, or the percentage of space held back from normal users.
This value can be set to 0. However, up to a factor of three in throughput will be lost over the performance obtained
at a 10% threshold. Note: If the value is raised above the current usage level, users will be unable to allocate files un<hy>
til enough files have been deleted to get under the higher threshold.
-o space|time The file system can either be instructed to try to minimize the time spent allocating blocks, or to try to
minimize the space fragmentation on the disk. The default is time.
Generally, you should optimize for time unless the file system is over 90% full.
See largefile(5) for the description of the behavior of tunefs when encountering files greater than or equal to 2
Gbyte ( 2^31 bytes).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
<beginning of page>
mkfs_ufs(1M), newfs(1M), attributes(5), largefile(5)
