<beginning of page>
pthread_setcanceltype <-> set cancellation type of a thread
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_setcanceltype(int type, int *oldtype);
The pthread_setcanceltype() function atomically sets the calling thread's cancellation type to the specified type
and, if oldtype is not NULL, stores the previous cancellation type in oldtype. The type can be either of the follow<hy>
ing:
PTHREAD_CANCEL_DEFERRED
This is the default. When cancellation is enabled (enabled cancellation is also the default), cancellation occurs when
the target thread reaches a cancellation point and a cancel is pending. When cancellation is disabled, all cancellation
requests to the target thread are held pending.
PTHREAD_CANCEL_ASYNCHRONOUS
When cancellation is enabled, receipt of a pthread_cancel(3C) call causes immediate cancellation. When cancella<hy>
tion is disabled, all cancellation requests to the target thread are held pending; as soon as cancellation is re-enabled,
pending cancellations are executed immediately.
See cancellation(5) for the definition of a cancellation point and a discussion of cancellation concepts. See
pthread_setcancelstate(3C) for explanations of enabling and disabling cancellation.
The pthread_setcanceltype() function is a cancellation point if type is called with PTHREAD_CANCEL_ASYN<hy>
CHRONOUS and the cancellation state is PTHREAD_CANCEL_ENABLE.
Upon successful completion, the pthread_setcanceltype() function returns 0. Otherwise, an error number is re<hy>
turned to indicate the error.
The pthread_setcanceltype() function will fail if:
EINVAL The specified type is not PTHREAD_CANCEL_DEFERRED or PTHREAD_CANCEL_ASYN<hy>
CHRONOUS.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_cancel(3C), pthread_cleanup_pop(3C), pthread_cleanup_push(3C), pthread_exit(3C),
pthread_join(3C), pthread_setcancelstate(3C), pthread_testcancel(3C), setjmp(3C), attributes(5), cancella<hy>
tion(5), condition(5), standards(5)
