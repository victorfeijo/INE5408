<beginning of page>
fnmatch <-> match filename or path name
#include <fnmatch.h>
int fnmatch(const char *pattern, const char *string, int flags);
The fnmatch() function matches patterns as described on the fnmatch(5) manual page. It checks the string argu<hy>
ment to see if it matches the pattern argument.
The flags argument modifies the interpretation of pattern and string. It is the bitwise inclusive OR of zero or more of
the following flags defined in the header <fnmatch.h>.
FNM_PATHNAME If set, a slash (/) character in string will be explicitly matched by a slash in pattern; it will not
be matched by either the asterisk (*) or question-mark (?) special characters, nor by a bracket ([]) expression.
If not set, the slash character is treated as an ordinary character.
FNM_NOESCAPE If not set, a backslash character (\) in pattern followed by any other character will match that
second character in string. In particular, "\\" will match a backslash in string.
If set, a backslash character will be treated as an ordinary character.
FNM_PERIOD If set, a leading period in string will match a period in pattern; where the location of "leading" is
indicated by the value of FNM_PATHNAME: <bu> If FNM_PATHNAME is set, a period is "leading" if it is the first
character in string or if it immediately follows a slash. <bu> If FNM_PATHNAME is not set, a period is "leading" only
if it is the first character of string.
If not set, no special restrictions are placed on matching a period.
If string matches the pattern specified by pattern, then fnmatch() returns 0. If there is no match, fnmatch() returns
FNM_NOMATCH, which is defined in the header <fnmatch.h>. If an error occurs, fnmatch() returns another non-
zero value.
The fnmatch() function has two major uses. It could be used by an application or utility that needs to read a directo<hy>
ry and apply a pattern against each entry. The find(1) utility is an example of this. It can also be used by the pax(1)
utility to process its pattern operands, or by applications that need to match strings in a similar manner.
The name fnmatch() is intended to imply filename match, rather than pathname match. The default action of this
function is to match filenames, rather than path names, since it gives no special significance to the slash character.
With the FNM_PATHNAME flag, fnmatch() does match path names, but without tilde expansion, parameter ex<hy>
pansion, or special treatment for period at the beginning of a filename.
The fnmatch() function can be used safely in multithreaded applications, as long as setlocale(3C) is not being called
to change the locale.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ CSIEnabled _ In<hy>
terface StabilityStandard _ MT-LevelMT-Safe with exceptions
find(1), pax(1), glob(3C), setlocale(3C), wordexp(3C), attributes(5), fnmatch(5), standards(5)
