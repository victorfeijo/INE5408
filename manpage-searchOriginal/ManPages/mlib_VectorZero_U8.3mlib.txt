<beginning of page>
mlib_VectorZero_U8, mlib_VectorZero_U8C, mlib_VectorZero_S8, mlib_VectorZero_S8C, mlib_VectorZero_S16,
mlib_VectorZero_S16C, mlib_VectorZero_S32, mlib_VectorZero_S32C <-> initialize vector to zero
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VectorZero_U8(mlib_u8 *z, mlib_s32 n);
mlib_status mlib_VectorZero_U8C(mlib_u8 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S8(mlib_s8 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S8C(mlib_s8 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S16(mlib_s16 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S16C(mlib_s16 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S32(mlib_s32 *z, mlib_s32 n);
mlib_status mlib_VectorZero_S32C(mlib_s32 *z, mlib_s32 n);
Each of these functions initializes a vector to zero.
The following equation is used:
 z[i] = 0
where i = 0, 1, ..., (n - 1) for real data; i = 0, 1, ..., (2*n - 1) for complex data.
Each of the functions takes the following arguments:
z Pointer to the first element of the destination vector.
n Number of elements in the vector.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
attributes(5)
