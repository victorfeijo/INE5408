<beginning of page>
rsm_intr_signal_wait_pollfd <-> wait for events on a list of file descriptors
cc [ flag... ] file... -lrsm [ library ... ]
#include <rsmapi.h>
int rsm_intr_signal_wait_pollfd(struct pollfd fds[],
 nfds_t nfds, int timeout, int *numfdsp);
The rsm_intr_signal_wait_pollfd() function is similar to rsm_intr_signal_wait(3RSM), except that it allows an
application to multiplex I/O over various types of file descriptors. Applications can use this function to wait for in<hy>
terrupt signals on RSMAPI segments as well as poll for I/O events on other non-RSMAPI file descriptors.
The fds argument is an array of pollfd structures that correspond to both RSMAPI segments and other file descrip<hy>
tors. The rsm_memseg_get_pollfd(3RSM) is used to obtain a pollfd structure corresponding to an RSMAPI seg<hy>
ment.
The number of file descriptors that have events is returned in numfdsp. This parameter can be set to NULL if the ap<hy>
plication is not interested in the number of file descriptors that have events. See poll(2) for descriptions of the pollfd
structure as well as the nfds and timeout parameters.
It is the application's responsibility to establish the validity of a pollfd structure corresponding to an RSMAPI seg<hy>
ment by ensuring that rsm_memseg_release_pollfd(3RSM) has not been called on the segment or that the segment
has not been destroyed.
For file descriptors other than RSMAPI segments, the behavior of rsm_intr_signal_wait_pollfd() is similar to
poll().
Upon successful completion, rsm_intr_signal_wait_pollfd() returns 0 and the revents member of the pollfd struct
corresponding to an RSMAPI segment is set to POLLRDNORM, indicating that an interrupt signal for that seg<hy>
ment was received. Otherwise, an error value is returned.
For file descriptors other than RSMAPI segments, the revents member of the pollfd struct is identical to that re<hy>
turned by poll(2).
The rsm_intr_signal_wait_pollfd() function can return the following errors:
RSMERR_TIMEOUT
Timeout has occured.
RSMERR_BAD_ARGS_ERRORS
Invalid arguments passed.
RSMERR_BAD_ADDR
An argument points to an illegal address.
RSMERR_INTERRUPTED
The call was interrupted.
RSMERR_INSUFFICIENT_MEM
Insufficient memory.
RSMERR_INSUFFICIENT_RESOURCES
Insufficient resources.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelMT-Safe
poll(2), rsm_intr_signal_wait(3RSM), rsm_memseg_get_pollfd(3RSM), rsm_memseg_release_pollfd(3RSM),
attributes(5)
