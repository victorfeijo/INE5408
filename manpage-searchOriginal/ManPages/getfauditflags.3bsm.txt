<beginning of page>
getfauditflags <-> generate process audit state
cc [ flag... ] file... -lbsm -lsocket -lnsl [ library... ]
#include <sys/param.h>
#include <bsm/libbsm.h>
int getfauditflags(au_mask_t *usremasks, au_mask_t *usrdmasks,
 au_mask_t *lastmasks);
The getfauditflags() function generates a process audit state by combining the audit masks passed as parameters
with the system audit masks specified in the audit_control(4) file. The getfauditflags() function obtains the system
audit value by calling getacflg() (see getacinfo(3BSM)).
The usremasks argument points to au_mask_t fields that contains two values. The first value defines which events
are always to be audited when they succeed. The second value defines which events are always to be audited when
they fail.
The usrdmasks argument points to au_mask_t fields that contains two values. The first value defines which events
are never to be audited when they succeed. The second value defines which events are never to be audited when they
fail.
The structures pointed to by usremasks and usrdmasks can be obtained from the audit_user(4) file by calling getau<hy>
usernam(3BSM), which returns a pointer to a strucure containing all audit_user(4) fields for a user.
The output of this function is stored in lastmasks, a pointer of type au_mask_t as well. The first value defines which
events are to be audited when they succeed and the second defines which events are to be audited when they fail.
Both usremasks and usrdmasks override the values in the system audit values.
Upon successful completion, getfauditflags() returns 0. Otherwise it returns <mi>1.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
bsmconv(1M), getacinfo(3BSM), getauditflags(3BSM), getauusernam(3BSM), audit.log(4), audit_control(4),
audit_user(4), attributes(5)
The functionality described on this manual page is available only if the Solaris Auditing has been enabled. See
bsmconv(1M) for more information.
