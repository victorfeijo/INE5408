<beginning of page>
wcadmin <-> manage the configuration of the Sun Java Web Console
/usr/sbin/wcadmin subcommand options
/usr/sbin/wcadmin [-h| --help]
/usr/sbin/wcadmin [-V | --version]
wcadmin is a Command Line Interface (CLI) <em> based tool for managing the configuration of the Sun Java Web
Console.
The following subcommands are supported:
add The wcadmin add subcommand adds a new shared jar file, a new JAAS login module, or a new shared service
property to the console configuration. An optional identifier may be specified; if omitted, the identifier is derived
from the resource name. The resource is added when the console is next started.
The format of the add subcommand is:
add -l -a appname [-n id] jarpath
add -m -a appname [-n id] -b behavior -s service [-o name=value] classname
add -p -a appname name=value [... name=value]
deploy The wcadmin deploy subcommand deploys the specified web application into the console's web server in<hy>
stance. Applications are deployed directly from their installation directories.
The format of the deploy subcommand is:
deploy [-D] -a appname -x context app_path
disable The wcadmin disable subcommand disables access to the specified web application in the console's web
server instance.
The format of the disable subcommand is:
disable -x context
enable The wcadmin enable subcommand enables access to the specified web application in the console's web
server instance.
The format of the enable subcommand is:
enable -x context
list The wcadmin list subcommand lists the resources currently configured for the console; including deployed web
applications, shared jar files, login modules, and shared service properties. If no option is specified, all resources are
listed.
The format of the list subcommand is:
list [-a] [-d] [-l] [-m] [-p]
password The wcadmin password subcommand manages the administrator and security keystore passwords for the
console. Keystore passwords should not be changed while the console is running.
The format of the password subcommand is:
password [-a] [-k] [-t]
<beginning of page>
password -f password_file
reload The wcadmin reload subcommand unloads the specified web application from the console's web server in<hy>
stance and reloads the application from its original installation directory.
The format of the reload subcommand is:
reload -x context
remove The wcadmin remove subcommand removes a shared jar file, a login module, or a shared service property
from the console configuration. The resource may be specified by its identifier or by its full jarpath or classname.
The resource is removed when the console is next started.
The format of the remove subcommand is:
remove -l -a appname [-n id] jarpath
remove -m -a appname [-n id] classname
remove -p -a appname property [...]
undeploy The wcadmin undeploy subcommand undeploys the specified web application from the console's web
server instance.
The format of the undeploy subcommand is:
undeploy [-D] -a appname -x context
The following options are supported:
-h | --help | -? Display runtime help.
-V | --version Display console version information.
-D | --defer When used with the deploy and undeploy subcommands, defers the deployment or undeployment until
the next console restart. The operation is deferred by simply adding or removing the corresponding resource regis<hy>
tration notification file. If defer is not specified, a runtime deployment or undeployment is performed, so that the ap<hy>
plication becomes available or unavailable in the running console. If the console instance is not currently running,
the operation is automatically deferred.
-a | --adminpassword Specify that the administrator password should be changed, when used with password sub<hy>
command. You are prompted for a new password, which must be 8 to 32 characters.
-a | --application Specify the application name, when used with subcommands other than password subcommand.
-d | --detail Specify that configuration details of each resource should be displayed.
-f Specify the fully qualified path name to a file containing one or more password property values. See the descrip<hy>
tion of the password_file argument.
-k | --keypassword Specify that the keystore password should be changed. You are prompted for a new password,
which must be 8 to 32 characters.
<beginning of page>
-l | --library Specify that the resource is a shared jar file.
-m | --module Specify that the resource is a JAAS login module.
-n | --name Specify the short-hand identifier name for the resource. If omitted, the identifier name is derived from
the full resource name.
-o | --option Specify the name and value of a login module option property, separated by the equals character.
-p | --property Specify that the resource is one or more shared service properties.
-s | --service Specify the name of the JAAS login service definition. If omitted, the default console login service def<hy>
inition is assumed.
-t | --trustpassword Specify that the truststore password should be changed. You are prompted for a new password,
which must be 8 to 32 characters.
-x | --context Specify the web application context path name under which the application is deployed.
app_path The fully qualified file system path to the web application installation directory.
appname The application name. The name must be unique among all web applications registered with the console. It
is also used as the name of the subdirectory under the console's pre-registration directory which contains all the re<hy>
source registration notification files for that application. Typically, the application package name, plugin identifier, or
context path name is specified for the application name.
behavior The JAAS login module control flag behavior. Must be one of "optional", "required", "requisite", or "suffi<hy>
cient".
classname The fully qualified Java package class name of the JAAS login module. The specified class must be in<hy>
cluded in a shared jar file added to the console.
context The web application context path name under which the application is deployed. With the .reg suffix, the
context forms the file name of the registration notification file for that application.
id The short-hand identifier name for a jar file or login module resource to be added or removed. The identifier name
must be unique among the resources shared for a given application name. With the .reg suffix, it forms the file name
of the registration notfication file for that resource.
jarpath The fully qualified file system path to the jar file resource. When the resource is added to the console, its
path is included in the classpath of the console's shared class loader.
option The JAAS login module option property name.
property The shared service property name.
password_file The fully qualified path to a password text file that contains the new administrator, keystore, and trust<hy>
store passwords in property file format. The administrator password is specified using the "adminpassword" proper<hy>
ty. The keystore password is specified using the "keypassword" property. The truststore password is specified using
<beginning of page>
the "trustpasswd" property. At least one password property must be contained in the password file.
value The login module option or shared service property value. If the value contains white space, it must be quoted.
The following command adds a jar file to be shared in the console:
 wcadmin add -l -a myapp_1.0 -n wbem /usr/sadm/lib/wbem.jar
The following command deploys a new web application:
 wcadmin deploy -a myapp_1.0 -x myapp /opt/SUNWmyapp/myapp
The following command reloads an existing web application:
 wcadmin reload -x myapp
The following command undeploys a web application at the next server restart:
 wcadmin undeploy -D -a myapp_1.0 -x myapp
The following command lists all the deployed web applications in the console. If the status field is "running", the
web application is available. If the status field is "stopped", the web application is disabled and is not available. If all
web applications are "stopped", this typically indicates the console web server instance is not running.
 wcadmin list -a
The following command removes a shared jar file:
 wcadmin remove -l -a myapp_1.0 -n wbem
The following command changes passwords that are specified in a file:
 wcadmin password -f /home/mydir/console-passwords
The following exit values are returned:
0 Subcommand succeeded without error
1 Usage error: missing or malformed arguments
2 Fatal error: subcommand failed with one or more errors
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
<beginning of page>
Wmcon _ Interface StabilityStable
smcwebserver(1M), smreg(1M), attributes(5), environ(5)
