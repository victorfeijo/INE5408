<beginning of page>
pthread_mutexattr_init, pthread_mutexattr_destroy <-> initialize or destroy mutex attributes object
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_mutexattr_init(pthread_mutexattr_t *attr);
int pthread_mutexattr_destroy(pthread_mutexattr_t *attr);
The pthread_mutexattr_init() function initializes a mutex attributes object attr with the default value for all of the
attributes defined by the implementation.
The effect of initializing an already initialized mutex attributes object is undefined.
After a mutex attributes object has been used to initialize one or more mutexes, any function affecting the attributes
object (including destruction) does not affect any previously initialized mutexes.
The pthread_mutexattr_destroy() function destroys a mutex attributes object; the object becomes, in effect, unini<hy>
tialized. An implementation may cause pthread_mutexattr_destroy() to set the object referenced by attr to an in<hy>
valid value. A destroyed mutex attributes object can be re-initialized using pthread_mutexattr_init(); the results of
otherwise referencing the object after it has been destroyed are undefined.
Upon successful completion, pthread_mutexattr_init() and pthread_mutexattr_destroy() return 0. Otherwise, an
error number is returned to indicate the error.
The pthread_mutexattr_init() function may fail if:
ENOMEM Insufficient memory exists to initialize the mutex attributes object.
The pthread_mutexattr_destroy() function may fail if:
EINVAL The value specified by attr is invalid.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_cond_init(3C), pthread_create(3C), pthread_mutex_init(3C), pthread_mutexattr_settype(3C), at<hy>
tributes(5), standards(5)
