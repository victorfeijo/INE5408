<beginning of page>
fsck <-> check and repair file systems
fsck [-F FSType] [-m] [-V] [-v] [special]...
fsck [-F FSType] [-n | N | y | Y] [-V] [-v]
 [-o FSType-specific-options] [special]...
fsck audits and interactively repairs inconsistent file system conditions. If the file system is inconsistent the default
action for each correction is to wait for the user to respond yes or no. If the user does not have write permission fsck
defaults to a no action. Some corrective actions will result in loss of data. The amount and severity of data loss can
be determined from the diagnostic output.
FSType-specific-options are options specified in a comma-separated (with no intervening spaces) list of options or
keyword-attribute pairs for interpretation by the FSType-specific module of the command.
special represents the character special device on which the file system resides, for example, /dev/rdsk/c1t0d0s7.
Note: the character special device, not the block special device, should be used. fsck will not work if the block de<hy>
vice is mounted.
If no special device is specified fsck checks the file systems listed in /etc/vfstab. Those entries in /etc/vfstab which
have a character special device entry in the fsckdev field and have a non-zero numeric entry in the fsckpass field
will be checked. Specifying -F FSType limits the file systems to be checked to those of the type indicated.
If special is specified, but -F is not, the file system type will be determined by looking for a matching entry in
/etc/vfstab. If no entry is found, the default local file system type specified in /etc/default/fs will be used.
If a file system type supports parallel checking, for example, ufs, some file systems eligible for checking may be
checked in parallel. Consult the file system-specific man page (for example, fsck_ufs(1M)) for more information.
The following generic options are supported:
-F FSType
Specify the file system type on which to operate.
-m
Check but do not repair. This option checks that the file system is suitable for mounting, returning the appropriate
exit status. If the file system is ready for mounting, fsck displays a message such as:
 ufs fsck: sanity check: /dev/rdsk/c0t3d0s1 okay
-n | -N
Assume a no response to all questions asked by fsck; do not open the file system for writing.
-V
Echo the expanded command line but do not execute the command. This option may be used to verify and to vali<hy>
date the command line.
-v
Enables verbose output. Might not be supported by all filesystem-specific fsck implementations.
-y | Y
Assume a yes response to all questions asked by fsck.
<beginning of page>
-o specific-options
These specific-options can be any combination of the following separated by commas (with no intervening spaces).
b=n
Use block n as the super block for the file system. Block 32 is always one of the alternate super blocks. Determine
the location of other super blocks by running newfs(1M) with the -Nv options specified.
c
If the file system is in the old (static table) format, convert it to the new (dynamic table) format. If the file system is
in the new format, convert it to the old format provided the old format can support the file system configuration. In
interactive mode, fsck will list the direction the conversion is to be made and ask whether the conversion should be
done. If a negative answer is given, no further operations are done on the file system. In preen mode, the direction of
the conversion is listed and done if possible without user interaction. Conversion in preen mode is best used when all
the file systems are being converted at once. The format of a file system can be determined from the first line of out<hy>
put from fstyp(1M). Note: the c option is seldom used and is included only for compatibility with pre-4.1 releases.
There is no guarantee that this option will be included in future releases.
f
Force checking of file systems regardless of the state of their super block clean flag.
p
Check and fix the file system non-interactively ("preen"). Exit immediately if there is a problem requiring interven<hy>
tion. This option is required to enable parallel file system checking.
w
Check writable file systems only.
0
file system is unmounted and OK
1
erroneous parameters are specified
32
file system is unmounted and needs checking (fsck -m only)
33
file system is already mounted
34
cannot stat device
35
a filesystem that is mounted read/write was modified - reboot
<beginning of page>
36
uncorrectable errors detected - terminate normally
37
a signal was caught during processing
39
uncorrectable errors detected - terminate immediately
40
file system is mounted read-only and is OK
The fsck command is large file aware for UFS file systems, per the largefile(5) man page.
/etc/default/fs
default local file system type. Default values can be set for the following flags in /etc/default/fs. For example: LO<hy>
CAL=ufs.
LOCAL
The default partition for a command if no FSType is specified.
/etc/vfstab
list of default parameters for each file system
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilityCommitted
clri(1M), fsck_cachefs(1M), fsck_ufs(1M), fsdb_ufs(1M), fsirand(1M), fstyp(1M), mkfs(1M), mkfs_ufs(1M),
mountall(1M), newfs(1M), reboot( 1M), vfstab(4), attributes(5), largefile(5), ufs(7FS)
The operating system buffers file system data. Running fsck on a mounted file system can cause the operating sys<hy>
tem's buffers to become out of date with respect to the disk. For this reason, the file system should be unmounted
when fsck is used. If this is not possible, care should be taken that the system is quiescent and that it is rebooted im<hy>
mediately after fsck is run. Quite often, however, this will not be sufficient. A panic will probably occur if running
fsck on a file system modifies the file system.
This command may not be supported for all FSTypes.
Starting with Solaris 9, fsck manages extended attribute data on the disk. (See fsattr(5) for a description of extended
file attributes.) A file system with extended attributes can be mounted on versions of Solaris that are not attribute-
aware (versions prior to Solaris 9), but the attributes will not be accessible and fsck will strip them from the files and
place them in lost+found. Once the attributes have been stripped, the file system is completely stable on versions of
Solaris that are not attribute-aware, but would be considered corrupted on attribute-aware versions. In the latter cir<hy>
cumstance, run the attribute-aware fsck to stabilize the file system before using it in an attribute-aware environment.
