<beginning of page>
in_wchnstr, in_wchstr, mvin_wchnstr, mvin_wchstr, mvwin_wchnstr, mvwin_wchstr, win_wchnstr, win_wchstr <->
retrieve complex character string (with rendition)
cc [ flag... ] file... -I /usr/xpg4/include -L /usr/xpg4/lib \
 -R /usr/xpg4/lib -lcurses [ library... ]
c89 [ flag... ] file... -lcurses [ library... ]
#include <curses.h>
int in_wchnstr(cchar_t *wchstr, int n);
int in_wchstr(cchar_t *wchstr);
int mvin_wchnstr(int y, int x, cchar_t *wchstr, int n);
int mvin_wchstr(int y, int x, cchar_t *wchstr);
int mvwin_wchnstr(WINDOW *win, int y, int x, cchar_t *wchstr, int n);
int mvwin_wchstr(WINDOW *win, int y, int x, cchar_t *wchstr);
int win_wchnstr(WINDOW *win, cchar_t *wchstr, int n);
int win_wchstr(WINDOW *win, cchar_t *wchstr);
The in_wchstr() and win_wchstr() functions retrieve a complex character string (with rendition) starting at the cur<hy>
rent cursor position of the stdscr window and window win, respectively, and ending at the right margin. The
mvin_wchstr() and mvwin_wchstr() functions retrieve a complex character string located at the position indicated
by the x (column) and y (row) parameters (the former in the stdscr window; the latter in window win).
The in_wchnstr(), win_wchnstr(), mvin_wchnstr(), and mvwin_wchnstr() functions retrieve at most n characters
from the window stdscr and win, respectively. The former two functions retrieve the string, starting at the current
cursor position; the latter two commands retrieve the string, starting at the position specified by the x and y parame<hy>
ters.
The retrieved character string (with renditions) is stored in the object pointed to by wcval.
wchstr Is a pointer to an object where the retrieved complex character string can be stored.
n Is the number of characters not to exceed when retrieving wchstr.
y Is the y (row) coordinate of the starting position of the string to be retrieved.
x Is the x (column) coordinate of the starting position of the string to be retrieved.
win Is a pointer to the window in which the string is to be retrieved.
On success, these functions return OK. Otherwise, they return ERR.
None.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelUnsafe
in_wch(3XCURSES), libcurses(3XCURSES), attributes(5), standards(5)
