<beginning of page>
elf_fill <-> set fill byte
cc [ flag ... ] file ... -lelf [ library ... ]
#include <libelf.h>
void elf_fill(int fill);
Alignment constraints for ELF files sometimes require the presence of ``holes.'' For example, if the data for one sec<hy>
tion are required to begin on an eight-byte boundary, but the preceding section is too ``short,'' the library must fill the
intervening bytes. These bytes are set to the fill character. The library uses zero bytes unless the application supplies
a value. See elf_getdata(3ELF) for more information about these holes.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT-LevelMT-Safe
elf(3ELF), elf_flagdata(3ELF), elf_getdata(3ELF), elf_update(3ELF), libelf(3LIB), attributes(5)
An application can assume control of the object file organization by setting the ELF_F_LAYOUT bit (see elf_flag<hy>
data(3ELF)). When this is done, the library does not fill holes.
