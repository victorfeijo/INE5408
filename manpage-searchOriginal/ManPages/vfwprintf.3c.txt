<beginning of page>
vfwprintf, vswprintf, vwprintf <-> wide-character formatted output of a stdarg argument list
#include <stdarg.h>
#include <stdio.h>
#include <wchar.h>
int vfwprintf(FILE *restrict stream, const wchar_t *restrict format,
 va_list arg);
int vswprintf(wchar_t *restrict s, size_t n,
 const wchar_t *restrict format, va_list arg);
int vwprintf(const wchar_t *restrict format, va_list arg);
The vwprintf(), vfwprintf(), and vswprintf() functions are the same as wprintf(), fwprintf(), and swprintf() re<hy>
spectively, except that instead of being called with a variable number of arguments, they are called with an argument
list as defined by <stdarg.h>.
These functions do not invoke the va_end() macro. However, as these functions do invoke the va_arg() macro, the
value of ap after the return is indeterminate.
Refer to fwprintf(3C).
Refer to fwprintf(3C).
Applications using these functions should call va_end(ap) afterwards to clean up.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe with exceptions
fwprintf(3C), setlocale(3C), attributes(5), standards(5)
The vwprintf(), vfwprintf(), and vswprintf() functions can be used safely in multithreaded applications, as long as
setlocale(3C) is not being called to change the locale.
