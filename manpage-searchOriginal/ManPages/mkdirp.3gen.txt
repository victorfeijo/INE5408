<beginning of page>
mkdirp, rmdirp <-> create or remove directories in a path
cc [ flag ... ] file ... -lgen [ library ... ]
#include <libgen.h>
int mkdirp(const char *path, mode_t mode);
int rmdirp(char *dir, char *dir1);
The mkdirp() function creates all the missing directories in path with mode. See chmod(2) for the values of mode.
The rmdirp() function removes directories in path dir. This removal begins at the end of the path and moves back<hy>
ward toward the root as far as possible. If an error occurs, the remaining path is stored in dir1.
If path already exists or if a needed directory cannot be created, mkdirp() returns <mi>1 and sets errno to one of the er<hy>
ror values listed for mkdir(2). It returns zero if all the directories are created.
The rmdirp() function returns 0 if it is able to remove every directory in the path. It returns <mi>2 if a ``.'' or ``..'' is in
the path and <mi>3 if an attempt is made to remove the current directory. Otherwise it returns <mi>1. Example 1 Example
of creating scratch directories.
The following example creates scratch directories.
 /* create scratch directories */
 if(mkdirp("/tmp/sub1/sub2/sub3", 0755) == <mi>1) {
  fprintf(stderr, "cannot create directory");
  exit(1);
 }
 chdir("/tmp/sub1/sub2/sub3");
 .
 .
 .
 /* cleanup */
 chdir("/tmp");
 rmdirp("sub1/sub2/sub3");
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
chmod(2), mkdir(2), rmdir(2), malloc(3C), attributes(5)
The mkdirp() function uses malloc(3C) to allocate temporary space for the string.
