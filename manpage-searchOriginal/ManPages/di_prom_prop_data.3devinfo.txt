<beginning of page>
di_prom_prop_data, di_prom_prop_next, di_prom_prop_name <-> access PROM device information
cc [ flag... ] file... -ldevinfo [ library... ]
#include <libdevinfo.h>
di_prom_prop_t di_prom_prop_next(di_prom_handle_t ph, di_node_t node,
 di_prom_prop_t prom_prop);
char *di_prom_prop_name(di_prom_prop_t prom_prop);
int di_prom_prop_data(di_prom_prop_t prom_prop, uchar_t **prop_data);
node Handle to a device node in the snapshot of kernel device tree.
ph PROM handle
prom_prop Handle to a PROM property.
prop_data Address of a pointer.
The di_prom_prop_next() function obtains a handle to the next property on the PROM property list associated
with node. If prom_prop is DI_PROM_PROP_NIL, the first property associated with node is returned.
The di_prom_prop_name() function returns the name of the prom_prop property.
The di_prom_prop_data() function returns the value of the prom_prop property. The return value is a non-negative
integer specifying the size in number of bytes in prop_data.
All memory allocated by these functions is managed by the library and must not be freed by the caller.
The di_prom_prop_data() function returns the number of bytes in prop_data and prop_data is updated to point to a
byte array containing the property value. If 0 is returned, the property is a boolean property and the existence of this
property indicates the value is true.
The di_prom_prop_name() function returns a pointer to a string that contains the name of prom_prop.
The di_prom_prop_next() function returns a handle to the next PROM property. DI_PROM_PROP_NIL is re<hy>
turned if no additional properties exist.
See openprom(7D) for a description of possible errors.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelSafe
attributes(5), openprom(7D)
Writing Device Drivers
