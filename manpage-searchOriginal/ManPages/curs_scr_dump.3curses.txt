<beginning of page>
curs_scr_dump, scr_dump, scr_restore, scr_init, scr_set <-> read or write a curses screen from or to a file
cc [ flag ... ] file ... -lcurses [ library ... ]
#include <curses.h>
int scr_dump(char *filename);
int scr_restore(char *filename);
int scr_init(char *filename);
int scr_set(char *filename);
With the scr_dump() routine, the current contents of the virtual screen are written to the file filename.
With the scr_restore() routine, the virtual screen is set to the contents of filename, which must have been written us<hy>
ing scr_dump(). The next call to doupdate() restores the screen to the way it looked in the dump file.
With the scr_init() routine, the contents of filename are read in and used to initialize the curses data structures about
what the terminal currently has on its screen. If the data is determined to be valid, curses bases its next update of the
screen on this information rather than clearing the screen and starting from scratch. scr_init() is used after initscr()
or a system(3C) call to share the screen with another process which has done a scr_dump() after its endwin() call.
The data is declared invalid if the time-stamp of the tty is old or the terminfo capabilities rmcup() and nrrmc() ex<hy>
ist.
The scr_set() routine is a combination of scr_restore() and scr_init(). It tells the program that the information in
filename is what is currently on the screen, and also what the program wants on the screen. This can be thought of as
a screen inheritance function.
To read (write) a window from (to) a file, use the getwin() and putwin() routines (see curs_util(3CURSES)).
All routines return the integer ERR upon failure and OK upon success.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelUnsafe
curs_initscr(3CURSES), curs_refresh(3CURSES), curs_util(3CURSES), curses(3CURSES), system(3C), at<hy>
tributes(5)
The header <curses.h> automatically includes the headers <stdio.h> and <unctrl.h>.
Note that scr_init(), scr_set(), and scr_restore() may be macros.
