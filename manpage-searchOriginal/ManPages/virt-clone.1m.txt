<beginning of page>
virt-clone <-> clone virtual machine images
/usr/bin/virt-clone [option]
The virt-clone utility is a command line tool for cloning existing virtual machine images. virt-clone copies disk im<hy>
ages of an existing virtual machine and defines a new guest with an identical virtual hardware configuration. Ele<hy>
ments that require uniqueness are updated to avoid a clash between old and new guests.
With appropriate command-line arguments, virt-clone can run completely unattended, with the guest automatically
starting itself as well. This allows for easy automation of guest installs.
If you do not specify options to virt-clone, the command runs interactively, prompting for input as required.
To run virt-clone, you must become superuser or assume the Primary Administrator role.
The following options are supported:
--connect=URI
Connect to the hypervisor at URI.
-d, --debug
Display debugging information when running the install process.
-f disk_image, --file=disk_image
Path to the file, disk partition, or logical volume to use as the backing store for the guest's virtual disk. If the original
guest has multiple disks, this parameter must be repeated multiple times, once per disk in the original virtual ma<hy>
chine.
--force-copy=target
Force to copy devices (for example, if hdc is a read-only CD-ROM device, specify --force-copy=hdc)
-h, --help
Display the help message and exit.
-m mac_addr, --mac=mac_addr
Fixed MAC address for the guest. If the keyword random is specified, a random address will be used.
-n name, --name=name
Name of the new guest virtual machine instance. This must be unique among all guests known to the hypervisor on
this machine, including those not currently active. To redefine an existing guest, use the virsh(1M) tool to shut it
down and delete it prior to running virt-clone. This parameter will be prompted for if omitted on the command line.
--nonsparse
Do not use a sparse file for the clone's disk image.
-o original_guest, --original=original_guest
Name or UUID for the original guest to be cloned. This guest must be shut down since it is not possible to safely
clone active guests.
--original-xml=filename
The libvirt guest XML file to use as the original guest. The guest does not need to be defined on the libvirt connec<hy>
<beginning of page>
tion.
--preserve-data
Preserve a new file to use as the disk image for the new guest.
-u UUID, --uuid=UUID
UUID for the guest; if none is specified, a random UUID is generated. If you specify UUID, use a 32-digit hexadeci<hy>
mal number. Keep in mind that UUIDs are intended to be unique across the entire data center, and indeed, the world.
Example 1 Cloning a Guest with a Single Disk
The following command clones a guest named demo, which has a single disk to copy.
 # virt-clone \
  --original demo \
  --name newdemo \
  --file /var/lib/xen/images/newdemo.img
Example 2 Cloning a Guest with Multiple Disks
The following command clones a guest named demo, with has multiple disks to copy.
 # virt-clone \
  --original demo \
  --name newdemo \
  --file /var/lib/xen/images/newdemo.img \
  --file /var/lib/xen/images/newdata.img
Example 3 Cloning to a Device with Comparable Disk Space
The following command clones a guest to a physical device that has at least as much disk space as had the original
guest. . If the destination device is has more space, the new guest can do a file system resize when it boots.
 # virt-clone \
  --name demo \
  --file /dev/HostVG/DemoVM \
  --mac 00:16:3e:34:11:54
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wxvmu _ Interface StabilityVolatile
virsh(1M), virt-install(1M), xm(1M), xVM(5), attributes(5), xVM(5)
