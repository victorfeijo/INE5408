<beginning of page>
resource.h, resource <-> definitions for resource operations
#include <sys/resource.h>
The <sys/resource.h> header defines the symbolic constants listed below as possible values of the which argument
of getpriority() and setpriority(). See getpriority(3C).
PRIO_PROCESS identifies the who argument as a process ID
PRIO_PGRP identifies the who argument as a process group ID
PRIO_USER identifies the who argument as a user ID
The following type is defined through typedef:
rlim_t unsigned integer type used for limit values
The following symbolic constants are defined:
RLIM_INFINITY a value of rlim_t indicating no limit
RLIM_SAVED_MAX a value of type rlim_t indicating an unrepresentable saved hard limit
RLIM_SAVED_CUR a value of type rlim_t indicating an unrepresentable saved soft limit
The symbolic constants listed below are defined as possible values of the who parameter of getrusage(). See
getrusage(3C).
RUSAGE_SELF returns information about the current process
RUSAGE_CHILDREN returns information about children of the current process
The <sys/resource.h> header defines the rlimit structure, which includes the following members:
 rlim_t rlim_cur /* the current (soft) limit */
 rlim_t rlim_max /* the hard limit */
The <sys/resource.h> header defines the rusage structure, which includes the following members:
 struct timeval ru_utime /* user time used */
 struct timeval ru_stime /* system time used */
The timeval structure is defined as described in <sys/time.h>.
The symbolic constants listed below are defined as possible values for the resource argument of getrlimit() and setr<hy>
limit(). See getrlimit(2).
RLIMIT_CORE limit on size of core dump file
RLIMIT_CPU limit on CPU time per process
RLIMIT_DATA limit on data segment size
<beginning of page>
RLIMIT_FSIZE limit on file size
RLIMIT_NOFILE limit on number of open files
RLIMIT_STACK limit on stack size
RLIMIT_AS limit on address space size
The id_t type is defined through typedef as described in <sys/types.h>. See types.h(3HEAD).
Inclusion of the <sys/resource.h> header can also make visible all symbols from <sys/time.h>. See
time.h(3HEAD).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard
getrlimit(2), getpriority(3C), time.h(3HEAD), types.h(3HEAD), attributes(5), standards(5)
