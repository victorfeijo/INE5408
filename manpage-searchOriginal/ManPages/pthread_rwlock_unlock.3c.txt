<beginning of page>
pthread_rwlock_unlock <-> unlock read-write lock object
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_rwlock_unlock(pthread_rwlock_t *rwlock);
The pthread_rwlock_unlock() function is called to release a lock held on the read-write lock object referenced by
rwlock. Results are undefined if the read-write lock rwlock is not held by the calling thread.
If this function is called to release a read lock from the read-write lock object and there are other read locks currently
held on this read-write lock object, the read-write lock object remains in the read locked state. If this function releas<hy>
es the calling thread's last read lock on this read-write lock object, then the calling thread is no longer one of the
owners of the object. If this function releases the last read lock for this read-write lock object, the read-write lock ob<hy>
ject will be put in the unlocked state with no owners.
If this function is called to release a write lock for this read-write lock object, the read-write lock object will be put
in the unlocked state with no owners.
If the call to the pthread_rwlock_unlock() function results in the read-write lock object becoming unlocked and
there are multiple threads waiting to acquire the read-write lock object for writing, the scheduling policy is used to
determine which thread acquires the read-write lock object for writing. If there are multiple threads waiting to ac<hy>
quire the read-write lock object for reading, the scheduling policy is used to determine the order in which the waiting
threads acquire the read-write lock object for reading. If there are multiple threads blocked on rwlock for both read
locks and write locks, it is unspecified whether the readers acquire the lock first or whether a writer acquires the lock
first.
Results are undefined if any of these functions are called with an uninitialized read-write lock.
If successful, the pthread_rwlock_unlock() function returns 0. Otherwise, an error number is returned to indicate
the error.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_rwlock_init(3C), pthread_rwlock_rdlock(3C), pthread_rwlock_wrlock(3C), pthread_rwlockat<hy>
tr_init(3C), attributes(5), standards(5)
