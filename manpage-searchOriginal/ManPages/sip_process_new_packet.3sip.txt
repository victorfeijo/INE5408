<beginning of page>
sip_process_new_packet <-> send an inbound message to the SIP stack for processing
cc [ flag ... ] file ... -lsip [ library ... ]
#include <sip.h>
void sip_process_new_packet(sip_conn_object_t conn_object,
 void *msgstr, size_t msgstr);
The sip_process_new_packet() function receives incoming message, creates a SIP message, processes it and passes
it on to the application. For a byte-stream protocol like TCP sip_process_new_packet() also takes care of breaking
the byte stream into message boundaries using the CONTENT-LENGTH header in the SIP message. If the SIP
message arriving on TCP does not contain a CONTENT-LENGTH header, the behavior is unspecified.
sip_process_new_packet() deletes the SIP message on return from the application's receive function, thus if the ap<hy>
plication wishes to retain the SIP message for future use, it must use sip_hod_msg() so that the message is not freed
by sip_process_new_packet().
The value of errno is not changed by these calls in the event of an error.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
libsip(3LIB)
