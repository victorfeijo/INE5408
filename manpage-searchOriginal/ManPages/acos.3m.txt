<beginning of page>
acos, acosf, acosl <-> arc cosine functions
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double acos(double x);
float acosf(float x);
long double acosl(long double x);
These functions compute the principal value of the arc cosine of x. The value of x should be in the range [<mi>1,1].
Upon successful completion, these functions return the arc cosine of x in the range [0, <*p> ] radians.
For finite values of x not in the range [<mi>1,1], a domain error occurs and NaN is returned.
If x is NaN, NaN is returned.
If x is +1, +0 is returned.
If x is <+->Inf, a domain error occurs and NaN is returned.
For exceptional cases, matherr(3M) tabulates the values to be returned by acos() as specified by SVID3 and XPG3.
These functions will fail if:
Domain Error The x argument is finite and not in the range [-1,1], or is <+->Inf.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, the invalid floating-point ex<hy>
ception is raised.
The acos() function sets errno to EDOM if x is not <+->Inf or NaN and is not in the range [<mi>1,1].
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
An application can also set errno to 0 before calling acos(). On return, if errno is non-zero, an error has occurred.
The acosf() and acosl() functions do not set errno.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
cos(3M), feclearexcept(3M), fetestexcept(3M), isnan(3M), math.h(3HEAD), matherr(3M), attributes(5), stan<hy>
dards(5)
