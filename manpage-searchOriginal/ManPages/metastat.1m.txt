<beginning of page>
metastat <-> display status for metadevice or hot spare pool
/usr/sbin/metastat -h
/usr/sbin/metastat [-a] [-B] [-D] [-c] [-i] [-p] [-q]
 [-s setname] [-t] [metadevice...] [hot_spare_pool...]
/usr/sbin/metastat [-a] [-B] [-D] [-c] [-i] [-p] [-q]
 [-s setname] component...
The metastat command displays the current status for each metadevice (including stripes, concatenations, concate<hy>
nations of stripes, mirrors, RAID5, soft partitions, and trans devices) or hot spare pool, or of specified metadevices,
components, or hot spare pools.
It is helpful to run the metastat command after using the metattach command to view the status of the metadevice.
metastat displays the state of each Solaris Volume Manager RAID-1 volume on the system. The possible states in<hy>
clude:
Okay The device reports no errors.
Needs maintenance A problem has been detected. This requires that the system administrator replace the failed
physical device. Volumes displaying Needs maintenance have incurred no data loss, although additional failures
could risk data loss. Take action as quickly as possible.
Last erred A problem has been detected. Data loss is a possibility. This might occur if a component of a submirror
fails and is not replaced by a hot spare, therefore going into Needs maintenance state. If the corresponding compo<hy>
nent also fails, it would go into Last erred state and, as there is no remaining valid data source, data loss could be a
possibility.
Unavailable A device cannot be accessed, but has not incurred errors. This might occur if a physical device has been
removed with Solaris Dynamic Reconfiguration (DR) features, thus leaving the Solaris Volume Manager volume un<hy>
available. It could also occur if an array or disk is powered off at system initialization, or if a >1TB volume is
present when the system is booted in 32-bit mode.
After the storage has been made available, run the metastat command with the -i option to update the status of the
metadevices. This clears the unavailable state for accessible devices.
See the for instructions on replacing disks and handling volumes in Needs maintenance or Last erred states.
The following options are supported:
-a Display all disk sets. Only metadevices in disk sets that are owned by the current host are displayed.
-B Display the current status of all of the 64-bit metadevices and hot spares.
-c Display concise output.
There is one line of output for each metadevice. The output shows the basic structure and the error status, if any, for
each metadevice.
The -c output format is distinct from the -p output format. The -p option does not display metadevice status and is
not intended as human-readable output.
-D Display the current status of all of the descriptive name metadevices and hotspares.
-h Display usage message.
<beginning of page>
-i Check the status of RAID-1 (mirror) volumes, RAID-5 volumes, and hot spares. The inquiry checks each metade<hy>
vice for accessibility, starting at the top level metadevice. When problems are discovered, the metadevice state data<hy>
bases are updated as if an error had occurred.
-p Display the list of active metadevices and hot spare pools in the same format as md.tab. See md.tab(4).
The -p output is designed for snapshotting the configuration for later recovery or setup.
-q Display the status for metadevices without the device relocation information.
-s setname Specify the name of the disk set on which metastat works. Using the -s option causes the command to
perform its administrative function within the specified disk set. Without this option, the command performs its
function on metadevices and hot spare pools in the local disk set.
-t Display the current status and timestamp for the specified metadevices and hot spare pools. The timestamp pro<hy>
vides the date and time of the last state change.
The following operands are supported:
component Display the status of the component hosting a soft partition, including extents, starting blocks, and block
count.
hot_spare_pool Display the status of the specified hot spare pool(s).
metadevice Display the status of the specified metadevice(s). If a trans metadevice is specified, the status of the mas<hy>
ter and log devices is also displayed. Trans metadevices have been replaced by UFS logging. See NOTES.
Example 1 Output Showing Mirror with Two Submirrors
The following example shows the partial output of the metastat command after creating a mirror, opt_mirror, con<hy>
sisting of two submirrors, opt_sub1 and opt_sub2.
 # metastat opt_mirror
 opt_mirror: Mirror
  Submirror 0: opt_sub1
  State: Okay
  Submirror 1: opt_sub2
  State: Resyncing
  Resync in progress: 15 % done
  Pass: 1
  Read option: roundrobin (default)
  Write option: parallel (default)
  Size: 2006130 blocks
  .
  .
  .
Example 2 Soft Partition on Mirror with Submirror
The following example shows the partial output of the metastat command after creating a soft partition, d3, on con<hy>
cat d2, which is built on a soft partition.
 # metastat
 d2: Concat/Stripe
  Size: 204800 blocks
<beginning of page>
  Stripe 0:
  Device Start Block Dbase State Hot Spare
  d0 0 No Okay
 d0: Soft Partition
  Component: c0t3d0s0
  Status: Okay
  Size: 204800 blocks
  Extent Start Block Block count
  0 129 204800
 d3: Soft Partition
  Component: d2
  Status: Okay
  Size: 202752 blocks
  Extent Start Block Block count
  0 129 202752
Example 3 Trans Metadevice
The following example shows the output of the metastat command after creating a trans metadevice.
 # metastat
 d2: Concat/Stripe
  Size: 204800 blocks
  Stripe 0:
  Device Start Block Dbase State Hot Spare
  d0 0 No Okay
 d0: Soft Partition
  Component: c0t3d0s0
  Status: Okay
  Size: 204800 blocks
  Extent Start Block Block count
  0 129 204800
 d3: Soft Partition
  Component: d2
  Status: Okay
  Size: 202752 blocks
  Extent Start Block Block count
  0 129 202752
Example 4 Multi-owner disk set
The following example shows the output of the metastat command with a multi-owner disk set and application-
based mirror resynchronization option. Application-based resynchronization is set automatically if needed.
 # metastat -s oban
 oban/d100: Mirror
  Submirror 0: oban/d10
  State: Okay
  Submirror 1: oban/d11
  State: Okay
  Pass: 1
  Read option: roundrobin (default)
  Write option: parallel (default)
  Resync option: application based
  Owner: None
  Size: 1027216 blocks (501 MB)
 oban/d10: Submirror of oban/d100
<beginning of page>
  State: Okay
  Size: 1027216 blocks (501 MB)
  Stripe 0:
  Device Start Block Dbase State Reloc Hot Spare
  c1t3d0s0 0 No Okay
 oban/d11: Submirror of oban/d100
  State: Okay
  Size: 1027216 blocks (501 MB)
  Stripe 0:
  Device Start Block Dbase State Reloc Hot Spare
  c1t4d0s0 0 No Okay
metastat displays states as of the time the command is entered. It is unwise to use the output of the metastat -p
command to create a md.tab(4) file for a number of reasons: <bu> The output of metastat -p might show hot spares be<hy>
ing used. <bu> It might show mirrors with multiple submirrors. See metainit(1M) for instructions for creating multi-
way mirrors using metainit and metattach. <bu> A slice may go into an error state after metastat -p is issued.
The following exit values are returned:
0 Successful completion.
>0 An error occurred.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wmdr _ Interface StabilityStable
mdmonitord(1M), metaclear(1M), metadb(1M), metadetach(1M), metahs(1M), metainit(1M), metaoffline(1M),
metaonline(1M), metaparam(1M), metarecover(1M), metarename(1M), metareplace(1M), metaroot(1M),
metaset(1M), metassist(1M), metasync(1M), metattach(1M), md.tab(4), md.cf(4), mddb.cf(4), md.tab(4), at<hy>
tributes(5), md(7D)

Trans metadevices have been replaced by UFS logging. Existing trans devices are not logging--they pass data direct<hy>
ly through to the underlying device. See mount_ufs(1M) for more information about UFS logging.
