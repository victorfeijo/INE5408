<beginning of page>
sasl_server_init <-> SASL server authentication initialization
cc [ flag ... ] file ... -lsasl [ library ... ]
#include <sasl/sasl.h>
int sasl_server_init(const sasl_callback *callbacks, const char *appname);
Use the sasl_server_init() interface to initialize SASL. You must call sasl_server_init() before you make a call to
sasl_server_start(). sasl_server_init() may be called only once per process. A call to sasl_server_init() initializes
all SASL mechanism drivers, that is, the authentication mechanisms. The SASL mechanism drivers are usually
found in the /usr/lib/sasl directory.
callbacks Specifies the base callbacks for all client connections.
appname The name of the application for lower level logging. For example, the sendmail server calls appname this
way:
 sasl_server_init(srvcallbacks, "Sendmail")
sasl_server_init() returns an integer that corresponds to a SASL error code.
SASL_OK The call to sasl_server_init() was successful.
All other error codes indicate an error situation that must be handled, or the authentication session should be quit.
See sasl_errors(3SASL) for information on SASL error codes.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wlibsasl _ Interface StabilityEvolving _ MT-LevelUnsafe
sasl_errors(3SASL), attributes(5)
While most of libsasl is MT-Safe, no other libsasl function should be called until this function completes.
