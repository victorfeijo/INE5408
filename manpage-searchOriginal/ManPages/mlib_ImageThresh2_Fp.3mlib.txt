<beginning of page>
mlib_ImageThresh2_Fp <-> image thresholding
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_ImageThresh2_Fp(mlib_image *dst, const mlib_image *src,
 const mlib_d64 *thresh, const mlib_d64 *glow);
The mlib_ImageThresh2_Fp() function compares each pixel in the floating-point source image to a threshold val<hy>
ue. If the pixel is less than or equal to the threshold value, then the destination pixel is set to the low output level. If
the pixel is greater than the threshold value, then the destination pixel is set to the value of the source pixel.
It uses the following equation:
 dst[x][y][i] = glow[i] if src[x][y][i] <<=> thresh[i]
 dst[x][y][i] = src[x][y][i] if src[x][y][i] > thresh[i]
The function takes the following arguments:
dst Pointer to destination image.
src Pointer to source image.
thresh Threshold value. thresh[i] contains the threshold for channel i.
glow Low output level. glow[i] contains the low output level for channel i.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_ImageThresh1(3MLIB), mlib_ImageThresh1_Fp(3MLIB), mlib_ImageThresh1_Fp_Inp(3MLIB),
mlib_ImageThresh1_Inp(3MLIB), mlib_ImageThresh2(3MLIB), mlib_ImageThresh2_Fp_Inp(3MLIB),
mlib_ImageThresh2_Inp(3MLIB), mlib_ImageThresh3(3MLIB), mlib_ImageThresh3_Fp(3MLIB), mlib_Im<hy>
ageThresh3_Fp_Inp(3MLIB), mlib_ImageThresh3_Inp(3MLIB), mlib_ImageThresh4(3MLIB), mlib_Im<hy>
ageThresh4_Fp(3MLIB), mlib_ImageThresh4_Fp_Inp(3MLIB), mlib_ImageThresh4_Inp(3MLIB), mlib_Im<hy>
ageThresh5(3MLIB), mlib_ImageThresh5_Fp(3MLIB), mlib_ImageThresh5_Fp_Inp(3MLIB), mlib_ImageTh<hy>
resh5_Inp(3MLIB), attributes(5)
