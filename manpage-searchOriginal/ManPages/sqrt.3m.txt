<beginning of page>
sqrt, sqrtf, sqrtl <-> square root function
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double sqrt(double x);
float sqrtf(float x);
long double sqrtl(long double x);
These functions compute the square root of their argument x.
Upon successful completion, these functions return the square root of x.
For finite values of x < <mi>0, a domain error occurs and either a NaN (if supported) or an implementation-defined val<hy>
ue is returned.
If x is NaN, a NaN is returned.
If x is <+->0 or +Inf, x is returned.
If x is <mi>Inf, a domain error occurs and a NaN is returned.
These functions will fail if:
Domain Error The finite value of x is < <mi>0 or x is <mi>Inf.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, the invalid floating-point ex<hy>
ception is raised.
The sqrt() function sets errno to EDOM if the value of x is negative.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
An application can also set errno to 0 before calling sqrt(). On return, if errno is non-zero, an error has occurred.
The sqrtf() and sqrtl() functions do not set errno.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
feclearexcept(3M), fetestexcept(3M), isnan(3M), math.h(3HEAD), attributes(5), standards(5)
