<beginning of page>
dat_rsp_free <-> destroy an instance of the Reserved Service Point
cc [ flag... ] file... -ldat [ library... ]
#include <dat/udat.h>
DAT_RETURN
 dat_rsp_free (
 IN DAT_RSP_HANDLE rsp_handle
 )
rsp_handle Handle for an instance of the Reserved Service Point.
The dat_rsp_free() function destroys a specified instance of the Reserved Service Point.
Any incoming Connection Requests for the Connection Qualifier on the destroyed Service Point was listening on are
automatically rejected by the Provider with the return analogous to the no listening Service Point.
The behavior of the Connection Requests in progress is undefined and left to an implementation, but it must be con<hy>
sistent. This means that either a Connection Requested Event was generated for the Event Dispatcher associated
with the Service Point, including the creation of the Connection Request instance, or the Connection Request is re<hy>
jected by the Provider without any local notification.
This operation has no effect on previously generated Connection Request Event and Connection Request.
The behavior of this operation with creation of a Service Point on the same Connection Qualifier at the same time is
not defined. Consumers are advised to avoid this scenario.
For the Reserved Service Point, the Consumer-provided Endpoint reverts to Consumer control. Consumers shall be
aware that due to a race condition, this Reserved Service Point might have generated a Connection Request Event
and passed the associated Endpoint to a Consumer in it.
Use of the handle of the destroyed Service Point in any consequent operation fails.
DAT_SUCCESS The operation was successful.
DAT_INVALID_HANDLE The rsp_handle parameter is invalid.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard: uDAPL, 1.1, 1.2 _ MT-LevelUnsafe
libdat(3LIB), attributes(5)
