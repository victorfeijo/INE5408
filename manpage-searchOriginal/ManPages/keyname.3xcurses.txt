<beginning of page>
keyname, key_name <-> return character string used as key name
cc [ flag... ] file... -I /usr/xpg4/include -L /usr/xpg4/lib \
 -R /usr/xpg4/lib -lcurses [ library... ]
c89 [ flag... ] file... -lcurses [ library... ]
#include <curses.h>
char *keyname(int c);
char *key_name(wchar_t wc);
c Is an 8 bit-character or a key code.
wc Is a wide character key name.
The keyname() function returns a string pointer to the key name. Make a duplicate copy of the returned string if
you plan to modify it.
The key_name() function is similar except that it accepts a wide character key name.
The following table shows the format of the key name based on the input.
tab() box; lw(1.99i) lw(3.51i) lw(1.99i) lw(3.51i) InputFormat of Key Name Visible characterThe same character
Control character^X Meta-character (keyname() only)M-X T{ Key value defined in <curses.h> (keyname() only)
T}KEY_name None of the aboveUNKNOWN KEY
In the preceding table, X can be either a visible character with the high bit cleared or a control character.
On success, these functions return a pointer to the string used as the key's name. Otherwise, they return a null point<hy>
er.
None.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelUnsafe
libcurses(3XCURSES), meta(3XCURSES), attributes(5), standards(5)
