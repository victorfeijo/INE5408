<beginning of page>
add_allocatable <-> add entries to allocation databases
/usr/sbin/add_allocatable [-f] [-s] [-d] -n name -t type -l device-list
 [-a authorization] [-c clean] [-o key=value]
add_allocatable creates new entries for user allocatable devices that are to be managed by the device allocation
mechanism. add_allocatable can also be used to update existing entries of such devices.
add_allocatable can also create and update entries for non-allocatable devices, such as printers, whose label range is
managed by the device allocation mechanism.
add_allocatable can be used in shell scripts, such as installation scripts for driver packages, to automate the admin<hy>
istrative work of setting up a new device.
Use list_devices(1) to see the names and types of allocatable devices, their attributes, and device paths.
-f Force an update of an already-existing entry with the specified information. add_allocatable exits with an error if
this option is not specified when an entry with the specified device name already exists.
-s Turn on silent mode. add_allocatable does not print any error or warning messages.
-d If this option is present, add_allocatable updates the system-supplied default attributes of the device type speci<hy>
fied with -t.
-n name Adds or updates an entry for device that is specified by name.
-t type Adds or updates device entries that are of a type that are specified by type.
-l device-list Adds or updates device paths to the device that is specified with -n. Multiple paths in device-list must
be separated by white spaces and the list must be quoted.
-a authorization Adds or updates the authorization that is associated with either the device that is specified with -n
or with devices of the type that is specified with -t. When more than one authorization is specified, the list must be
separated by commas and must be quoted. When the device is not allocatable, authorization is specified with an as<hy>
terisk (*) and must be quoted. When the device is allocatable by any user, authorization is specified with the at sign
(@) and must be quoted. Default authorization is '@'.
-c clean Specifies the device_clean(5) program clean to be used with the device that is specified with -n or with de<hy>
vices of the type that is specified with -t. The default clean program is /bin/true.
-o key=value Accepts a string of colon-separated key=value pairs for a device that is specified with -n or with de<hy>
vices of the type that is specified with -t. The following keys are currently interpreted by the system:
minlabel The minimum label at which the device can be used.
maxlabel The maximum label at which the device can be used.
class Specifies a logical grouping of devices. For example, all Sun RayTM devices of all device types is a logical
grouping. The class keyword has no default value.
xdpy Specifies the display name of the X session. This keyword is used to identify devices that are associated with
the X session. The xdpy keyword has no default value.
<beginning of page>
When successful, add_allocate returns an exit status of 0 (true). add_allocate returns a nonzero exit status in the
event of an error. The exit codes are as follows:
1 Invocation syntax error
2 Unknown system error
3 An entry already exists for the specified device. This error occurs only when the -f option is not specified.
4 Permission denied. User does not have DAC or MAC access record updates.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.82i) |cw(2.68i) lw(2.82i) |lw(2.68i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Availability<hy>
SUNWtsu _ Interface StabilitySee below.
The invocation is Uncommitted. The options are Uncommitted. The output is Not-an-Interface.
allocate(1), deallocate(1), list_devices(1), remove_allocatable(1M), attributes(5), device_clean(5)
The functionality described on this manual page is available only if the system is configured with Trusted Exten<hy>
sions.
