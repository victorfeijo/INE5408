<beginning of page>
dis <-> object code disassembler
dis [-onqCLV] [-d sec] [-D sec] [-F function]
 [-l string] [-t sec] file...
The dis command produces an assembly language listing of file, which can be an object file or an archive of object
files. The listing includes assembly statements and an octal or hexadecimal representation of the binary that pro<hy>
duced those statements.
Options are interpreted by the disassembler and can be specified in any order.
The following options are supported:
-C Displays demangled C++ symbol names in the disassembly.
-d sec Disassembles the named section as data, printing the offset of the data from the beginning of the section.
-D sec Disassembles the named section as data, printing the actual address of the data.
-F function Disassembles only the named function in each object file specified on the command line. The -F option
can be specified multiple times on the command line.
-l string Disassembles the archive file specified by string. For example, one would issue the command dis -l x -l z to
disassemble libx.a and libz.a, which are assumed to be in LIBDIR.
This option is obsolete and might be removed in a future release of Solaris.
-L Invokes a lookup of C-language source labels in the symbol table for subsequent writing to standard output.
This option is obsolete and might be removed in a future release of Solaris.
-n Displays all addresses numerically. Addresses are displayed using symbolic names by default.
-o Prints numbers in octal. The default is hexadecimal.
-q Quiet mode. Does not print any headers or function entry labels.
-t sec Disassembles the named section as text.
-V Prints, on standard error, the version number of the disassembler being executed.
This option is obsolete and might be removed in a future release of Solaris.
If the -d, -D, or -t options are specified, only those named sections from each user-supplied file is disassembled.
Otherwise, all sections containing text is disassembled.
On output, a number enclosed in brackets at the beginning of a line, such as [5], indicates that the break-pointable
line number starts with the following instruction. These line numbers is printed only if the file was compiled with
additional debugging information.
The following operand is supported:
file A path name of an object file or an archive (see ar(1)) of object files.
<beginning of page>
See environ(5) for descriptions of the following environment variables that affect the execution of dis: LC_CTYPE,
LC_MESSAGES, and NLSPATH.
LIBDIR If this environment variable contains a value, use this as the path to search for the library. If the variable
contains a null value, or is not set, it defaults to searching for the library under /usr/lib.
The following exit values are returned:
0 Successful completion.
>0 An error occurred.
/usr/lib default LIBDIR
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wbtool _ Interface StabilitySee below.
The human readable output is Uncommitted. The command line options are Committed.
ar(1), as(1), ld(1), a.out(4), attributes(5), environ(5)
The self-explanatory diagnostics indicate errors in the command line or problems encountered with the specified
files.
