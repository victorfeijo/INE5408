<beginning of page>
fmli <-> invoke FMLI
fmli [-a alias_file] [-c command_file]
 [-i initialization_file] filename...
The fmli command invokes the Form and Menu Language Interpreter and opens the frame(s) specified by the file<hy>
name argument. The filename argument is the pathname of the initial frame definition file(s), and must follow the
naming convention Menu.xxx, Form.xxx, or Text.xxx for a menu, form or text frame respectively, where xxx is any
string that conforms to UNIX system file naming conventions. The FMLI descriptor lifetime will be ignored for
all frames opened by argument to fmli. These frames have a lifetime of immortal by default.
The following options are supported:
-a alias_file If -a is specified, alias_file is the name of a file which contains lines of the form alias=pathname. There<hy>
after, $alias can be used in definition files to simplify references to objects or devices with lengthy pathnames, or to
define a search path (similar to $PATH in the UNIX system shell).
-c command_file If -c is specified, command_file is the name of a file in which default FMLI commands can be dis<hy>
abled, and new application-specific commands can be defined. The contents of command_file are reflected in the
FMLI Command Menu.
-i initialization_file If -i is specified, initialization_file is the name of a file in which the following characteristics of
the application as a whole can be specified:
<mi> A transient introductory frame displaying product information
<mi> A banner, its position, and other elements of the banner line
<mi> Color attributes for all elements of the screen
<mi> Screen Labeled Keys (SLKs) and their layout on the screen.
Example 1 Examples of the fmli command.
To invoke fmli:
 example% fmli Menu.start
where Menu.start is an example of filename named according to the file name conventions for menu definition files
explained above.
To invoke fmli and name an initialization file:
 example% fmli -i init.myapp Menu.start
where init.myapp is an example of initialization_file.
LOADPFK Leaving this environment variable unset tells FMLI, for certain terminals like the AT&T 5620 and 630,
to download its equivalent character sequences for using function keys into the terminal's programmable function
keys, wiping out any settings the user may already have set in the function keys. Setting LOADPFK=NO in the en<hy>
vironment will prevent this downloading.
<beginning of page>
COLUMNS Can be used to override the width of the logical screen defined for the terminal set in TERM. For ter<hy>
minals with a 132-column mode, for example, invoking FMLI with the line
COLUMNS=132 fmli frame-file
will allow this wider screen width to be used.
LINES Can be used to override the length of the logical screen defined for the terminal set in TERM.
/usr/bin/fmli
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
vsig(1F), attributes(5)
If filename is not supplied to the fmli command, fmli returns the message:
Initial object must be specified.
If filename does not exist or is not readable, fmli returns an error message and exits. The example command line
above returns the following message and exits:
Can't open object "Menu.start"
If filename exists, but does not start with one of the three correct object names (Menu., Form., or Text.) or if it is
named correctly but does not contain the proper data, fmli starts to build the screen by putting out the screen labels
for function keys, after which it flashes the message:
I do not recognize that kind of object
and then exits.
