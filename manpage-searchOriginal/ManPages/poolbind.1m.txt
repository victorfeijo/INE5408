<beginning of page>
poolbind <-> bind processes, tasks, or projects or query binding of processes to resource pools
/usr/sbin/poolbind -p poolname -e command [arguments]...
/usr/sbin/poolbind -p poolname [-i idtype] id...
/usr/sbin/poolbind -q pid...
/usr/sbin/poolbind -Q pid...
The poolbind command allows an authorized user to bind zones, projects, tasks, and processes to pools. With the -e
option (see below), it can execute a command you specify, placing the executed command in a specified pool. It can
also enable you to query a process to determine which pool a process is bound to.
The following options are supported:
-e command [arguments...] Executes command, bound to the pool you specify with -p.
-i idtype This option, together with the idlist arguments, specifies one or more processes to which the poolbind com<hy>
mand is to apply. The interpretation of idlist depends on the value of idtype. The valid idtype arguments and corre<hy>
sponding interpretations of idlist are as follows:
pid idlist is a list of process IDs. Binds the specified processes to the specified pool. This is the default behavior if no
idtype is specified.
taskid idlist is a list of task IDs. Bind all processes within the list of task IDs to the specified pool.
projid idlist is a list of project IDs. Bind all processes within the list of projects to the specified pool. Each project
ID can be specified as either a project name or a numerical project ID. See project(4).
zoneid idlist is a list of zone IDs. Bind all processes within the list of zones to the specified pool. Each zone ID can
be specified as either a zone name or a numerical zone ID. See zones(5).
-p poolname Specifies the name of a pool to which the specified zone, project, tasks, or processes are to be bound.
-q pid ... Queries the pool bindings for a given list of process IDs. If the collection of resources associated with the
process does not correspond to any currently existing pool, or if there are multiple pools with the set of resources
that the process is bound to, the query fails for that particular process ID.
-Q pid ...
 Queries the resource bindings for a given list of process IDs. The resource bindings are each reported on a separate
line.
Example 1 Binding All Processes
The following command binds all processes in projects 5 and 7 to the pool web_app:
 example# /usr/sbin/poolbind -p web_app -i projid 5 7
Example 2 Binding the Running Shell
The following command binds the running shell to the pool web_app:
  example# /usr/sbin/poolbind -p web_app $$
<beginning of page>
Example 3 Querying the Pool Bindings
The following command queries the bindings to verify that the shell is bound to the given pool:
 example# /usr/sbin/poolbind -q $$
Example 4 Querying the Resource Bindings
The following command queries the bindings to verify that the shell is bound to the given resources:
 example# /usr/sbin/poolbind -Q $$
The following exit values are returned:
0 Successful completion.
1 Requested operation could not be completed.
2 Invalid command line options were specified.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUNW<hy>
pool _ Interface Stability See below.
The invocation is Evolving. The output is Unstable.
pooladm(1M), poolcfg(1M), libpool(3LIB), project(4), attributes(5), zones(5)

