<beginning of page>
sched.h, sched <-> execution scheduling
#include <sched.h>
The <sched.h> header defines the sched_param structure, which contains the scheduling parameters required for
implementation of each supported scheduling policy. This structure contains the following member:
 int sched_priority process execution scheduling priority
Each process is controlled by an associated scheduling policy and priority. Associated with each policy is a priority
range. Each policy definition specifies the minimum priority range for that policy. The priority ranges for each poli<hy>
cy may overlap the priority ranges of other policies.
The scheduling policies are indicated by the values of the following symbolic constants:
SCHED_OTHER Processes are scheduled according to the traditional Time-Sharing Class (TS) policy as described
in priocntl(2).
SCHED_FIFO Processes are scheduled in the Real-Time (RT) scheduling class, according to the First-In-First-Out
(FIFO) policy. Processes scheduled to this policy, if not preempted by a higher priority or interrupted by a signal,
will proceed until completion.
SCHED_RR Processes are scheduled in the Real-Time (RT) scheduling class, according to the Round-Robin (RR)
policy. Processes scheduled to this policy, if not preempted by a higher priority or interrupted by a signal, will ex<hy>
ecute for a time period, returned by sched_rr_get_interval(3C) or by the system.
SCHED_IA Processes are scheduled according to the Inter-Active Class (IA) policy as described in priocntl(2).
SCHED_FSS Processes are scheduled according to the Fair-Share Class (FSS) policy as described in priocntl(2).
SCHED_FX Processes are scheduled according to the Fixed-Priority Class (FX) policy as described in priocntl(2).
The values of these constants are distinct.
Inclusion of the <sched.h> header will make visible symbols defined in the header <time.h>.
priocntl(2), sched_get_priority_max(3C), sched_get_priority_min(3C), sched_rr_get_interval(3C),
time.h(3HEAD)
