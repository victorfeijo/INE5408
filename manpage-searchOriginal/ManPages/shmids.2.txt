<beginning of page>
shmids <-> discover all shared memory identifiers
#include <sys/shm.h>
int shmids(int *buf, uint_t nids, uint_t *pnids);
The shmids() function copies all active shared memory identifiers from the system into the user-defined buffer spec<hy>
ified by buf, provided that the number of such identifiers is not greater than the number of integers the buffer can
contain, as specified by nids. If the size of the buffer is insufficient to contain all of the active shared memory identi<hy>
fiers in the system, none are copied.
Whether or not the size of the buffer is sufficient to contain all of them, the number of active shared memory identi<hy>
fiers in the system is copied into the unsigned integer pointed to by pnids.
If nids is 0 or less than the number of active shared memory identifiers in the system, buf is ignored.
Upon successful completion, shmids() returns 0. Otherwise, <mi>1 is returned and errno is set to indicate the error.
The shmids() function will fail if:
EFAULT The buf or pnids argument points to an illegal address.
The shmids() function returns a snapshot of all the active shared memory identifiers in the system. More may be
added and some may be removed before they can be used by the caller. Example 1 shmids() example
This is sample C code indicating how to use the shmids() function.
 void
 examine_shmids()
 {
  int *ids = NULL;
  uint_t nids = 0;
  uint_t n;
  int i;
  for (;;) {
  if (shmids(ids, nids, &n) != 0) {
  perror("shmids");
  exit(1);
  }
  if (n <= nids) /* we got them all */
  break;
  /* we need a bigger buffer */
  ids = realloc(ids, (nids = n) * sizeof (int));
  }
  for (i = 0; i < n; i++)
  process_shmid(ids[i]);
  free(ids);
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelAsync-
Signal-Safe
ipcrm(1), ipcs(1), Intro(2), shmctl(2), shmget(2), shmop(2), attributes(5)
