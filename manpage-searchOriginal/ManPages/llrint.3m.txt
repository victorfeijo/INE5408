<beginning of page>
llrint, llrintf, llrintl <-> round to nearest integer value using current rounding direction
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
long long llrint(double x);
long long llrintf(float x);
long long llrintl(long double x);
These functions round their argument to the nearest integer value, rounding according to the current rounding direc<hy>
tion.
 Upon successful completion, these functions return the rounded integer value.
If x is NaN, a domain error occurs and an unspecified value is returned.
If x is +Inf, a domain error occurs and an unspecified value is returned.
If x is -Inf, a domain error occurs and an unspecified value is returned.
If the correct value is positive and too large to represent as a long long, a domain error occurs and an unspecified
value is returned.
 If the correct value is negative and too large to represent as a long long, a domain error occurs and an unspecified
value is returned.
These functions will fail if:
Domain Error The x argument is NaN or <+->Inf, or the correct value is not representable as an integer.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the invalid floating-point
exception will be raised.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
These functions provide floating-to-integer conversions. They round according to the current rounding direction. If
the rounded value is outside the range of the return type, the numeric result is unspecified and the invalid floating-
point exception is raised. When they raise no other floating-point exception and the result differs from the argument,
they raise the inexact floating-point exception.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
feclearexcept(3M), fetestexcept(3M), lrint(3M), math.h(3HEAD), attributes(5), standards(5)
