<beginning of page>
dat_ep_get_status <-> provide a quick snapshot of the Endpoint
cc [ flag... ] file... -ldat [ library... ]
#include <dat/udat.h>
DAT_RETURN
 dat_ep_get_status (
 IN DAT_EP_HANDLE ep_handle,
 OUT DAT_EP_STATE *ep_state,
 OUT DAT_BOOLEAN *recv_idle,
 OUT DAT_BOOLEAN *request_idle
 )
ep_handle Handle for an instance of the Endpoint.
ep_state Current state of the Endpoint.
recv_idle Status of the incoming DTOs on the Endpoint.
request_idle Status of the outgoing DTOs and RMR Bind operations on the Endpoint.
the dat_ep_get_status() function provides the Consumer a quick snapshot of the Endpoint. The snapshot consists of
the Endpoint state and whether there are outstanding or in-progress, incoming or outgoing DTOs. Incoming DTOs
consist of Receives. Outgoing DTOs consist of the Requests, Send, RDMA Read, RDMA Write, and RMR Bind.
The ep_state parameter returns the value of the current state of the Endpoint ep_handle. State value is one of the fol<hy>
lowing: DAT_EP_STATE_UNCONNECTED, DAT_EP_STATE_RESERVED, DAT_EP_STATE_PAS<hy>
SIVE_CONNECTION_PENDING, DAT_EP_STATE_ACTIVE_CONNECTION_PENDING,
DAT_EP_STATE_TENTATIVE_CONNECTION_PENDING, DAT_EP_STATE_CONNECTED,
DAT_EP_STATE_DISCONNECT_PENDING, or DAT_EP_STATE_DISCONNECTED.
A recv_idle value of DAT_TRUE specifies that there are no outstanding or in-progress Receive DTOs at the End<hy>
point, and DAT_FALSE otherwise.
A request_idle value of DAT_TRUE specifies that there are no outstanding or in-progress Send, RDMA Read, and
RDMA Write DTOs, and RMR Binds at the Endpoint, and DAT_FALSE otherwise.
This call provides a snapshot of the Endpoint status only. No heroic synchronization with DTO queuing or process<hy>
ing is implied.
DAT_SUCCESS The operation was successful.
DAT_INVALID_HANDLE The ep_handle parameter is invalid.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard: uDAPL, 1.1, 1.2 _ MT-LevelSafe
libdat(3LIB), attributes(5)
