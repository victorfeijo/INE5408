<beginning of page>
shell <-> run a command using shell
shell command [command] ...
The shell function concatenate its arguments, separating each by a space, and passes this string to the shell
($SHELL if set, otherwise /usr/bin/sh). Example 1 A sample output of shell command.
Since the Form and Menu Language does not directly support background processing, the shell function can be used
instead.
 `shell "build prog > /dev/null &"`
If you want the user to continue to be able to interact with the application while the background job is running, the
output of an executable run by shell in the background must be redirected: to a file if you want to save the output, or
to /dev/null if you don't want to save it (or if there is no output), otherwise your application may appear to be hung
until the background job finishes processing.
shell can also be used to execute a command that has the same name as an FMLI built-in function.
The arguments to shell will be concatenate using spaces, which may or may not do what is expected. The variables
set in local environments will not be expanded by the shell because "local" means "local to the current process."
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
sh(1), attributes(5)
