<beginning of page>
cpc_open, cpc_close <-> initialize the CPU Performance Counter library
cc [ flag... ] file... -lcpc [ library... ]
#include <libcpc.h>
cpc_t *cpc_open(int vers);
int cpc_close(cpc_t *cpc);
The cpc_open() function initializes libcpc(3LIB) and returns an identifier that must be used as the cpc argument in
subsequent libcpc function calls. The cpc_open() function takes an interface version as an argument and returns
NULL if that version of the interface is incompatible with the libcpc implementation present on the system. Usually,
the argument has the value of CPC_VER_CURRENT bound to the application when it was compiled.
The cpc_close() function releases all resources associated with the cpc argument. Any bound counters utilized by
the process are unbound. All entities of type cpc_set_t and cpc_buf_t are invalidated and destroyed.
If the version requested is supported by the implementation, cpc_open() returns a cpc_t handle for use in all subse<hy>
quent libcpc operations. If the implementation cannot support the version needed by the application, cpc_open() re<hy>
turns NULL, indicating that the application at least needs to be recompiled to operate correctly on the new platform
and might require further changes.
The cpc_close() function always returns 0.
These functions will fail if:
EINVAL The version requested by the client is incompatible with the implementation.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelSafe
libcpc(3LIB), attributes(5)
