<beginning of page>
priv_getbyname <-> map a privilege name to a number
#include <sys/cred.h>
int priv_getbyname(const char *priv, int flags);
Solaris DDI specific (Solaris DDI).
priv name of the privilege
flags flags, must be zero or PRIV_ALLOC
The priv_getbyname() function maps a privilege name to a privilege number for use with the priv_*() kernel inter<hy>
faces.
If PRIV_ALLOC is passed as a flag parameter, an attempt is made to allocate a privilege if it is not yet defined. The
newly allocated privilege number is returned.
Privilege names can be specified with an optional priv_ prefix, which is stripped.
Privilege names are case insensitive but allocated privileges preserve case.
Allocated privileges can be at most {PRIVNAME_MAX} characters long and can contain only alphanumeric char<hy>
acters and the underscore character.
This function returns the privilege number, which is greater than or equal to 0, if it succeeds. It returns a negative er<hy>
ror number if an error occurs.
EINVAL This might be caused by any of the following <bu> The flags parameter is invalid. <bu> The specified privilege
does not exist. <bu> The priv parameter contains invalid characters.
ENOMEM There is no room to allocate another privilege.
ENAMETOOLONG An attempt was made to allocate a privilege that was longer than {PRIVNAME_MAX} char<hy>
acters.
This functions can be called from user and kernel contexts.
See attributes(5) for a description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ ArchitectureAll _
Interface StabilityCommitted
attributes(5), privileges(5)
Writing Device Drivers
