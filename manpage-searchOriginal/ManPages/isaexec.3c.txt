<beginning of page>
isaexec <-> invoke isa-specific executable
#include <unistd.h>
int isaexec(const char *path, char *const argv[], char *const envp[]);
The isaexec() function takes the path specified as path and breaks it into directory and file name components. It en<hy>
quires from the running system the list of supported instruction set architectures; see isalist(5). The function travers<hy>
es the list for an executable file in named subdirectories of the original directory. When such a file is located, ex<hy>
ecve() is invoked with argv[] and envp[]. See exec(2).
If no file is located, isaexec() returns ENOENT. Other return values are the same as for execve(). Example 1 Ex<hy>
ample of isaexec() function.
On a system whose isalist is
 sparcv7 sparc
the program
 int
 main(int argc, char *argv[], char *envp[])
 {
  return (isaexec("/bin/thing", argv, envp));
 }
will look first for an executable file named /bin/sparcv7/thing, then for an executable file named /bin/sparc/thing.
It will invoke execve() on the first executable file it finds named thing.
On that same system, a program called /u/bin/tofu can cause either /u/bin/sparcv7/tofu or /u/bin/sparc/tofu to be
invoked using the following code:
 int
 main(int argc, char *argv[], char *envp[])
 {
  return (isaexec(getexecname(), argv, envp));
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelSafe _ In<hy>
terface StabilityStable
exec(2), getexecname(3C), attributes(5), isalist(5)
