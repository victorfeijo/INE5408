<beginning of page>
wcscoll, wscoll <-> wide character string comparison using collating information
#include <wchar.h>
int wcscoll(const wchar_t *ws1, const wchar_t *ws2);
int wscoll(const wchar_t *ws1, const wchar_t *ws2);
The wcscoll() and wscoll() functions compare the wide character string pointed to by ws1 to the wide character
string pointed to by ws2, both interpreted as appropriate to the LC_COLLATE category of the current locale.
The wcscoll() and wscoll() functions do not change the setting of errno if successful.
An application wanting to check for error situations should set errno to 0 before calling wcscoll() or wscoll(). If er<hy>
rno is non-zero on return, an error has occurred.
Upon successful completion, wcscoll() and wscoll() return an integer greater than, equal to, or less than 0, depending
upon whether the wide character string pointed to by ws1 is greater than, equal to, or less than the wide character
string pointed to by ws2, when both are interpreted as appropriate to the current locale. On error, wcscoll() and ws<hy>
coll() may set errno, but no return value is reserved to indicate an error.
The wcscoll() and wscoll() functions may fail if:
EINVAL The ws1 or ws2 arguments contain wide character codes outside the domain of the collating sequence.
The wcsxfrm(3C) and wcscmp(3C) functions should be used for sorting large lists.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ CSIEnabled _ Inter<hy>
face Stabilitywcscoll() is Standard _ MT-LevelMT-Safe with exceptions
The wcscoll() and wscoll() functions can be used safely in multithreaded applications as long as setlocale(3C) is not
being called to change the locale.
setlocale(3C), wcscmp(3C), wcsxfrm(3C), attributes(5), standards(5)
