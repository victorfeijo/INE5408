<beginning of page>
kill <-> send a signal to a process or a group of processes
#include <sys/types.h>
#include <signal.h>
int kill(pid_t pid, int sig);
The kill() function sends a signal to a process or a group of processes. The process or group of processes to which
the signal is to be sent is specified by pid. The signal that is to be sent is specified by sig and is either one from the
list given in signal (see signal.h(3HEAD)), or 0. If sig is 0 (the null signal), error checking is performed but no sig<hy>
nal is actually sent. This can be used to check the validity of pid.
The real or effective user ID of the sending process must match the real or saved (from one of functions in the ex<hy>
ec(2) family) user ID of the receiving process, unless the privilege {PRIV_PROC_OWNER} is asserted in the ef<hy>
fective set of the sending process (see Intro(2)), or sig is SIGCONT and the sending process has the same session
ID as the receiving process. A process needs the basic privilege {PRIV_PROC_SESSION} to send signals to a
process with a different session ID. See privileges(5).
If pid is greater than 0, sig will be sent to the process whose process ID is equal to pid.
If pid is negative but not (pid_t)<mi>1, sig will be sent to all processes whose process group ID is equal to the absolute
value of pid and for which the process has permission to send a signal.
If pid is 0, sig will be sent to all processes excluding special processes (see Intro(2)) whose process group ID is
equal to the process group ID of the sender.
If pid is (pid_t)<mi>1 and the {PRIV_PROC_OWNER} privilege is not asserted in the effective set of the sending
process, sig will be sent to all processes excluding special processes whose real user ID is equal to the effective user
ID of the sender.
If pid is (pid_t)<mi>1 and the {PRIV_PROC_OWNER} privilege is asserted in the effective set of the sending
process, sig will be sent to all processes excluding special processes.
Upon successful completion, 0 is returned. Otherwise, <mi>1 is returned, no signal is sent, and errno is set to indicate
the error.
The kill() function will fail if:
EINVAL The sig argument is not a valid signal number.
EPERM The sig argument is SIGKILL and the pid argument is (pid_t)-1 (that is, the calling process does not have
permission to send the signal to any of the processes specified by pid).
The effective user of the calling process does not match the real or saved user and the calling process does not have
the {PRIV_PROC_OWNER} privilege asserted in the effective set, and the calling process either is not sending
SIGCONT to a process that shares the same session ID or does not have the {PRIV_PROC_SESSION} privilege
asserted and is trying to send a signal to a process with a different session ID.
ESRCH No process or process group can be found corresponding to that specified by pid.
The sigsend(2) function provides a more versatile way to send signals to processes.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelAsync-Signal-Safe
kill(1), Intro(2), exec(2), getpid(2), getsid(2), setpgrp(2), sigaction(2), sigsend(2), signal(3C), signal.h(3HEAD),
attributes(5), privileges(5), standards(5)
