<beginning of page>
elf_hash <-> compute hash value
cc [ flag ... ] file ... -lelf [ library ... ]
#include <libelf.h>
unsigned long elf_hash(const char *name);
The elf_hash() function computes a hash value, given a null terminated string, name. The returned hash value, h, can
be used as a bucket index, typically after computing h mod x to ensure appropriate bounds.
Hash tables may be built on one machine and used on another because elf_hash() uses unsigned arithmetic to avoid
possible differences in various machines' signed arithmetic. Although name is shown as char* above, elf_hash()
treats it as unsigned char* to avoid sign extension differences. Using char* eliminates type conflicts with expres<hy>
sions such as elf_hash(name).
ELF files' symbol hash tables are computed using this function (see elf_getdata(3ELF) and elf32_xlatetof(3ELF)).
The hash value returned is guaranteed not to be the bit pattern of all ones ( ~0UL).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT-LevelMT-Safe
elf(3ELF), elf32_xlatetof(3ELF), elf_getdata(3ELF), libelf(3LIB), attributes(5)
