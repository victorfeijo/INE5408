<beginning of page>
sysevent_get_vendor_name, sysevent_get_pub_name, sysevent_get_pid <-> get vendor name, publisher name or pro<hy>
cessor ID of event
cc [flag ...] file... -lsysevent [library ...]
#include <libsysevent.h>
char *sysevent_get_vendor_name(sysevent_t *ev);
char *sysevent_get_pub_name(sysevent_t *ev);
pid_t sysevent_get_pid(sysevent_t *ev);
ev handle to a system event object
The sysevent_get_pub_name() function returns the publisher name for the sysevent handle, ev. The publisher name
identifies the name of the publishing application or kernel subsystem of the sysevent.
The sysevent_get_pid() function returns the process ID for the publishing application or SE_KERN_PID for sysev<hy>
ents originating in the kernel. The publisher name and PID are useful for implementing event acknowledgement.
The sysevent_get_vendor_name() function returns the vendor string for the publishing application or kernel sub<hy>
system. A vendor string is the company's stock symbol that provided the application or kernel subsystem that gener<hy>
ated the system event. This information is useful for filtering sysevents for one or more vendors.
The interface manages the allocation of the vendor and publisher name strings, but it is the caller's responsibility to
free the strings when they are no longer needed by calling free(3MALLOC). If the new vendor and publisher name
strings cannot be created, sysevent_get_vendor_name() and sysevent_get_pub_name() return a null pointer and
may set errno to ENOMEM to indicate that the storage space available is insufficient. Example 1 Parse sysevent
header information.
The following example parses sysevent header information from an application's event handler.
 char *vendor;
 char *pub;
 void
 event_handler(sysevent_t *ev)
 {
  if (strcmp(EC_PRIV, sysevent_get_class_name(ev)) != 0) {
  return;
  }
  vendor = sysevent_get_vendor_name(ev);
  if (strcmp("SUNW", vendor) != 0) {
  free(vendor);
  return;
  }
  pub = sysevent_get_pub_name(ev);
  if (strcmp("test_daemon", pub) != 0) {
  free(vendor);
  free(pub);
  return;
  }
  (void) kill(sysevent_get_pid(ev), SIGUSR1);
  free(vendor);
  free(pub);
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
<beginning of page>
Committed _ MT-LevelMT-Safe
malloc(3MALLOC), attributes(5)
The libsysevent interfaces do not work at all in non-global zones.
