<beginning of page>
volmgt_check <-> have Volume Management check for media
cc [ flag... ] file... -lvolmgt [ library ... ]
#include <volmgt.h>
int volmgt_check(char *pathname);
This function is obsolete. The management of removable media by the Volume Management feature, including vold,
has been replaced by software that supports the Hardware Abstraction Layer (HAL). Programmatic support for HAL
is through the HAL APIs, which are documented on the HAL web site. See hal(5). The return value of this function
is undefined.
This routine asks volume Management to check the specified pathname and determine if new media has been insert<hy>
ed in that drive.
If a null pointer is passed in, then Volume Management will check each device it is managing that can be checked.
If new media is found, volmgt_check() tells volume management to initiate appropriate actions.
The return from this function is undefined.
This routine can fail, returning 0, if a stat(2) or open(2) of the supplied pathname fails, or if any of the following is
true:
ENXIO volume management is not running.
EINTR An interrupt signal was detected while checking for media.
Example 1 Checking If Any New Media Is Inserted
To check if any drive managed by volume management has any new media inserted in it:
 if (volmgt_check(NULL)) {
  (void) printf("Volume management found media\n");
 }
This would also request volume management to take whatever action was appropriate for the new media.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
volcheck(1), open(2), stat(2), volmgt_inuse(3VOLMGT), volmgt_running(3VOLMGT), attributes(5), hal(5)
Since volmgt_check() returns 0 for two different cases (both when no media is found, and when an error occurs), it
is up to the user to check errno to differentiate the two, and to ensure that volume management is running.
