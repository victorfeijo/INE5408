<beginning of page>
sasl_server_start <-> create a new server authentication object
cc [ flag ... ] file ... -lsasl [ library ... ]
#include <sasl/sasl.h>
int sasl_server_start(sasl_conn_t *conn, const char *mech,
 const char *clientin, unsigned *clientinlen,
 const char **serverout, unsigned *serveroutlen);
The sasl_server_start() interface begins the authentication with the mechanism specified by the mech parameter.
sasl_server_start() fails if the mechanism is not supported.
conn The SASL context for this connection.
mech The mechanism name that the client requested.
clientin The initial response from the client. The value of clientin is NULL if the protocol lacks support for the
client-send-first or if the other end did not have an initial send. No initial client send is distinct from an initial send
of a null string. The protocol must account for this difference.
clientinlen The length of the initial response.
serverout Created by the plugin library. The value of serverout is the initial server response to send to the client.
serverout is allocated or freed by the library. It is the job of the client to send it over the network to the server. Proto<hy>
col specific encoding, for example base64 encoding, must be done by the server.
serveroutlen The length of the initial server challenge.
sasl_server_start() returns an integer that corresponds to a SASL error code.
SASL_OK Authentication completed successfully.
SASL_CONTINUE The call to sasl_server_start() was successful, and more steps are needed in the authentica<hy>
tion.
All other error codes indicate an error situation that must be handled, or the authentication session should be quit.
See sasl_errors(3SASL) for information on SASL error codes.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wlibsasl _ Interface StabilityEvolving _ MT-LevelMT-Safe
gethostname(3C), sasl_errors(3SASL), attributes(5)
