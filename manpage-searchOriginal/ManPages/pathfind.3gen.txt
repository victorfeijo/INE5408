<beginning of page>
pathfind <-> search for named file in named directories
cc [ flag ... ] file ... -lgen [ library ... ]
#include <libgen.h>
char *pathfind(const char *path, const char *name, const char *mode);
The pathfind() function searches the directories named in path for the file name. The directories named in path are
separated by colons (:). The mode argument is a string of option letters chosen from the set [rwxfbcdpugks]:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) LetterMeaning _ rreadable _ wwritable _ xexecutable _ fnormal
file _ bblock special _ ccharacter special _ ddirectory _ pFIFO (pipe) _ uset user ID bit _ gset group ID bit _ ksticky
bit _ ssize non-zero
Options read, write, and execute are checked relative to the real (not the effective) user ID and group ID of the cur<hy>
rent process.
If name begins with a slash, it is treated as an absolute path name, and path is ignored.
An empty path member is treated as the current directory. A slash (/) character is not prepended at the occurrence of
the first match; rather, the unadorned name is returned. Example 1 Example of finding the ls command using the
PATH environment variable.
To find the ls command using the PATH environment variable:
pathfind (getenv ("PATH"), "ls", "rx")
The pathfind() function returns a (char *) value containing static, thread-specific data that will be overwritten upon
the next call from the same thread.
If the file name with all characteristics specified by mode is found in any of the directories specified by path, then
pathfind() returns a pointer to a string containing the member of path, followed by a slash character (/), followed by
name.
If no match is found, pathname() returns a null pointer, ((char *) 0).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
sh(1), test(1), access(2), mknod(2), stat(2), getenv(3C), attributes(5)
The string pointed to by the returned pointer is stored in an area that is reused on subsequent calls to pathfind(). The
string should not be deallocated by the caller.
When compiling multithreaded applications, the _REENTRANT flag must be defined on the compile line. This
flag should only be used in multithreadedapplications.
