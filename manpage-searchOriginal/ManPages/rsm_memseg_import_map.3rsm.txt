<beginning of page>
rsm_memseg_import_map, rsm_memseg_import_unmap <-> map or unmap imported segment
cc [ flag... ] file... -lrsm [ library... ]
#include <rsmapi.h>
int rsm_memseg_import_map(rsm_memseg_import_handle_t im_memseg,
 void **address, rsm_attribute_t attr,
 rsm_permission_t perm, off_t offset, size_t length);
int rsm_memseg_import_unmap(rsm_memseg_import_handle_t im_memseg);
The rsm_memseg_import_map() and rsm_memseg_import_unmap() functions provide for mapping and unmap<hy>
ping operations on imported segments. The mapping operations are only available for native architecture intercon<hy>
nects such as Dolphin-SCI or Sun Fire Link. Mapping a segment allows that segment to be accessed by CPU memo<hy>
ry operations, saving the overhead of calling the memory access primitives described on the rsm_memseg_im<hy>
port_get(3RSM) and rsm_memseg_import_put(3RSM) manual pages.
The rsm_memseg_import_map() function maps an import segment into caller's address space for the segment to
be accessed by CPU memory operations. The im_memseg argument represents the import segment that is being
mapped. The location where the process's address space is mapped to the segment is pointed to by the address argu<hy>
ment. The attr argiment can be one fo the following:
RSM_MAP_NONE The system will choose available virtual address to map and return its value in the address ar<hy>
gument.
RSM_MAP_FIXED The import segment should be mapped at the requested virtual address specified in the ad<hy>
dress argument.
The perm argument determines whether read, write or a combination of accesses are permitted to the data being
mapped. It can be either RSM_PERM_READ, RSM_PERM_WRITE, or RSM_PERM_RDWR.
The offset argument is the byte offset location from the base of the segment being mapped to address. The length ar<hy>
gument indicates the number of bytes from offset to be mapped.
The rsm_memseg_import_unmap() function unmaps a previously mapped import segment.
Upon successful completion, these functions return 0. Otherwise, an error value is returned to indicate the error.
The rsm_memseg_import_map() and rsm_memseg_import_unmap() functions can return the following errors:
RSMERR_BAD_SEG_HNDL Invalid segment handle.
The rsm_memseg_import_map() function can return the following errors:
RSMERR_BAD_ADDR Invalid address.
RSMERR_BAD_LENGTH Invalid length.
RSMERR_BAD_MEM_ALIGNMENT The address is not aligned on a page boundary.
RSMERR_BAD_OFFSET Invalid offset.
RSMERR_BAD_PERMS Invalid permissions.
RSMERR_CONN_ABORTED Connection aborted.
<beginning of page>
RSMERR_MAP_FAILED Map failure.
RSMERR_SEG_ALREADY_MAPPED Segment already mapped.
RSMERR_SEG_NOT_CONNECTED Segment not connected.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPE ATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelMT-Safe
rsm_memseg_import_connect(3RSM), rsm_memseg_import_get(3RSM), rsm_memseg_import_put(3RSM),
rsm_memseg_get_pollfd(3RSM), attributes(5)
