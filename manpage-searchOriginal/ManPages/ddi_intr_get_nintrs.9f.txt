<beginning of page>
ddi_intr_get_nintrs, ddi_intr_get_navail <-> return number of interrupts supported or available for a given interrupt
type
#include <sys/types.h>
#include <sys/conf.h>
#include <sys/ddi.h>
#include <sys/sunddi.h>
int ddi_intr_get_nintrs(dev_info_t *dip, int type, int *nintrsp);
int ddi_intr_get_navail(dev_info_t *dip, int type, int *navailp);
Solaris DDI specific (Solaris DDI).
ddi_intr_get_nintrs()
dip Pointer to dev_info structure
type Interrupt type
nintrsp Pointer to number of interrupts of the given type that are supported by the system
ddi_intr_get_navail()
dip Pointer to dev_info structure
type Interrupt type
navailp Pointer to number of interrupts of the given type that are currently available from the system
The ddi_intr_get_nintrs() function returns the number of interrupts of the given type supported by a particular
hardware device. On a successful return, the number of supported interrupts is returned as an integer pointed to by
the nintrsp argument.
If the hardware device is not found to support any interrupts of the given type, the DDI_INTR_NOTFOUND failure
is returned rather than a zero in nintrsp.
The ddi_intr_get_navail() function returns the number of interrupts of a given type that is available to a particular
hardware device. On a successful return, the number of available interrupts is returned as an integer pointed to by
navailp.
The hardware device may support more than one interrupt and can request that all interrupts be allocated. The host
software can then use policy-based decisions to determine how many interrupts are made available to the device.
Based on the determination, a value is returned that should be used to allocate interrupts with the ddi_int_alloc()
function.
The ddi_intr_get_supported_types(9F) function returns a list of valid supported types for the given hardware de<hy>
vice. It must be called prior to calling either the ddi_intr_get_nintrs() or ddi_intr_get_navail().
The ddi_intr_get_nintrs() and ddi_intr_get_navail() functions return:
DDI_SUCCESS On success.
DDI_EINVAL On encountering invalid input parameters.
DDI_INTR_NOTFOUND On not finding any interrupts for the given interrupt type.
<beginning of page>
DDI_FAILURE On any implementation specific failure.
The ddi_intr_get_nintrs() and ddi_intr_get_navail() functions can be called from either user or kernel non-inter<hy>
rupt context.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed
attributes(5), ddi_intr_alloc(9F), ddi_intr_enable(9F), ddi_intr_get_supported_types(9F)
Writing Device Drivers
The ddi_intr_get_nintrs() and ddi_intr_get_navail() functions can be called at any time, even if the driver has
added an interrupt handler for a given interrupt specification.
On x86 platforms, the number of interrupts returned by the ddi_intr_get_navail() function might need to be further
reduced by the number of interrupts available for each interrupt priority on the system. In that case, drivers should
use different priorities for some of the interrupts.
Consumers of these interfaces should verify that the return value is not equal to DDI_SUCCESS. Incomplete check<hy>
ing for failure codes could result in inconsistent behavior among platforms.
