<beginning of page>
_lwp_suspend, _lwp_continue <-> continue or suspend LWP execution
#include <sys/lwp.h>
int _lwp_suspend(lwpid_t target_lwp);
int _lwp_continue(lwpid_t target_lwp);
The _lwp_suspend() function immediately suspends the execution of the LWP specified by target_lwp. On success<hy>
ful return from _lwp_suspend(), target_lwp is no longer executing. Once a thread is suspended, subsequent calls to
_lwp_suspend() have no affect.
The _lwp_continue() function resumes the execution of a suspended LWP. Once a suspended LWP is continued,
subsequent calls to _lwp_continue() have no effect.
A suspended LWP will not be awakened by a signal. The signal stays pending until the execution of the LWP is re<hy>
sumed by _lwp_continue().
Upon successful completion, 0 is returned. A non-zero value indicates an error.
If the following condition occurs, _lwp_suspend() and _lwp_continue() fail and return the corresponding value:
ESRCH The target_lwpid argument cannot be found in the current process.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelAsync-
Signal-Safe
attributes(5)
