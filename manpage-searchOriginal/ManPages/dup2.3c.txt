<beginning of page>
dup2 <-> duplicate an open file descriptor
#include <unistd.h>
int dup2(int fildes, int fildes2);
The dup2() function causes the file descriptor fildes2 to refer to the same file as fildes. The fildes argument is a file
descriptor referring to an open file, and fildes2 is a non-negative integer less than the current value for the maximum
number of open file descriptors allowed the calling process. See getrlimit(2). If fildes2 already refers to an open
file, not fildes, it is closed first. If fildes2 refers to fildes, or if fildes is not a valid open file descriptor, fildes2 will not
be closed first.
The dup2() function is equivalent to fcntl(fildes, F_DUP2FD, fildes2).
Upon successful completion a non-negative integer representing the file descriptor is returned. Otherwise, <mi>1 is re<hy>
turned and errno is set to indicate the error.
The dup2() function will fail if:
EBADF The fildes argument is not a valid open file descriptor.
EBADF The fildes2 argument is negative or is not less than the current resource limit returned by getrlimit(RLIM<hy>
IT_NOFILE, ...).
EINTR A signal was caught during the dup2() call.
EMFILE The process has too many open files. See fcntl(2).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelAsync-Signal-Safe
close(2), creat(2), exec(2), fcntl(2), getrlimit(2), open(2), pipe(2), attributes(5), standards(5)
