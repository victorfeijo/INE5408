<beginning of page>
m_getvalues_layout <-> query layout values of a LayoutObject
cc [ flag... ] file... -llayout [ library... ]
#include <sys/layout.h>
int m_getvalues_layout(const LayoutObject
 layout_object, LayoutValues values, int *index_returned);
The m_getvalues_layout() function queries the current setting of layout values within a LayoutObject.
The layout_object argument specifies a LayoutObject returned by the m_create_layout(3LAYOUT) function.
The values argument specifies the list of layout values that are to be queried. Each value element of a LayoutVal<hy>
ueRec must point to a location where the layout value is stored. That is, if the layout value is of type T, the argu<hy>
ment must be of type T*. The values are queried from the LayoutObject and represent its current state.
It is the user's responsibility to manage the space allocation for the layout values queried. If the layout value name
has QueryValueSize OR-ed to it, instead of the value of the layout value, only its size is returned. The caller can use
this option to determine the amount of memory needed to be allocated for the layout values queried.
Upon successful completion, the m_getvalues_layout() function returns 0. If any value cannot be queried, the index
of the value causing the error is returned in index_returned, <mi>1 is returned and errno is set to indicate the error.
The m_getvalues_layout() function may fail if:
EINVAL The layout value specified by index_returned is unknown, its value is invalid, or the layout_object argu<hy>
ment is invalid. In the case of an invalid layout_object argument, the value returned in index_returned is <mi>1.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
m_create_layout(3LAYOUT), attributes(5), standards(5)
