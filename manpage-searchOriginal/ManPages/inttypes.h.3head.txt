<beginning of page>
inttypes.h, inttypes <-> fixed size integer types
#include <inttypes.h>
The <inttypes.h> header includes the <stdint.h> header.
The <inttypes.h> header includes a definition of the following type:
imaxdiv_t structure type that is the type of the value returned by the imaxdiv() function.
The following macros are defined. Each expands to a character string literal containing a conversion specifier, possi<hy>
bly modified by a length modifier, suitable for use within the format argument of a formatted input/output function
when converting the corresponding integer type. These macros have the general form of PRI (character string liter<hy>
als for the fprintf() and fwprintf() family of functions) or SCN (character string literals for the fscanf() and fws<hy>
canf() family of functions), followed by the conversion specifier, followed by a name corresponding to a similar type
name in <stdint.h>. In these names, N represents the width of the type as described in <stdint.h>. For example,
PRIdFAST32 can be used in a format string to print the value of an integer of type int_fast32_t.
The fprintf() macros for signed integers are:
 PRIdN PRIdLEASTN PRIdFASTN PRIdMAX PRIdPTR
 PRIiN PRIiLEASTN PRIiFASTN PRIiMAX PRIiPTR
The fprintf() macros for unsigned integers are:
 PRIoN PRIoLEASTN PRIoFASTN PRIoMAX PRIoPTR
 PRIuN PRIuLEASTN PRIuFASTN PRIuMAX PRIuPTR
 PRIxN PRIxLEASTN PRIxFASTN PRIxMAX PRIxPTR
 PRIXN PRIXLEASTN PRIXFASTN PRIXMAX PRIXPTR
The fscanf() macros for signed integers are:
 SCNdN SCNdLEASTN SCNdFASTN SCNdMAX SCNdPTR
 SCNiN SCNiLEASTN SCNiFASTN SCNiMAX SCNiPTR
The fscanf() macros for unsigned integers are:
 SCNoN SCNoLEASTN SCNoFASTN SCNoMAX SCNoPTR
 SCNuN SCNuLEASTN SCNuFASTN SCNuMAX SCNuPTR
 SCNxN SCNxLEASTN SCNxFASTN SCNxMAX SCNxPTR
For each type that the implementation provides in <stdint.h>, the corresponding fprintf() and fwprintf() macros
must be defined. The corresponding fscanf() and fwscanf() macros must be defined as well, unless the implementa<hy>
tion does not have a suitable modifier for the type.
The purpose of <inttypes.h> is to provide a set of integer types whose definitions are consistent across machines
and independent of operating systems and other implementation idiosyncrasies. It defines, with a typedef, integer
types of various sizes. Implementations are free to typedef them as ISO C standard integer types or extensions that
they support. Consistent use of this header greatly increases the portability of applications across platforms. Exam<hy>
ple 1 Use of Macro
The following code uses one of the macros available through <inttypes.h>.
 #include <inttypes.h>
 #include <wchar.h>
 int main(void)
 {
  uintmax_t i = UINTMAX_MAX; // This type always exists.
  wprintf("The largest integer value is %020"
  PRIxMAX, "\n", i);
<beginning of page>
  return 0;
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard
imaxdiv(3C), attributes(5), standards(5)
