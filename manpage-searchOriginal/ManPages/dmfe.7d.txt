<beginning of page>
dmfe <-> Davicom Fast Ethernet driver for Davicom DM9102A
/kernel/drv/sparcv9/dmfe
The dmfe Ethernet device provides 100Base-TX networking interfaces using the Davicom DM9102A chip, which
incorporates its own internal transceiver.
The dmfe driver functions include controller initialization, frame transmit and receive, promiscuous and multicast
support, and error recovery and reporting. Multiple controllers installed within the system are supported by the driv<hy>
er.
The 100Base-TX standard specifies an auto-negotiation protocol to automatically select the mode and speed of oper<hy>
ation. The internal transceiver is capable of performing auto-negotiation with the remote-end of the link (link part<hy>
ner) and receives the capabilities of the remote end. It selects the highest common denominator mode of operation
based on the priorities. The internal transceiver also supports a forced-mode of operation under which the driver se<hy>
lects the operational mode.
The /dev/dmfe cloning character-special device is used to access all Davicom DM9102A devices installed in the
system.
You must send an explicit DL_ATTACH_REQ message to associate the opened stream with a particular device
(ppa). The ppa ID is interpreted as an unsigned integer data type and indicates the corresponding device instance
(unit) number. If the ppa field value does not correspond to a valid device instance number for this system, an error
(DL_ERROR_ACK) is returned. The device is initialized on first attach and de-initialized (stopped) at last detach.
The values returned by the driver in the DL_INFO_ACK primitive in response to a DL_INFO_REQ are as follows: <bu>
Maximum SDU is 1500 (ETHERMTU - defined in sys/ethernet.h). <bu> Minimum SDU is 0. <bu> DLSAP address
length is 8. <bu> MAC type is DL_ETHER. <bu> The sap length value is -2, meaning the physical address component is
followed immediately by a 2-byte sap component within the DLSAP address. <bu> The broadcast address value is the
Ethernet/IEEE broadcast address (FF:FF:FF:FF:FF:FF).
Once in the DL_ATTACHED state, you must send a DL_BIND_REQ to associate a particular Service Access
Point (SAP) with the stream.
By default, the dmfe driver performs auto-negotiation to select the speed and mode of the link. Link speed and mode
can be 100 Mbps (full or half-duplex) or 10 Mbps (full or half-duplex) as described in the 100Base-TX standard.
The auto-negotiation protocol automatically selects speed mode (either 100 Mbps or 10 Mbps) and operation mode
(either full-duplex or half-duplex) as the highest common denominator supported by both link partners. Because the
dmfe device supports all modes, this effectively selects the highest-throughput mode supported by the other device.
Alternatively, you can explicitly specify the link parameters by adding entries to the dmfe driver configuration file
(/kernel/drv/dmfe.conf). You can set the speed parameter to 10 or 100 to force dmfe devices to operate at the speci<hy>
fied speed. Additionally, you can set the full-duplex parameter to 0 or 1 to disable or force full-duplex operation, re<hy>
spectively.
Note that specifying either "speed" or "full-duplex" explicitly disables auto-negotiation. To enable the driver to de<hy>
termine the appropriate setting for each parameter, you should always set both parameters. If it is necessary to force
either speed or duplex setting (for example, because the dmfe device is connected to an ancient device or hub that
does not support auto-negotiation), both parameters should be explicitly specified to match the requirements of the
external device.
/dev/dmfe Character special device
/kernel/drv/dmfe 32-bit kernel module (x86)
/kernel/drv/sparcv9/dmfe 64-bit kernel module (SPARC)
/kernel/drv/amd64/dmfe 64-bit kernel module (x86)
/kernel/drv/dmfe.conf dmfe configuration file
<beginning of page>
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ ArchitectureS<hy>
PARC, x86
attributes(5), gld(7D), dlpi(7P), streamio(7I)
Writing Device Drivers
STREAMS Programming Guide
Network Interfaces Programmer's Guide
