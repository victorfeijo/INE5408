<beginning of page>
pthread_attr_getscope, pthread_attr_setscope <-> get or set contentionscope attribute
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_attr_getscope(const pthread_attr_t *restrict attr,
 int *restrict contentionscope);
int pthread_attr_setscope(pthread_attr_t *attr, int contentionscope);
The pthread_attr_setscope() and pthread_attr_getscope() functions are used to set and get the contentionscope at<hy>
tribute in the attr object.
The contentionscope attribute can have the value PTHREAD_SCOPE_SYSTEM, signifying system scheduling
contention scope, or PTHREAD_SCOPE_PROCESS, signifying process scheduling contention scope.
The symbols PTHREAD_SCOPE_SYSTEM and PTHREAD_SCOPE_PROCESS are defined by the header
<pthread.h>.
If successful, the pthread_attr_setscope() and pthread_attr_getscope() functions return 0. Otherwise, an error
number is returned to indicate the error.
The pthread_attr_setscope(), or pthread_attr_getscope(), function may fail if:
EINVAL attr or contentionscope is invalid.
After these attributes have been set, a thread can be created with the specified attributes using pthread_create(). Us<hy>
ing these routines does not affect the current running thread.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_attr_init(3C), pthread_attr_setinheritsched(3C), pthread_attr_setschedpolicy(3C), pthread_at<hy>
tr_setschedparam(3C), pthread_create(3C), pthread_setschedparam(3C), attributes(5), standards(5)
