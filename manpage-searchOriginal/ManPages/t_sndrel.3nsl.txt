<beginning of page>
t_sndrel <-> initiate an orderly release
#include <xti.h>
int t_sndrel(int fd);
This routine is part of the XTI interfaces which evolved from the TLI interfaces. XTI represents the future evolution
of these interfaces. However, TLI interfaces are supported for compatibility. When using a TLI routine that has the
same name as an XTI routine, the tiuser.h header file must be used. Refer to the TLI COMPATIBILITY section
for a description of differences between the two interfaces.
For transport providers of type T_COTS_ORD, this function is used to initiate an orderly release of the outgoing
direction of data transfer and indicates to the transport provider that the transport user has no more data to send. The
argument fd identifies the local transport endpoint where the connection exists. After calling t_sndrel(), the user
may not send any more data over the connection. However, a user may continue to receive data if an orderly release
indication has not been received. For transport providers of types other than T_COTS_ORD, this function fails
with error TNOTSUPPORT.
Upon successful completion, a value of 0 is returned. Otherwise, a value of -1 is returned and t_errno is set to in<hy>
dicate an error.
T_DATAXFER, T_INREL.
On failure, t_errno is set to one of the following:
TBADF The specified file descriptor does not refer to a transport endpoint.
TFLOW O_NONBLOCK was set, but the flow control mechanism prevented the transport provider from accepting
the function at this time.
TLOOK An asynchronous event has occurred on this transport endpoint and requires immediate attention.
TNOTSUPPORT This function is not supported by the underlying transport provider.
TOUTSTATE The communications endpoint referenced by fd is not in one of the states in which a call to this func<hy>
tion is valid.
TPROTO This error indicates that a communication problem has been detected between XTI and the transport
provider for which there is no other suitable XTI error (t_errno).
TSYSERR A system error has occurred during execution of this function.
The XTI and TLI interface definitions have common names but use different header files. This, and other semantic
differences between the two interfaces are described in the subsections below.
The XTI interfaces use the header file, xti.h. TLI interfaces should not use this header. They should use the header:
 #include <tiuser.h>
The t_errno values that can be set by the XTI interface and cannot be set by the TLI interface are:
 TPROTO
 TLOOK
 TOUTSTATE
Whenever this function fails with t_error set to TFLOW, O_NONBLOCK must have been set.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT LevelSafe
t_error(3NSL), t_getinfo(3NSL), t_open(3NSL), t_rcvrel(3NSL), attributes(5)
