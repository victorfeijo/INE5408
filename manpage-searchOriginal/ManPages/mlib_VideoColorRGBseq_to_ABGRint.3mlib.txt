<beginning of page>
mlib_VideoColorRGBseq_to_ABGRint <-> convert RGB sequential to ABGR interleaved
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
void mlib_VideoColorRGBseq_to_ABGRint(mlib_u32 *ABGR, const mlib_u8 *R,
 const mlib_u8 *G, const mlib_u8 *B,
 const mlib_u8 *A_array, mlib_u8 A_const,
 mlib_s32 w, mlib_s32 h,
 mlib_s32 dlb, mlib_s32 slb);
The R, G, and B streams, and the A values are combined into an A, B, G, R interleaved byte stream. Within each
32-bit output word, the component ordering is A (bits 31-24), B (bits 23-16), G (bits 15-8), and R (bits 7-0).
The alpha values for this function work in the following fashion: <bu> If A_array pointer is not NULL, the values are
taken from there. It has to have the same dimensions as the R, G, and B buffers. <bu> If A_array pointer is NULL, the
alpha values for every pixel are set to A_const.
The function takes the following arguments:
ABGR Pointer to output buffer.
R Pointer to input R buffer.
G Pointer to input G buffer.
B Pointer to input B buffer.
A_array Array of alpha values.
A_const Constant alpha value.
w Image width in pixels.
h Image height in lines.
dlb Linebytes for output buffer.
slb Linebytes for input buffers.
None.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoColorRGBint_to_ABGRint(3MLIB), mlib_VideoColorBGRint_to_ABGRint(3MLIB), mlib_Video<hy>
ColorRGBXint_to_ABGRint(3MLIB), mlib_VideoColorRGBXint_to_ARGBint(3MLIB), mlib_VideoCol<hy>
orXRGBint_to_ABGRint(3MLIB), mlib_VideoColorXRGBint_to_ARGBint(3MLIB), attributes(5)
