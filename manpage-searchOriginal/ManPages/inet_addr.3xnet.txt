<beginning of page>
inet_addr, inet_network, inet_makeaddr, inet_lnaof, inet_netof, inet_ntoa <-> Internet address manipulation
cc [ flag ... ] file ... -lxnet [ library ... ]
#include <arpa/inet.h>
in_addr_t inet_addr(const char *cp);
in_addr_t inet_lnaof(struct in_addr in);
struct in_addr inet_makeaddr(in_addr_t net, in_addr_t lna);
in_addr_t inet_netof(struct in_addr in);
in_addr_t inet_network(const char *cp);
char *inet_ntoa(struct in_addr in);
The inet_addr() function converts the string pointed to by cp, in the Internet standard dot notation, to an integer val<hy>
ue suitable for use as an Internet address.
The inet_lnaof() function takes an Internet host address specified by in and extracts the local network address part,
in host byte order.
The inet_makeaddr() function takes the Internet network number specified by net and the local network address
specified by lna, both in host byte order, and constructs an Internet address from them.
The inet_netof() function takes an Internet host address specified by in and extracts the network number part, in host
byte order.
The inet_network() function converts the string pointed to by cp, in the Internet standard dot notation, to an integer
value suitable for use as an Internet network number.
The inet_ntoa() function converts the Internet host address specified by in to a string in the Internet standard dot no<hy>
tation.
All Internet addresses are returned in network order (bytes ordered from left to right).
Values specified using dot notation take one of the following forms:
a.b.c.d When four parts are specified, each is interpreted as a byte of data and assigned, from left to right, to the four
bytes of an Internet address.
a.b.c When a three-part address is specified, the last part is interpreted as a 16-bit quantity and placed in the right<hy>
most two bytes of the network address. This makes the three-part address format convenient for specifying Class B
network addresses as 128.net.host.
a.b When a two-part address is supplied, the last part is interpreted as a 24-bit quantity and placed in the rightmost
three bytes of the network address. This makes the two-part address format convenient for specifying Class A net<hy>
work addresses as net.host.
a When only one part is given, the value is stored directly in the network address without any byte rearrangement.
All numbers supplied as parts in dot notation may be decimal, octal, or hexadecimal, that is, a leading 0x or 0X im<hy>
plies hexadecimal, as specified in the ISO C standard; otherwise, a leading 0 implies octal; otherwise, the number is
interpreted as decimal.
The return value of inet_ntoa() may point to static data that may be overwritten by subsequent calls to inet_ntoa().
Upon successful completion, inet_addr() returns the Internet address. Otherwise, it returns (in_addr_t)(<mi>1).
Upon successful completion, inet_network() returns the converted Internet network number. Otherwise, it returns
(in_addr_t)(<mi>1).
<beginning of page>
The inet_makeaddr() function returns the constructed Internet address.
The inet_lnaof() function returns the local network address part.
The inet_netof() function returns the network number.
The inet_ntoa() function returns a pointer to the network address in Internet-standard dot notation.
No errors are defined.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
endhostent(3XNET), endnetent(3XNET), attributes(5), standards(5)
