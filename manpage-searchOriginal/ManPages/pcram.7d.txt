<beginning of page>
pcram <-> PCMCIA RAM memory card device driver
memory@<socket>/pcram@<technology>,0:c
memory@<socket>/pcram@<technology>,0:c,raw
The PCMCIA RAM memory card device driver supports disk-like I/O access to any standard PCMCIA static ran<hy>
dom access memory (SRAM) card and dynamic random access memory (DRAM) card. The driver supports standard
PCMCIA SRAM/DRAM cards that contain a Card Information Structure (CIS). RAM card densities in the
512Kilobytes to 64Mbyte range are supported.
If a PC card memory device is recognized, the pcram device driver is automatically loaded, the physical address al<hy>
located, and special files created (if they do not already exist).
The Solaris pcmem driver is not capable of handling "combo" memory cards with multiple types of memory on
them (for example, combined SRAM and nonvolatile FLASH). Inserting such a card into a system running the So<hy>
laris software may cause a system panic.
Because the PC card memory device is designed as a pseudo-floppy diskette type, the only utility that can be used
for formatting is fdformat(1).
Configuration topics include initial installation and configuration, identifying an unrecognized device, special files,
using PC card memory devices, and hot-plugging. 1. Install the Solaris software. 2. Boot the system. 3. Insert the
card.
If you insert a memory device and it is not recognized (no special files created), use the prtconf command. 1. Be<hy>
come root. 2. Run the prtconf -D command to display the configuration recognized by the system. A recognized
device will appear in the prtconf output. For example:
 # prtconf -D
 . . .
 pcic, instance #0 (driver name: pcic)
  . . .
  memory, instance #0 (driver name: pcmem)
  pcram, instance #0 (driver name: pcram)
3. If your memory device does not appear at the end of the prtconf output, it is not supported and cannot be used
with the pcram driver.
The special files created for PC card memory devices act like disks and have names in the form /dev/dsk/c#t#d#p#
or /dev/dsk/c#t#d#s#. Abbreviations used in the names are: <bu> c# Controller # <bu> t# Card technology type #, defined as
follows:
 0 Null--no device
 1 ROM
 2 OTPROM (One Time PROM)
 3 UV EPROM
 4 EEPROM
 5 Flash EPROM
 6 SRAM
 7 DRAM
<bu> d# Device region of type #, usually zero <bu> p# fdisk partition # <bu> s# Solaris slice # Note -
A device name can be specified either by a partition name (p#) or a slice name (s#), but not both.
Solaris recognizes a PC Card memory device automatically upon the card's insertion. If you do not want automatic
handling of a PC card memory device, insert an entry for the device in /etc/vfstab and set the mount at boot field
to no. See vfstab(4).
PC Card memory devices do not need to have file systems on them, though typically, before using a new PC Card
memory card, you will want to create a file system on it. DOS PCFS is the best format to use. (You can use virtually
any file system format on a PC card memory card, but most other file system formats are platform-dependent, mak<hy>
ing them unsuitable for moving data between different types of machines. See "Using a PCMCIA Memory Card" in
the OpenWindows Advanced User's Guide.) Note -
If you want to redirect the output of a tar command (or dd or cpio) to a PC card memory device, first create a file
system on the card, using the fdformat(1) command without arguments. The card must be reformatted before it can
<beginning of page>
be written on again.
If a memory card is removed while in use, the device driver returns errors until the memory card is inserted into the
appropriate socket. Close and reopen the device with the card reinserted, and the memory card will work. <bu> If you
remove the card while in use as a file system, unmount the file system using the umount command. Then reinsert
the card and remount the file system using the mount command. <bu> If you remove the card and interrupt a tar or cpio
process, stop the process, reinsert the card, and restart the process.
/kernel/drv/pcram pcram driver
/dev/dsk/cntndnsn block files
/dev/rdsk/cntndnsn raw fileswhere:
cn controller n
tn technology type n
0x1ROM,0x2OTPROM,0x3EPROM,
0x4EEPROM,0x5FLASH,0x6SRAM,
0x7DRAM
dn technology region in type n
sn slice n
fdformat(1), pcmcia(7D), dkio(7I), pcmem(7D)
