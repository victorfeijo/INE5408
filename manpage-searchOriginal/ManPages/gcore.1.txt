<beginning of page>
gcore <-> get core images of running processes
gcore [-pgF] [-o filename] [-c content] process-id...
The gcore utility creates a core image of each specified process. By default, the name of the core image file for the
process whose process ID is process-id is core.process-id.
The following options are supported:
-c content Produces core image files with the specified content. The content description uses the same tokens as in
coreadm(1M). The -c option does not apply to cores produced due to the -p or -g flags.
-F Force. Grabs the target process even if another process has control.
-g Produces core image files in the global core file repository with the global content as configured by core<hy>
adm(1M). The command fails if the user does not have permissions to the global core file repository.
-o filename Substitutes filename in place of core as the first part of the name of the core image files. filename can
contain the same tokens to be expanded as the paths in coreadm(1M).
-p Produces a core image file in the process-specific location with the process-specific content for each process as
configured by coreadm(1M). The command fails if the user does not have permissions to the per-process core file
repository.
The following operand is supported:
process-id process ID
Caution should be exercised when using the -F flag. Imposing two controlling processes on one victim process can
lead to chaos. Safety is assured only if the primary controlling process, typically a debugger, has stopped the victim
process and the primary controlling process is doing nothing at the moment of application of the proc tool in ques<hy>
tion.
The following exit values are returned:
0 On success.
non-zero On failure, such as non-existent process ID.
core.process-id core images
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Availability<hy>
SUNWtoo _ Interface StabilitySee below.
The command syntax is Evolving. The Output Formats are Unstable.
kill(1), coreadm(1M), setrlimit(2), core(4), proc(4), attributes(5)
gcore is unaffected by the setrlimit(2) system call using the RLIMIT_CORE value.
