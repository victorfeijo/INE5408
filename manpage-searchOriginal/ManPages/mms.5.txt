<beginning of page>
mms <-> MMS service overview
MMS is a distributed removable media management system. It is based on the standard, IEEE 1244, Media Man<hy>
agement System (MMS).
The current implementation of MMS manages tapes and cartridges in a Sun StorageTek ACSLS tape library and em<hy>
ulated tapes on a file system. MMS is capable of sharing drives among multiple hosts. An important feature of MMS
is that it provides a uniform and consistent tape interface to its client applications.
MMS consists of a media manager (MM) which manages the entire MMS system. Information about the system is
maintained by MM in a database.
Every library managed by MMS has an active library manager (LM). An LM provides library access and mounting
service to MMS.
A drive managed by MMS has a drive manager (DM) on each host that has access to the drive. A DM provides de<hy>
vice specific operations. A DM also provides label processing. The current implementation supports only ANSI la<hy>
bels.
MMS client applications request MM to mount and unmount cartridges and process them after they are mounted.
Applications use the Media Management Protocol (MMP) to make requests. A library of client application functions
is available.
The Solaris implementation of the MMS uses the mmsinit(1M) command to configure and start the MMS service
and the mmsadm(1M) command to list and set parameters required by the service.
The MMS service instances, as reported by svcs(1), are:
mms:wcr
watcher
mms:db
Media Manager PostgreSQL database
mms:mm
Media Manager
The MMS service RBAC (see rbac(5)) authorizations are: <bu> solaris.smf.manage.mms <bu> solaris.smf.value.mms
The following are the MMS service configuration data accessible through the service management facility (see
smf(5)):
config/type
Host is media manager or watcher only. Valid values are server or client.
manager/host
Host name where the media manager is running.
manager/port
Port the media manager is using.
ssl/enabled
Media Manager is using SSL. Valid values are true or false. Note the Media Manager needs an SSL RSA certificate
and Diffie-Hellman parameters must be 'true'.
<beginning of page>
ssl/verify
Media Manager-only value, determines whether two-way authentication is enabled, which requires all Media Man<hy>
ager clients to have SSL RSA certificate. Valid values are are true for two-way authentication and false for one-way
authentication.
ssl/cert_file
Name of file that contains the SSL RSA certificate, private key, and RSA certificate chain.
ssl/pass_file
Name of file for the private key password phrase if the RSA certificate is encrypted.
ssl/dh_file
Media Manager-only value, name of file that stores the Diffie-Hellman parameters.
ssl/crl_file
Name of optional CRL file.
ssl/cipher
Optional cipher change from EDH-RSA-DES-CBC3-SHA.
ssl/peer_file
Optional client only, name of file that stores the media manager certificate. The certificate is checked against the cer<hy>
tificate returned by SSL_get_peer_certificate() function.
The following are the MMS Database fault management resource identifier (FMRI) configuration data:
postgresql/bin
Directory where the PostgreSQL binaries are located. The directory is specific to the version of PostgreSQL quali<hy>
fied for use by the MMS software.
postgresql/data
Directory where the PostgreSQL database is located. The default location is a version-specific subdirectory of
/var/mms/db.
The following are the MMS Media Manager FMRI configuration data:
db/host
For future use. Set to localhost.
db/port
Port number to use for PostgreSQL login. The default value is 7656.
db/user
PostgreSQL user name. The default user name is postgres.
<beginning of page>
db/name
Name of PostgreSQL database to which to connect. The default value is mms.
option/trace
Optional. The Media Manager trace level before connecting to the PostgreSQL database.
option/db_reconnect_max_retry
Number of times to wait for the database to accept a Media Manager connection.
option/db_reconnect_timeout
Number of seconds to wait between reconnect tries.
The following are the MMS Watcher FMRI configuration data:
option/ssi_path
Path to ACSLS SSI daemon.
option/libapi_path
Path to ACSLS API library.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed
svcs(1), mmsadm(1M), mmsclient(1M), mmsexplorer(1M), mmsinit(1M), mmsclient_script(4), attributes(5),
rbac(5), smf(5)
