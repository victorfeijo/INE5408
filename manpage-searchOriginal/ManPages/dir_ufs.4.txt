<beginning of page>
dir_ufs, dir <-> format of ufs directories
#include <sys/param.h>
#include <sys/types.h>
#include <sys/fs/ufs_fsdir.h>
A directory consists of some number of blocks of DIRBLKSIZ bytes, where DIRBLKSIZ is chosen such that it
can be transferred to disk in a single atomic operation, for example, 512 bytes on most machines.
Each DIRBLKSIZ-byte block contains some number of directory entry structures, which are of variable length.
Each directory entry has a struct direct at the front of it, containing its inode number, the length of the entry, and
the length of the name contained in the entry. These entries are followed by the name padded to a 4 byte boundary
with null bytes. All names are guaranteed null-terminated. The maximum length of a name in a directory is MAX<hy>
NAMLEN.
 #define DIRBLKSIZ DEV_BSIZE
 #define MAXNAMLEN 256
 struct direct {
  ulong_t d_ino; /* inode number of entry */
  ushort_t d_reclen; /* length of this record */
  ushort_t d_namlen; /* length of string in d_name */
  char d_name[MAXNAMLEN + 1]; /* maximum name length */
 };
See attributes(5) for a description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyUnstable
attributes(5), ufs(7FS)
