<beginning of page>
mlib_ImageZoomIndex <-> zoom on color-indexed image
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_ImageZoomIndex(mlib_image *dst, const mlib_image *src,
 mlib_d64 zoomx, mlib_d64 zoomy, mlib_filter filter, mlib_edge edge,
 const void *colormap);
The mlib_ImageZoomIndex() function will enlarge or minify the source image by the X and Y zoom factors. It us<hy>
es the interpolation method as described by the resampling filter.
The image data type must be MLIB_BYTE or MLIB_SHORT.
The center of the upper-left corner pixel of an image is located at (0.5, 0.5).
The width and height of the destination image can be different from those of the source image.
The center of the source image is mapped onto the center of the destination image.
The function takes the following arguments:
dst Pointer to destination image.
src Pointer to source image.
zoomx X zoom factor. zoomx > 0.0.
zoomy Y zoom factor. zoomy > 0.0.
filter Type of resampling filter. It can be one of the following:
 MLIB_NEAREST
 MLIB_BILINEAR
 MLIB_BICUBIC
 MLIB_BICUBIC2
edge Type of edge condition. It can be one of the following:
 MLIB_EDGE_DST_NO_WRITE
 MLIB_EDGE_DST_FILL_ZERO
 MLIB_EDGE_OP_NEAREST
 MLIB_EDGE_SRC_EXTEND
 MLIB_EDGE_SRC_PADDED
colormap Internal data structure for inverse color mapping. This data structure is generated by the mlib_ImageCol<hy>
orTrue2IndexInit() function.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
<beginning of page>
mlib_ImageZoom(3MLIB), mlib_ImageZoom_Fp(3MLIB), mlib_ImageZoomIn2X(3MLIB), mlib_Image<hy>
ZoomIn2X_Fp(3MLIB), mlib_ImageZoomIn2XIndex(3MLIB), mlib_ImageZoomOut2X(3MLIB), mlib_Im<hy>
ageZoomOut2X_Fp(3MLIB), mlib_ImageZoomOut2XIndex(3MLIB), attributes(5)
