<beginning of page>
mlib_VideoDCT8x8_S16_U8 <-> forward Discrete Cosine Transform (DCT)
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoDCT8x8_S16_U8(mlib_s16 coeffs[64],
 const mlib_u8 *block, mlib_s32 stride);
The mlib_VideoDCT8x8_S16_U8() function computes the forward DCT for the destination DCT coefficients of da<hy>
ta type mlib_s16 and source block of data type mlib_u8. The stride applies to the block that is part of the frame cur<hy>
rently being encoded.
The source and destination buffer addresses must be 8-byte aligned.
This function can be used in JPEG with 8-bit precision, or in MPEG for the intra mode.
The function takes the following arguments:
coeffs Pointer to the destination DCT coefficients. Note that coeffs must be 8-byte aligned.
block Pointer to an 8x8 block in the current frame. Note that block must be 8-byte aligned.
stride Stride in bytes between adjacent rows in the block. Note that stride must be a multiple of eight.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoDCT2x2_S16_S16(3MLIB), mlib_VideoDCT4x4_S16_S16(3MLIB), mlib_VideoD<hy>
CT8x8_S16_S16_B10(3MLIB), mlib_VideoDCT8x8_S16_S16_B10_NA(3MLIB), mlib_VideoD<hy>
CT8x8_S16_S16_B12(3MLIB), mlib_VideoDCT8x8_S16_U8_NA(3MLIB), mlib_VideoD<hy>
CT16x16_S16_S16(3MLIB), mlib_VideoDCT16x16_S16_S16_B10(3MLIB), mlib_VideoDeQuan<hy>
tize_S16(3MLIB), mlib_VideoDeQuantizeInit_S16(3MLIB), mlib_VideoQuantize_S16(3MLIB), mlib_Video<hy>
QuantizeInit_S16(3MLIB), attributes(5)
