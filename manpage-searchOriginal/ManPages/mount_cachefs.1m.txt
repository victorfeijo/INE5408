<beginning of page>
mount_cachefs <-> mount CacheFS file systems
mount -F cachefs [generic_options] -o backfstype=file_system_type
 [specific_options]
 [-O] special mount_point
The CacheFS-specific version of the mount command mounts a cached file system; if necessary, it NFS-mounts its
back file system. It also provides a number of CacheFS-specific options for controlling the caching process. For
more information regarding back file systems, refer to the .
mount_cachefs cannot be used with replicated NFS mounts. mount_cachefs creates a pass through when used with
an NFS version 4 mount. No caching is performed.
To mount a CacheFS file system, use the generic mount command with the -F option followed by the argument
cachefs.
See mount(1M) for a list of supported generic_options.
-o specific_options Specify CacheFS file system specific options in a comma-separated list with no intervening spa<hy>
ces.
acdirmax=n
Specifies that cached attributes are held for no more than n seconds after directory update. After n seconds, all direc<hy>
tory information is purged from the cache. The default value is 30 seconds.
acdirmin=n
Specifies that cached attributes are held for at least n seconds after directory update. After n seconds, CacheFS
checks to see if the directory modification time on the back file system has changed. If it has, all information about
the directory is purged from the cache and new data is retrieved from the back file system. The default value is 30
seconds.
acregmax=n
Specifies that cached attributes are held for no more than n seconds after file modification. After n seconds, all file
information is purged from the cache. The default value is 30 seconds.
acregmin=n
Specifies that cached attributes are held for at least n seconds after file modification. After n seconds, CacheFS
checks to see if the file modification time on the back file system has changed. If it has, all information about the file
is purged from the cache and new data is retrieved from the back file system. The default value is 30 seconds.
actimeo=n
Sets acregmin, acregmax, acdirmin, and acdirmax to n.
backfstype=file_system_type
The file system type of the back file system (can be nfs or hsfs).
backpath=path
Specifies where the back file system is already mounted. If this argument is not supplied, CacheFS determines a
mount point for the back file system. The back file system must be read-only.
cachedir=directory
The name of the cache directory.
<beginning of page>
cacheid=ID
ID is a string specifying a particular instance of a cache. If you do not specify a cache ID, CacheFS will construct
one.
demandconst
Verifies cache consistency only when explicitly requested, rather than the periodic checking that is done by default.
A consistency check is requested by using the -s option of the cfsadmin(1M) command. This option is useful for
back file systems that change infrequently, for example, /usr/openwin. demandconst and noconst are mutually ex<hy>
clusive.
local-access
Causes the front file system to interpret the mode bits used for access checking instead of having the back file sys<hy>
tem verify access permissions. Do not use this argument with secure NFS.
noconst
Disables cache consistency checking. By default, periodic consistency checking is enabled. Specify noconst only
when you know that the back file system will not be modified. Trying to perform cache consistency check using cf<hy>
sadmin -s will result in error. demandconst and noconst are mutually exclusive.
write-around | non-shared
Write modes for CacheFS. The write-around mode (the default) handles writes the same as NFS does; that is,
writes are made to the back file system, and the affected file is purged from the cache. You can use the non-shared
mode when you are sure that no one else will be writing to the cached file system. In this mode, all writes are made
to both the front and the back file system, and the file remains in the cache.
-O Overlay mount. Allows the filesystem to be mounted over an existing mount point, making the underlying
filesystem inaccessible. If a mount is attempted on a pre-existing mount point without setting this flag, mount will
fail with the error: mount -F cachefs: mount failed Device busy.
Example 1 CacheFS-mounting a File System
The following example CacheFS-mounts the file system server1:/user2, which is already NFS-mounted on /usr/abc
as /xyz.
 example# mount -F cachefs -o backfstype=nfs,backpath=/usr/abc,
  cachedir=/cache1 server1:/user2 /xyz
The lines similar to the following appear in the /etc/mnttab file after the mount command is executed:
 server1:/user2 /usr/abc nfs
 /usr/abc /cache1/xyz cachefs backfstype=nfs
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
cfsadmin(1M), fsck_cachefs(1M), mount(1M), attributes(5)
<beginning of page>
The output for the generic_option -p output is incorrect for cachefs.
