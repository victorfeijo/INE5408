<beginning of page>
getaudit, setaudit, getaudit_addr, setaudit_addr <-> get or set process audit information
cc [ flag ... ] file ... -lbsm -lsocket -lnsl [ library ... ]
#include <sys/param.h>
#include <bsm/libbsm.h>
int getaudit(struct auditinfo *info);
int setaudit(struct auditinfo *info);
int getaudit_addr(struct auditinfo_addr *info, int length);
int setaudit_addr(struct auditinfo_addr *info, int length);
The getaudit() function gets the audit ID, the preselection mask, the terminal ID and the audit session ID for the
current process.
The getaudit() function can fail and return an E2BIG errno if the address field in the terminal ID is larger than 32
bits. In this case, getaudit_addr() should be used.
The setaudit() function sets the audit ID, the preselection mask, the terminal ID and the audit session ID for the cur<hy>
rent process.
The getaudit_addr() function returns a variable length auditinfo_addr structure that contains the audit ID, the pre<hy>
selection mask, the terminal ID, and the audit session ID for the current process. The terminal ID contains a size
field that indicates the size of the network address.
The setaudit_addr() function sets the audit ID, the preselection mask, the terminal ID, and the audit session ID for
the current process. The values are taken from the variable length struture auditinfo_addr. The terminal ID contains
a size field that indicates the size of the network address.
The auditinfo structure is used to pass the process audit information and contains the following members:
 au_id_t ai_auid; /* audit user ID */
 au_mask_t ai_mask; /* preselection mask */
 au_tid_t ai_termid; /* terminal ID */
 au_asid_t ai_asid; /* audit session ID */
The auditinfo_addr structure is used to pass the process audit information and contains the following members:
 au_id_t ai_auid; /* audit user ID */
 au_mask_t ai_mask; /* preselection mask */
 au_tid_addr_t ai_termid; /* terminal ID */
 au_asid_t ai_asid; /* audit session ID */
Upon successful completion, getaudit() and setaudit() return 0. Otherwise, <mi>1 is returned and errno is set to indi<hy>
cate the error.
The getaudit() and setaudit() functions will fail if:
EFAULT The info parameter points outside the process's allocated address space.
EPERM The {PRIV_SYS_AUDIT} privilege is not asserted in the effective set of the calling process.
The calling process must have the {PRIV_SYS_AUDIT} privilege asserted in its effective set.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT-LevelMT-Safe
<beginning of page>
bsmconv(1M), audit(2), attributes(5)
The functionality described in this man page is available only if the Solaris Auditing has been enabled. See bsm<hy>
conv(1M) for more information.
