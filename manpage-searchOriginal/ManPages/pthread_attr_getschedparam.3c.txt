<beginning of page>
pthread_attr_getschedparam, pthread_attr_setschedparam <-> get or set schedparam attribute
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_attr_getschedparam(const pthread_attr_t *restrict attr,
 struct sched_param *restrict param);
int pthread_attr_setschedparam(pthread_attr_t *restrict attr,
 const struct sched_param *restrict param);
The functions pthread_attr_setschedparam() and pthread_attr_getschedparam(), respectively, set and get the
scheduling parameter attributes in the attr argument. The contents of the param structure are defined in <sched.h>.
The only required member of param is sched_priority.
If successful, the pthread_attr_setschedparam() and pthread_attr_getschedparam() functions return 0. Other<hy>
wise, an error number is returned to indicate the error.
The pthread_attr_setschedparam() function may fail if:
EINVAL attr is invalid.
The pthread_attr_getschedparam() function may fail if:
EINVAL attr or param is invalid.
After these attributes have been set, a thread can be created with the specified attributes using pthread_create(). Us<hy>
ing these routines does not affect the current running thread.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
pthread_attr_init(3C), pthread_attr_setscope(3C), pthread_attr_setinheritsched(3C), pthread_attr_setsched<hy>
policy(3C), pthread_create(3C), pthread_setschedparam(3C), attributes(5), standards(5)
