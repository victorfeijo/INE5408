<beginning of page>
pthread_spin_lock, pthread_spin_trylock <-> lock a spin lock object
cc -mt [ flag... ] file... [ library... ]
#include <pthread.h>
int pthread_spin_lock(pthread_spinlock_t *lock);
#include <pthread.h>
int pthread_spin_trylock(pthread_spinlock_t *lock);
The pthread_spin_lock() function locks the spin lock referenced by lock. The calling thread acquires the lock if it is
not held by another thread. Otherwise, the thread spins (that is, does not return from the pthread_spin_lock call())
until the lock becomes available. The results are undefined if the calling thread holds the lock at the time the call is
made.
The pthread_spin_trylock() function locks the spin lock referenced by lock if it is not held by any thread. Other<hy>
wise, the function fails.
The results are undefined if either of these functions is called with an uninitialized spin lock.
Upon successful completion, these functions returns 0. Otherwise, an error number is returned to indicate the error.
The pthread_spin_trylock() function will fail if:
EBUSY A thread currently holds the lock.
These functions may fail if:
EINVAL The value specified by lock does not refer to an initialized spin lock object.
The pthread_spin_lock() function may fail if:
EDEADLK The calling thread already holds the lock.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_spin_destroy(3C), pthread_spin_unlock(3C), attributes(5), standards(5)
