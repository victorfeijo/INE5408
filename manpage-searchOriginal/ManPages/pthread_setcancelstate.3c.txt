<beginning of page>
pthread_setcancelstate <-> enable or disable cancellation
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_setcancelstate(int state, int *oldstate);
The pthread_setcancelstate() function atomically sets the calling thread's cancellation state to the specified state
and if oldstate is not NULL, stores the previous cancellation state in oldstate.
The state can be either of the following:
PTHREAD_CANCEL_ENABLE
This is the default. When cancellation is deferred (deferred cancellation is also the default), cancellation occurs
when the target thread reaches a cancellation point and a cancel is pending. When cancellation is asynchronous, re<hy>
ceipt of a pthread_cancel(3C) call causes immediate cancellation.
PTHREAD_CANCEL_DISABLE
When cancellation is deferred, all cancellation requests to the target thread are held pending. When cancellation is
asynchronous, all cancellation requests to the target thread are held pending; as soon as cancellation is re-enabled,
pending cancellations are executed immediately.
See cancellation(5) for the definition of a cancellation point and a discussion of cancellation concepts. See
pthread_setcanceltype(3C) for explanations of deferred and asynchronous cancellation.
Upon successful completion, pthread_setcancelstate(), returns 0. Otherwise, an error number is returned to indicate
the error.
The pthread_setcancelstate() function will fail if:
EINVAL The specified state is not PTHREAD_CANCEL_ENABLE or PTHREAD_CANCEL_DISABLE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
pthread_cancel(3C), pthread_cleanup_pop(3C), pthread_cleanup_push(3C), pthread_exit(3C),
pthread_join(3C), pthread_setcanceltype(3C), pthread_testcancel(3C), setjmp(3C), attributes(5), cancella<hy>
tion(5), condition(5), standards(5)
