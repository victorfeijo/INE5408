<beginning of page>
pam_sm_acct_mgmt <-> service provider implementation for pam_acct_mgmt
cc [ flag ... ] file ... -lpam [ library ... ]
#include <security/pam_appl.h>
#include <security/pam_modules.h>
int pam_sm_acct_mgmt(pam_handle_t *pamh, int flags, int argc,
 const char **argv);
In response to a call to pam_acct_mgmt(3PAM), the PAM framework calls pam_sm_acct_mgmt() from the mod<hy>
ules listed in the pam.conf(4) file. The account management provider supplies the back-end functionality for this in<hy>
terface function. Applications should not call this API directly.
The pam_sm_acct_mgmt() function determines whether or not the current user's account and password are valid.
This includes checking for password and account expiration, and valid login times. The user in question is specified
by a prior call to pam_start(), and is referenced by the authentication handle, pamh, which is passed as the first ar<hy>
gument to pam_sm_acct_mgmt(). The following flags may be set in the flags field:
PAM_SILENT The account management service should not generate any messages.
PAM_DISALLOW_NULL_AUTHTOK The account management service should return PAM_NEW_AUTH<hy>
TOK_REQD if the user has a null authentication token.
The argc argument represents the number of module options passed in from the configuration file pam.conf(4). argv
specifies the module options, which are interpreted and processed by the account management service. Please refer
to the specific module man pages for the various available options. If an unknown option is passed to the module, an
error should be logged through syslog(3C) and the option ignored.
If an account management module determines that the user password has aged or expired, it should save this infor<hy>
mation as state in the authentication handle, pamh, using pam_set_data(). pam_chauthok() uses this information
to determine which passwords have expired.
If there are no restrictions to logging in, PAM_SUCCESS is returned. The following error values may also be re<hy>
turned upon error:
PAM_USER_UNKNOWN User not known to underlying authentication module.
PAM_NEW_AUTHTOK_REQD New authentication token required.
PAM_ACCT_EXPIRED User account has expired.
PAM_PERM_DENIED User denied access to account at this time.
PAM_IGNORE Ignore underlying account module regardless of whether the control flag is required, optional or
sufficient.
See attributes(5) for description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability
Stable _ MT-LevelMT-Safe with exceptions
pam(3PAM), pam_acct_mgmt(3PAM), pam_set_data(3PAM), pam_start(3PAM), syslog(3C), libpam(3LIB),
pam.conf(4), attributes(5)
<beginning of page>
The interfaces in libpam are MT-Safe only if each thread within the multithreaded application uses its own PAM
handle.
If the PAM_REPOSITORY item_type is set and a service module does not recognize the type, the service module
does not process any information, and returns PAM_IGNORE. If the PAM_REPOSITORY item_type is not set, a
service module performs its default action.
