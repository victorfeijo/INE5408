<beginning of page>
nfsd <-> NFS daemon
/usr/lib/nfs/nfsd [-a] [-c #_conn] [-l listen_backlog]
 [-p protocol] [-t device] [nservers]
nfsd is the daemon that handles client file system requests. Only users with {PRIV_SYS_NFS} and sufficient privi<hy>
leges to write to /var/run can run this daemon.
The nfsd daemon is automatically invoked using share(1M) with the -a option.
By default, nfsd starts over the TCP and UDP transports for versions 2 and 3. By default, it starts over the TCP for
version 4. You can change this with the -p option.
A previously invoked nfsd daemon started with or without options must be stopped before invoking another nfsd
command.
To change startup parameters for nfsd, use the sharectl(1M) and sharemgr(1M) commands.
The following options are supported:
-a Start a NFS daemon over all available connectionless and connection-oriented transports, including UDP and
TCP. Equivalent of setting the NFSD_PROTOCOL parameter to ALL in the nfs file.
-c #_conn This sets the maximum number of connections allowed to the NFS server over connection-oriented trans<hy>
ports. By default, the number of connections is unlimited. Equivalent of the NFSD_MAX_CONNECTIONS pa<hy>
rameter in the nfs file.
-l Set connection queue length for the NFS TCP over a connection-oriented transport. The default value is 32 en<hy>
tries. Equivalent of the NFSD_LISTEN_BACKLOG parameter in the nfs file.
-p protocol Start a NFS daemon over the specified protocol. Equivalent of the NFSD_PROTOCOL parameter in
the nfs file.
-t device Start a NFS daemon for the transport specified by the given device. Equivalent of the NFSD_DEVICE pa<hy>
rameter in the nfs file.
The following operands are supported:
nservers This sets the maximum number of concurrent NFS requests that the server can handle. This concurrency is
achieved by up to nservers threads created as needed in the kernel. nservers should be based on the load expected on
this server. 16 is the usual number of nservers. If nservers is not specified, the maximum number of concurrent NFS
requests will default to 1. Equivalent of the NFSD_SERVERS parameter in the nfs file.
If the NFS_PORTMON variable is set in /etc/system, then clients are required to use privileged ports (ports < IP<hy>
PORT_RESERVED) to get NFS services. This variable is equal to zero by default. This variable has been moved
from the "nfs" module to the "nfssrv" module. To set the variable, edit the /etc/system file and add this entry:
set nfssrv:nfs_portmon = 1
0 Daemon started successfully.
1 Daemon failed to start.
.nfsXXX Client machine pointer to an open-but-unlinked file.
/etc/default/nfs Contains startup parameters for nfsd.
<beginning of page>
/etc/system System configuration information file.
/var/nfs/v4_state
/var/nfs/v4_oldstate Directories used by the server to manage client state information. These directories should not
be removed.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wnfssu
ps(1), svcs(1), mountd(1M), share(1M), sharectl(1M), sharemgr(1M), svcadm(1M), nfs(4), sharetab(4), sys<hy>
tem(4), attributes(5), smf(5)

Manually starting and restarting nfsd is not recommended. If it is necessary to do so, use svcadm to enable or dis<hy>
able the nfs service (svc:/network/nfs/server). If it is disabled, it will be enabled by share_nfs(1M), unless its ap<hy>
plication/auto_enable property is set to false. See the , and svcadm(1M) for more information.
The nfsd service is managed by the service management facility, smf(5), under the service identifier:
 svc:/network/nfs/server
Administrative actions on this service, such as enabling, disabling, or requesting restart, can be performed using sv<hy>
cadm(1M). The service's status can be queried using the svcs(1) command.
If nfsd is killed with SIGTERM, it will not be restarted by the service management facility. Instead, nfsd can be
restarted by other signals, such as SIGINT.
