<beginning of page>
drv_usecwait <-> busy-wait for specified interval
#include <sys/types.h>
#include <sys/ddi.h>
void drv_usecwait(clock_t microsecs);
Architecture independent level 1 (DDI/DKI).
microsecs The number of microseconds to busy-wait.
The drv_usecwait() function gives drivers a means of busy-waiting for a specified microsecond count. The amount
of time spent busy-waiting may be greater than the microsecond count but will minimally be the number of mi<hy>
croseconds specified.
delay(9F) can be used by a driver to delay for a specified number of system ticks, but it has two limitations. First,
the granularity of the wait time is limited to one clock tick, which may be more time than is needed for the delay.
Second, delay(9F) can be invoked from user or kernel context and hence cannot be used at interrupt time or system
initialization.
Often, drivers need to delay for only a few microseconds, waiting for a write to a device register to be picked up by
the device. In this case, even in user context, delay(9F) produces too long a wait period.
The drv_usecwait() function can be called from user, interrupt, or kernel context.
delay(9F), timeout(9F), untimeout(9F)
Writing Device Drivers
The driver wastes processor time by making this call since drv_usecwait() does not block but simply busy-waits.
The driver should only make calls to drv_usecwait() as needed, and only for as much time as needed. The
drv_usecwait() function does not mask out interrupts.
