<beginning of page>
t_sndreldata <-> initiate or respond to an orderly release with user data
#include <xti.h>
int t_sndreldata(int fd, struct t_discon *discon);
This function is used to initiate an orderly release of the outgoing direction of data transfer and to send user data
with the release. The argument fd identifies the local transport endpoint where the connection exists, and discon
points to a t_discon structure containing the following members:
 struct netbuf udata;
 int reason;
 int sequence;
After calling t_sndreldata(), the user may not send any more data over the connection. However, a user may con<hy>
tinue to receive data if an orderly release indication has not been received.
The field reason specifies the reason for the disconnection through a protocol-dependent reason code, and udata
identifies any user data that is sent with the disconnection; the field sequence is not used.
The udata structure specifies the user data to be sent to the remote user. The amount of user data must not exceed
the limits supported by the transport provider, as returned in the discon field of the info argument of t_open(3NSL)
or t_getinfo(3NSL). If the len field of udata is zero or if the provider did not return T_ORDRELDATA in the
t_open(3NSL) flags, no data will be sent to the remote user.
If a user does not wish to send data and reason code to the remote user, the value of discon may be a null pointer.
This function is an optional service of the transport provider, only supported by providers of service type
T_COTS_ORD. The flag T_ORDRELDATA in the info<->>flag field returned by t_open(3NSL) or t_get<hy>
info(3NSL) indicates that the provider supports orderly release user data.
This function may not be available on all systems.
Upon successful completion, a value of 0 is returned. Otherwise, a value of -1 is returned and t_errno is set to in<hy>
dicate an error.
T_DATAXFER, T_INREL.
On failure, t_errno is set to one of the following:
TBADDATA The amount of user data specified was not within the bounds allowed by the transport provider, or user
data was supplied and the provider did not return T_ORDRELDATA in the t_open(3NSL) flags.
TBADF The specified file descriptor does not refer to a transport endpoint.
TFLOW O_NONBLOCK was set, but the flow control mechanism prevented the transport provider from accepting
the function at this time.
TLOOK An asynchronous event has occurred on this transport endpoint and requires immediate attention.
TNOTSUPPORT Orderly release is not supported by the underlying transport provider.
TOUTSTATE The communications endpoint referenced by fd is not in one of the states in which a call to this func<hy>
tion is valid.
<beginning of page>
TPROTO This error indicates that a communication problem has been detected between XTI and the transport
provider for which there is no other suitable XTI error (t_errno).
TSYSERR A system error has occurred during execution of this function.
In the TLI interface definition, no counterpart of this routine was defined.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT LevelSafe
t_getinfo(3NSL), t_open(3NSL), t_rcvrel(3NSL), t_rcvreldata(3NSL), t_sndrel(3NSL), attributes(5)
The interfaces t_sndreldata() and t_rcvreldata(3NSL) are only for use with a specific transport called "minimal
OSI," which is not available on the Solaris platform. These interfaces are not available for use in conjunction with
Internet Transports (TCP or UDP).
