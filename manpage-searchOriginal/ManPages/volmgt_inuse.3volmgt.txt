<beginning of page>
volmgt_inuse <-> check whether or not volume management is managing a pathname
cc [ flag... ] file... -lvolmgt [ library ... ]
#include <volmgt.h>
int volmgt_inuse(char *pathname);
This function is obsolete. The management of removable media by the Volume Management feature, including vold,
has been replaced by software that supports the Hardware Abstraction Layer (HAL). Programmatic support for HAL
is through the HAL APIs, which are documented on the HAL web site. See hal(5). The return value of this function
is undefined.
volmgt_inuse() checks whether volume management is managing the specified pathname.
The return from this function is undefined.
This routine can fail, returning 0, if a stat(2) of the supplied pathname or an open(2) of /dev/volctl fails, or if any of
the following is true:
ENXIO Volume management is not running.
EINTR An interrupt signal was detected while checking for the supplied pathname for use.
Example 1 Using volmgt_inuse()
To see if volume management is managing the first floppy disk:
 if (volmgt_inuse("/dev/rdiskette0") != 0) {
  (void) printf("volmgt is managing diskette 0\n");
 } else {
  (void) printf("volmgt is NOT managing diskette 0\n");
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
_ Interface StabilityObsolete
open(2), stat(2), errno(3C), volmgt_check(3VOLMGT), volmgt_running(3VOLMGT), attributes(5), hal(5)
This routine requires volume management to be running.
Since volmgt_inuse() returns 0 for two different cases (both when a volume is not in use, and when an error occurs),
it is up to the user to to check errno to differentiate the two, and to ensure that volume management is running.
