<beginning of page>
fstyp_mod_init, fstyp_mod_fini, fstyp_mod_ident, fstyp_mod_get_attr, fstyp_mod_dump <-> libfstyp module inter<hy>
face
cc [ flag... ] file... -lfstyp -lnvpair [ library... ]
#include <libnvpair.h>
#include <libfstyp.h>
int fstyp_mod_init(int fd, off64_t **offset, fstyp_mod_handle_t *handle);
void fstyp_mod_fini(fstyp_mod_handle_t handle);
int fstyp_mod_ident(fstyp_mod_handle_t handle);
int fstyp_mod_get_attr(fstyp_mod_handle_t handle, nvlist_t **attr);
int fstyp_mod_dump(fstyp_mod_handle_t handle, FILE *fout, FILE *ferr);
fd Open file descriptor of a block or a raw device that contains the file system to be identified.
offset Offset from the beginning of the device where the file system is located.
handle Opaque handle that the module returns in fstyp_mod_init() and is used with other module functions.
fout Output stream.
ferr Error stream.
A libfstyp module implements heuristics required to identify a file system type. The modules are shared objects
loaded by libfstyp. The libfstyp modules are located in /usr/lib/fs subdirectories. A subdirectory name defines the
name of the file system.
Each module exports the fstyp_mod_init(), fstyp_mod_fini(), fstyp_mod_ident(), and fstyp_mod_get_attr() func<hy>
tions. All of these functions map directly to the respective libfstyp interfaces.
The fstyp_mod_dump() function is optional. It can be used to output unformatted information about the file system.
This function is used by the fstyp(1M) command when the -v option is specified. The fstyp_mod_dump() function
is not recommended and should be used only in legacy modules.
/usr/lib/fs/
Default module directory.
/usr/lib/fs/fstype/fstyp.so.1
Default path to a libfstyp module for an fstype file system.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyEvolving _ MT-LevelMT-Safe
fstyp(1M), fstyp_strerror(3FSTYP), libfstyp(3LIB), attributes(5)
