<beginning of page>
form_post, post_form, unpost_form <-> write or erase forms from associated subwindows
cc [ flag... ] file... -lform -lcurses [ library... ]
#include <form.h>
int post_form(FORM *form);
int unpost_form(FORM *form);
post_form() writes form into its associated subwindow. The application programmer must use curses library rou<hy>
tines to display the form on the physical screen or call update_panels() if the panels library is being used.
unpost_form() erases form from its associated subwindow.
These routines return one of the following:
E_OK The function returned successfully.
E_SYSTEM_ERROR System error.
E_BAD_ARGUMENT An argument is incorrect.
E_POSTED The form is posted.
E_NOT_POSTED The form is not posted.
E_NO_ROOM The form does not fit in the subwindow.
E_BAD_STATE The routine was called from an initialization or termination function.
E_NOT_CONNECTED The field is not connected to a form.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelUnsafe
curses(3CURSES), forms(3CURSES), panel_update(3CURSES), panels(3CURSES), attributes(5)
The header <form.h> automatically includes the headers <eti.h> and <curses.h>.
