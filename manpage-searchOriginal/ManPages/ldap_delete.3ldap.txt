<beginning of page>
ldap_delete, ldap_delete_s, ldap_delete_ext, ldap_delete_ext_s <-> LDAP delete operation
cc[ flag... ] file... -lldap[ library... ]
#include <lber.h>
#include <ldap.h>
int ldap_delete(LDAP *ld, char *dn);
int ldap_delete_s(LDAP *ld, char *dn);
int ldap_delete_ext(LDAP *ld, char *dn, LDAPControl **serverctrls,
 LDAPControl **clientctrls, int *msgidp);
int ldap_delete_ext_s(LDAP *ld, char *dn, LDAPControl **serverctrls,
 LDAPControl **clientctrls);
The ldap_delete_s() function is used to perform an LDAP delete operation synchronously. It takes dn, the DN of
the entry to be deleted. It returns an LDAP error code, indicating the success or failure of the operation.
The ldap_delete() function is used to perform an LDAP delete operation asynchronously. It takes the same parame<hy>
ters as ldap_delete_s(), but returns the message id of the request it initiated. The result of the delete can be obtained
by a subsequent call to ldap_result(3LDAP).
The ldap_delete_ext() function initiates an asynchronous delete operation and returns LDAP_SUCCESS if the re<hy>
quest was successfully sent to the server, or else it returns a LDAP error code if not (see ldap_error(3LDAP)). If
successful, ldap_delete_ext() places the message id of the request in *msgidp. A subsequent call to ldap_result(),
can be used to obtain the result of the add request.
The ldap_delete_ext_s() function initiates a synchronous delete operation and as such returns the result of the oper<hy>
ation itself.
ldap_delete_s() returns an LDAP error code which can be interpreted by calling one of ldap_perror(3LDAP) func<hy>
tions. ldap_delete() returns <mi>1 if something went wrong initiating the request. It returns the non-negative message
id of the request if things were successful.
See attributes(5) for a description of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE AvailabilitySUNWcsl
(32-bit) SUNWcslx (64-bit) Interface StabilityEvolving
ldap(3LDAP), ldap_error(3LDAP), attributes(5)
