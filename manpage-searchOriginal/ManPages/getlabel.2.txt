<beginning of page>
getlabel, fgetlabel <-> get file sensitivity label
cc [flags...] file... -ltsol [library...]
#include <tsol/label.h>
int getlabel(const char *path, m_label_t *label_p);
int fgetlabel(int fd, m_label_t *label_p);
The getlabel() function obtains the sensitivity label of the file that is named by path. Discretionary read, write or ex<hy>
ecute permission to the final component of path is not required, but all directories in the path prefix of path must be
searchable.
The fgetlabel() function obtains the label of an open file that is referred to by the argument descriptor, such as would
be obtained by an open(2) call.
The label_p argument is a pointer to an opaque label structure. The caller must allocate space for label_p by using
m_label_alloc(3TSOL).
Upon successful completion, getlabel() and fgetlabel() return 0. Otherwise they return <mi>1 and set errno to indicate
the error.
The getlabel() function will fail if:
EACCES Search permission is denied for a component of the path prefix of path. To override this restriction, the
calling process can assert the PRIV_FILE_DAC_SEARCH privilege.
EFAULT label_p or path points to an invalid address.
EIO An I/O error occurred while reading from or writing to the file system.
ELOOP Too many symbolic links were encountered in translating path.
ENAMETOOLONG The length of the path argument exceeds PATH_MAX, or a pathname component is longer
than NAME_MAX while _POSIX_NO_TRUNC is in effect (see pathconf(2)).
ENOENT The file referred to by path does not exist.
ENOTDIR A component of the path prefix of path is not a directory.
The fgetlabel() function will fail if:
EBADF The fd argument is not a valid open file descriptor.
EFAULT The label_p argument points to an invalid address.
EIO An I/O error occurred while reading from or writing to the file system.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcslr _ Interface StabilityCommitted
<beginning of page>
open(2), pathconf(2), m_label_alloc(3TSOL), attributes(5), labels(5)
Obtaining a File Label in Solaris Trusted Extensions Developer's Guide
The functionality described on this manual page is available only if the system is configured with Trusted Exten<hy>
sions.
