<beginning of page>
MP_RegisterPlugin <-> register a plugin with the common library
cc [ flag... ] file... -lMPAPI [ library... ]
#include <mpapi.h>
MP_STATUS MP_RegisterPlugin(MP_WCHAR *pPluginId,
 MP_CHAR *pFileName);
pPluginId A pointer to the key name shall be the reversed domain name of the vendor followed by a ".", followed by
the vendor-specific name for the plugin that uniquely identifies it.
pFileName The full path name of the plugin library.
The MP_RegisterPlugin() function registers a plugin with the common library. The current implementation adds an
entry to the /etc/mpapi.conf file.
Unlike some other APIs, this API is implemented entirely in the common library. It must be called before a plugin is
invoked by the common library.
This API does not impact dynamically add or change plugins bound to a running library instance. Instead, it causes
an application that is currently not using a plugin to access the specified plugin on future calls to the common li<hy>
brary. This is generally the behavior expected from dynamically loaded modules.
This API is typically called by a plugin's installation software to inform the common library of the path for the plug<hy>
in library.
It is not an error to re-register a plugin. However, a plugin has only one registration. The first call to deregister a
plugin will deregister it no matter how many calls to register the plugin have been made.
A vendor may register multiple plugins by using separate plugin IDs and filenames.
MP_STATUS_INVALID_PARAMETER
The pFileName does not exist.
MP_STATUS_SUCCESS
The operation is successful.
/etc/mpapi.conf MPAPI library configuration file
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyT{ Standard: ANSI INCITS 412 Multipath Management API T} _ MT-LevelSafe
libMPAPI(3LIB), MP_DeregisterPlugin(3MPAPI), mpapi.conf(4), attributes(5)
Multipath Management API Version 1.0
