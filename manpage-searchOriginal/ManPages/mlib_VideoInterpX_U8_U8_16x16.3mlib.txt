<beginning of page>
mlib_VideoInterpX_U8_U8_16x16, mlib_VideoInterpX_U8_U8_16x8, mlib_VideoInterpX_U8_U8_8x16,
mlib_VideoInterpX_U8_U8_8x8, mlib_VideoInterpX_U8_U8_8x4 <-> half-pixel interpolation in the X direction
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoInterpX_U8_U8_16x16(mlib_u8 *curr_block,
 const mlib_u8 *ref_block, mlib_s32 frm_stride,
 mlib_s32 fld_stride);
mlib_status mlib_VideoInterpX_U8_U8_16x8(mlib_u8 *curr_block,
 const mlib_u8 *ref_block, mlib_s32 frm_stride,
 mlib_s32 fld_stride);
mlib_status mlib_VideoInterpX_U8_U8_8x16(mlib_u8 *curr_block,
 const mlib_u8 *ref_block, mlib_s32 frm_stride,
 mlib_s32 fld_stride);
mlib_status mlib_VideoInterpX_U8_U8_8x8(mlib_u8 *curr_block,
 const mlib_u8 *ref_block, mlib_s32 frm_stride,
 mlib_s32 fld_stride);
mlib_status mlib_VideoInterpX_U8_U8_8x4(mlib_u8 *curr_block,
 const mlib_u8 *ref_block, mlib_s32 frm_stride,
 mlib_s32 fld_stride);
Each of these functions performs half-pixel interpolation in the X direction for a reference block of data type
mlib_u8 and a current block of data type mlib_u8. In this mode, the motion-compensated reference block becomes
the current block. Thus, the stride applies to both the input reference block and the current block.
Each of the functions takes the following arguments:
curr_block Pointer to the current block. curr_block must be 8-byte aligned.
ref_block Pointer to the reference block.
frm_stride Stride, in bytes, between adjacent rows in a frame in both the current block and reference block.
frm_stride must be a multiple of eight.
fld_stride Stride, in bytes, between adjacent rows in a field in both the current block and reference block. fld_stride
must be a multiple of eight.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoAddBlock_U8_S16(3MLIB), mlib_VideoCopyRef_S16_U8(3MLIB), mlib_VideoCopy<hy>
Ref_S16_U8_16x16(3MLIB), mlib_VideoCopyRef_U8_U8(3MLIB), mlib_VideoCopy<hy>
Ref_U8_U8_16x16(3MLIB), mlib_VideoCopyRefAve_U8_U8(3MLIB), mlib_VideoCopyRe<hy>
fAve_U8_U8_16x16(3MLIB), mlib_VideoH263OverlappedMC_S16_U8(3MLIB), mlib_VideoH263Over<hy>
lappedMC_U8_U8(3MLIB), mlib_VideoInterpAveX_U8_U8(3MLIB), mlib_VideoInter<hy>
pAveX_U8_U8_16x16(3MLIB), mlib_VideoInterpAveXY_U8_U8(3MLIB), mlib_VideoInter<hy>
pAveXY_U8_U8_16x16(3MLIB), mlib_VideoInterpAveY_U8_U8(3MLIB), mlib_VideoInter<hy>
pAveY_U8_U8_16x16(3MLIB), mlib_VideoInterpX_S16_U8(3MLIB), mlib_VideoInterpX_U8_U8(3MLIB),
mlib_VideoInterpXY_S16_U8(3MLIB), mlib_VideoInterpXY_S16_U8_16x16(3MLIB), mlib_VideoInter<hy>
pXY_U8_U8(3MLIB), mlib_VideoInterpXY_U8_U8_16x16(3MLIB), mlib_VideoInterpY_S16_U8(3MLIB),
<beginning of page>
mlib_VideoInterpY_S16_U8_16x16(3MLIB), mlib_VideoInterpY_U8_U8(3MLIB), mlib_VideoInter<hy>
pY_U8_U8_16x16(3MLIB), mlib_VideoP64Decimate_U8_U8(3MLIB), mlib_VideoP64Loop_S16_U8(3MLIB),
mlib_VideoP64Loop_U8_U8(3MLIB), attributes(5)
