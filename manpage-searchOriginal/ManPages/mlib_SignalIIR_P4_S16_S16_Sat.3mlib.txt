<beginning of page>
mlib_SignalIIR_P4_S16_S16_Sat, mlib_SignalIIR_P4_S16S_S16S_Sat, mlib_SignalIIR_P4_F32_F32, mlib_Sig<hy>
nalIIR_P4_F32S_F32S <-> parallel Infinite Impulse Response (IIR) filtering
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_SignalIIR_P4_S16_S16_Sat(mlib_s16 *dst,
 const mlib_s16 *src, void *filter, mlib_s32 n);
mlib_status mlib_SignalIIR_P4_S16S_S16S_Sat(mlib_s16 *dst,
 const mlib_s16 *src, void *filter, mlib_s32 n);
mlib_status mlib_SignalIIR_P4_F32_F32(mlib_f32 *dst,
 const mlib_f32 *src, void *filter, mlib_s32 n);
mlib_status mlib_SignalIIR_P4_F32S_F32S(mlib_f32 *dst,
 const mlib_f32 *src, void *filter, mlib_s32 n);
Each of these functions applies a fourth order parallel IIR filter to one signal packet and updates the filter state.
Printed copy or docs.sun.com displays an equation that represents the fourth order parallel IIR filtering.
The fourth order parallel IIR filter is represented by the following figure:
Printed copy or docs.sun.com displays a figure that represents the fourth order parallel IIR filter.
Each of the functions takes the following arguments:
dst Destination signal array.
src Source signal array.
filter Internal filter structure.
n Number of signal samples.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_SignalIIR_Biquad_S16_S16_Sat(3MLIB), mlib_SignalIIRFree_Biquad_S16_S16(3MLIB), mlib_SignalI<hy>
IRFree_P4_S16_S16(3MLIB), mlib_SignalIIRInit_Biquad_S16_S16(3MLIB), mlib_SignalI<hy>
IRInit_P4_S16_S16(3MLIB), attributes(5)
