<beginning of page>
posix_spawn_file_actions_addclose, posix_spawn_file_actions_addopen <-> add close or open action to spawn file ac<hy>
tions object
#include <spawn.h>
int posix_spawn_file_actions_addclose(
 posix_spawn_file_actions_t *file_actions, int fildes);
int posix_spawn_file_actions_addopen(
 posix_spawn_file_actions_t *restrict file_actions, int fildes,
 const char *restrict path, int oflag, mode_t mode);
These functions add or delete a close or open action to a spawn file actions object.
A spawn file actions object is of type posix_spawn_file_actions_t (defined in <spawn.h>) and is used to specify a
series of actions to be performed by a posix_spawn(3C) or posix_spawn(3C) operation to arrive at the set of open
file descriptors for the child process given the set of open file descriptors of the parent.
A spawn file actions object, when passed to posix_spawn() or posix_spawnp(), specifies how the set of open file
descriptors in the calling process is transformed into a set of potentially open file descriptors for the spawned
process. This transformation occurs as though the specified sequence of actions was performed exactly once, in the
context of the spawned process (prior to execution of the new process image), in the order in which the actions were
added to the object. Additionally, when the new process image is executed, any file descriptor (from this new set)
which has its FD_CLOEXEC flag set is closed (see posix_spawn(3C)).
The posix_spawn_file_actions_addclose() function adds a close action to the object referenced by file_actions that
causes the file descriptor fildes to be closed (as if close(fildes) had been called) when a new process is spawned using
this file actions object.
The posix_spawn_file_actions_addopen() function adds an open action to the object referenced by file_actions that
causes the file named by path to be opened (as if open(path, oflag, mode) had been called, and the returned file de<hy>
scriptor, if not fildes, had been changed to fildes) when a new process is spawned using this file actions object. If
fildes was already an open file descriptor, it is closed before the new file is opened.
The string described by path is copied by the posix_spawn_file_actions_addopen() function.
Upon successful completion, these functions return 0. Otherwise, an error number is returned to indicate the error.
These functions will fail if:
EBADF The value specified by fildes is negative or greater than or equal to {OPEN_MAX}.
These functions may fail if:
EINVAL The value specified by file_actions is invalid.
ENOMEM Insufficient memory exists to add to the spawn file actions object.
It is not considered an error for the fildes argument passed to these functions to specify a file descriptor for which the
specified operation could not be performed at the time of the call. Any such error will be detected when the associat<hy>
ed file actions object is later used during a posix_spawn() or posix_spawnp() operation.
If a close(2) operation is specified for a file descriptor that is not open at the time of the call to posix_spawn() or
posix_spawnp(), the close operation will not cause the posix_spawn() or posix_spawnp() operation to fail.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
<beginning of page>
close(2), dup(2), open(2), posix_spawn(3C), posix_spawn_file_actions_adddup2(3C), posix_spawn_file_ac<hy>
tions_destroy(3C), attributes(5), standards(5)
