<beginning of page>
pooladm <-> activate and deactivate the resource pools facility
/usr/sbin/pooladm [-n] [-s] [-c] [filename] | -x
/usr/sbin/pooladm [-d | -e]
The pooladm command provides administrative operations on pools and sets. pooladm reads the specified filename
and attempts to activate the pool configuration contained in it.
Before updating the current pool run-time configuration, pooladm validates the configuration for correctness.
Without options, pooladm prints out the current running pools configuration.
The following options are supported:
-c Instantiate the configuration at the given location. If a filename is not specified, it defaults to /etc/pooladm.conf.
-d Disable the pools facility so that pools can no longer be manipulated.
-e Enable the pools facility so that pools can be manipulated.
-n Validate the configuration without actually updating the current active configuration. Checks that there are no
syntactic errors and that the configuration can be instantiated on the current system. No validation of application
specific properties is performed.
-s Update the specified location with the details of the current dynamic configuration.
This option requires update permission for the configuration that you are going to update. If you use this option with
the -c option, the dynamic configuration is updated before the static location.
-x Remove the currently active pool configuration. Destroy all defined resources, and return all formerly partitioned
components to their default resources.
The following operands are supported:
filename Use the configuration contained within this file.
Example 1 Instantiating a Configuration
The following command instantiates the configuration contained at /home/admin/newconfig:
 example# /usr/sbin/pooladm -c /home/admin/newconfig
Example 2 Validating the Configuration Without Instantiating It
The following command attempts to instantiate the configuration contained at /home/admin/newconfig. It displays
any error conditions that it encounters, but does not actually modify the active configuration.
 example# /usr/sbin/pooladm -n -c /home/admin/newconfig
Example 3 Removing the Current Configuration
The following command removes the current pool configuration:
 example# /usr/sbin/pooladm -x
<beginning of page>
Example 4 Enabling the Pools Facility
The following command enables the pool facility:
 example# /usr/sbin/pooladm -e
Example 5 Enabling the Pools Facility Using SMF
The following command enables the pool facility through use of the Service Management Facility. See smf(5).
 example# /usr/sbin/svcadm enable svc:/system/pools:default
Example 6 Saving the Active Configuration to a Specified Location
The following command saves the active configuration to /tmp/state.backup:
 example# /usr/sbin/pooladm -s /tmp/state.backup
/etc/pooladm.conf Configuration file for pooladm.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUNW<hy>
pool _ Interface StabilitySee below.
The invocation is Evolving. The output is Unstable.
poolcfg(1M), poolbind(1M), psrset(1M), svcadm(1M), pset_destroy(2), libpool(3LIB), attributes(5), smf(5)

Resource bindings that are not presented in the form of a binding to a partitionable resource, such as the scheduling
class, are not necessarily modified in a pooladm -x operation.
The pools facility is not active by default when Solaris starts. pooladm -e explicitly activates the pools facility. The
behavior of certain APIs related to processor partitioning and process binding are modified when pools is active. See
libpool(3LIB).
You cannot enable the pools facility on a system where processor sets have been created. Use the psrset(1M) com<hy>
mand or pset_destroy(2) to destroy processor sets manually before you enable the pools facility.
Because the Resource Pools facility is an smf(5) service, it can also be enabled and disabled using the standard SMF
interfaces.
