<beginning of page>
ddi_io_put8, ddi_io_put16, ddi_io_put32, ddi_io_putb, ddi_io_putl, ddi_io_putw <-> write data to the mapped device
register in I/O space
#include <sys/ddi.h>
#include <sys/sunddi.h>
void ddi_io_put8(ddi_acc_handle_t handle, uint8_t *dev_addr,
 uint8_t value);
void ddi_io_put16(ddi_acc_handle_t handle, uint16_t *dev_addr,
 uint16_t value);
void ddi_io_put32(ddi_acc_handle_t handle, uint32_t *dev_addr,
 uint32_t value);
Solaris DDI specific (Solaris DDI). The ddi_io_put8(), ddi_io_put16(), ddi_io_put32(), ddi_io_putb(),
ddi_io_putl(), and ddi_io_putw() functions are obsolete. The ddi_put8(9F) function replaces ddi_io_put8(). The
ddi_put16(9F) function replaces ddi_io_put16(). The ddi_put32(9F) function replaces ddi_io_put32(). The
ddi_put8(9F) function replaces ddi_io_putb(). The ddi_put32(9F) function replaces ddi_io_putl(). The
ddi_put16(9F) function replaces ddi_io_putw().
handle Data access handle returned from setup calls, such as ddi_regs_map_setup(9F).
dev_addr Base device address.
value Data to be written to the device.
These routines generate a write of various sizes to the device address, dev_addr, in I/O space. The ddi_io_put8(),
ddi_io_put16(), and ddi_io_put32() functions write 8 bits, 16 bits, and 32 bits of data, respectively, to the device
address, dev_addr.
Each individual datum will automatically be translated to maintain a consistent view between the host and the device
based on the encoded information in the data access handle. The translation may involve byte-swapping if the host
and the device have incompatible endian characteristics.
These functions can be called from user, kernel, or interrupt context.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Obsolete
isa(4), ddi_io_get8(9F), ddi_io_rep_get8(9F), ddi_io_rep_put8(9F), ddi_put8(9F), ddi_put16(9F),
ddi_put32(9F), ddi_regs_map_setup(9F), ddi_device_acc_attr(9S)
