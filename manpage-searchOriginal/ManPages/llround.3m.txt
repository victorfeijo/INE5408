<beginning of page>
llround, llroundf, llroundl <-> round to nearest integer value
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
long long llround(double x);
long long llroundf(float x);
long long llroundl(long double x);
These functions rounds their argument to the nearest integer value, rounding halfway cases away from 0 regardless
of the current rounding direction.
 Upon successful completion, these functions return the rounded integer value.
If x is NaN, a domain error occurs and an unspecified value is returned.
If x is +Inf, a domain error occurs and an unspecified value is returned.
If x is -Inf, a domain error occurs and an unspecified value is returned.
If the correct value is positive and too large to represent as a long long, a domain error occurs and an unspecified
value is returned.
 If the correct value is negative and too large to represent as a long long, a domain error occurs and an unspecified
value is returned.
These functions will fail if:
Domain Error The x argument is NaN or <+->Inf, or the correct value is not representable as an integer.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the invalid floating-point
exception will be raised.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
These functions differ from the llrint(3M) functions in that the default rounding direction for the llround() functions
round halfway cases away from 0 and need not raise the inexact floating-point exception for non-integer arguments
that round to within the range of the return type.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
feclearexcept(3M), fetestexcept(3M), llrint(3M), lrint(3M), lround(3M), math.h(3HEAD), attributes(5), stan<hy>
dards(5)
