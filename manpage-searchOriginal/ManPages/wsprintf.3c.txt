<beginning of page>
wsprintf <-> formatted output conversion
#include <stdio.h>
#include <widec.h>
int wsprintf(wchar_t *s, const char *format, /* arg */ ... ););
The wsprintf() function outputs a Process Code string ending with a Process Code (wchar_t) null character. It is
the user's responsibility to allocate enough space for this wchar_t string.
This returns the number of Process Code characters (excluding the null terminator) that have been written. The con<hy>
version specifications and behavior of wsprintf() are the same as the regular sprintf(3C) function except that the re<hy>
sult is a Process Code string for wsprintf(), and on Extended Unix Code (EUC) character string for sprintf().
Upon successful completion, wsprintf() returns the number of characters printed. Otherwise, a negative value is re<hy>
turned.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) lw(2.75i) lw(2.75i) lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE MT-LevelMT-Safe
wsscanf(3C), printf(3C), scanf(3C), sprintf(3C), attributes(5)
