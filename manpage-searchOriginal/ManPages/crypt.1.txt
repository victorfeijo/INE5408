<beginning of page>
crypt <-> encode or decode a file
crypt [password]
The crypt utility encrypts and decrypts the contents of a file. crypt reads from the standard input and writes on the
standard output. The password is a key that selects a particular transformation. If no password is given, crypt de<hy>
mands a key from the terminal and turns off printing while the key is being typed in. crypt encrypts and decrypts
with the same key:
 example% crypt key < clear.file > encrypted.file
 example% crypt key < encrypted.file | pr
prints the contents of clear.file.
Files encrypted by crypt are compatible with those treated by the editors ed(1), ex(1), and vi(1) in encryption mode.
The security of encrypted files depends on three factors: the fundamental method must be hard to solve; direct
search of the key space must be infeasible; "sneak paths" by which keys or cleartext can become visible must be
minimized.
crypt implements a one-rotor machine designed along the lines of the German Enigma, but with a 256-element ro<hy>
tor. Methods of attack on such machines are widely known, thus crypt provides minimal security.
The transformation of a key into the internal settings of the machine is deliberately designed to be expensive, that is,
to take a substantial fraction of a second to compute. However, if keys are restricted to (say) three lower-case letters,
then encrypted files can be read by expending only a substantial fraction of five minutes of machine time.
Since the key is an argument to the crypt command, it is potentially visible to users executing ps(1) or a derivative
command. To minimize this possibility, crypt takes care to destroy any record of the key immediately upon entry.
No doubt the choice of keys and key security are the most vulnerable aspect of crypt.
/dev/tty for typed key
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
des(1), ed(1), ex(1), ps(1), vi(1), attributes(5)
