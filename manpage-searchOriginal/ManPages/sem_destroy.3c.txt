<beginning of page>
sem_destroy <-> destroy an unnamed semaphore
#include <semaphore.h>
int sem_destroy(sem_t *sem);
The sem_destroy() function is used to destroy the unnamed semaphore indicated by sem. Only a semaphore that
was created using sem_init(3C) may be destroyed using sem_destroy(); the effect of calling sem_destroy() with a
named semaphore is undefined. The effect of subsequent use of the semaphore sem is undefined until sem is re-ini<hy>
tialized by another call to sem_init(3C).
It is safe to destroy an initialised semaphore upon which no threads are currently blocked. The effect of destroying a
semaphore upon which other threads are currently blocked is undefined.
If successful, sem_destroy() returns 0, otherwise it returns <mi>1 and sets errno to indicate the error.
The sem_destroy() function will fail if:
EINVAL The sem argument is not a valid semaphore.
The sem_destroy() function may fail if:
EBUSY There are currently processes (or LWPs or threads) blocked on the semaphore.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
sem_init(3C), sem_open(3C), attributes(5), standards(5)
