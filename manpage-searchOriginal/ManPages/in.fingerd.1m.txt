<beginning of page>
in.fingerd, fingerd <-> remote user information server
/usr/sbin/in.fingerd
fingerd implements the server side of the Name/Finger protocol, specified in RFC 742. The Name/Finger protocol
provides a remote interface to programs which display information on system status and individual users. The proto<hy>
col imposes little structure on the format of the exchange between client and server. The client provides a single
command line to the finger server which returns a printable reply.
fingerd waits for connections on TCP port 79. Once connected, it reads a single command line terminated by RE<hy>
TURN-LINEFEED and passes the arguments to finger(1), prepended with -s. fingerd closes its connections as soon
as the output is finished.
/var/adm/utmpx User and accounting information.
/etc/passwd System password file.
/var/adm/lastlog Last login times.
$HOME/.plan User's plans.
$HOME/.project User's projects.
fingerd and in.fingerd are IPv6-enabled. See ip6(7P).
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wrcmds
finger(1), svcs(1), inetadm(1M), inetd(1M), svcadm(1M), attributes(5), smf(5), ip6(7P)
Harrenstien, Ken, RFC 742, NAME/FINGER, Network Information Center, SRI International, Menlo Park, Calif.,
December 1977.
Connecting directly to the server from a TIP or an equally narrow-minded TELNET-protocol user program can re<hy>
sult in meaningless attempts at option negotiation being sent to the server, which foul up the command line interpre<hy>
tation. fingerd should be taught to filter out IAC's and perhaps even respond negatively (IAC does not) to all option
commands received.
The in.fingerd service is managed by the service management facility, smf(5), under the service identifier:
 svc:/network/finger:default
Administrative actions on this service, such as enabling, disabling, or requesting restart, can be performed using sv<hy>
cadm(1M). Responsibility for initiating and restarting this service is delegated to inetd(1M). Use inetadm(1M) to
make configuration changes and to view configuration information for this service. The service's status can be
queried using the svcs(1) command.
