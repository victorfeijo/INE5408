<beginning of page>
ddi_rep_put8, ddi_rep_put16, ddi_rep_put32, ddi_rep_put64, ddi_rep_putb, ddi_rep_putw, ddi_rep_putl,
ddi_rep_putll <-> write data to the mapped memory address, device register or allocated DMA memory address
#include <sys/ddi.h>
#include <sys/sunddi.h>
void ddi_rep_put8(ddi_acc_handle_t handle, uint8_t *host_addr,
 uint8_t *dev_addr, size_t repcount, uint_t flags);
void ddi_rep_put16(ddi_acc_handle_t handle, uint16_t *host_addr,
 uint16_t *dev_addr, size_t repcount, uint_t flags);
void ddi_rep_put32(ddi_acc_handle_t handle, uint32_t *host_addr,
 uint32_t *dev_addr, size_t repcount, uint_t flags);
void ddi_rep_put64(ddi_acc_handle_t handle, uint64_t *host_addr,
 uint64_t *dev_addr,size_t repcount, uint_t flags);
Solaris DDI specific (Solaris DDI). The ddi_rep_putb(), ddi_rep_putl(), ddi_rep_putll(), and ddi_rep_putw()
functions are obsolete. The ddi_rep_put8() function replaces ddi_rep_putb(). The ddi_rep_put32() function re<hy>
places ddi_rep_putl(). The ddi_rep_put64() function replaces ddi_rep_putll(). The ddi_rep_put16() function re<hy>
places ddi_rep_putw().
handle The data access handle returned from setup calls, such as ddi_regs_map_setup(9F).
host_addr Base host address.
dev_addr Base device address.
repcount Number of data accesses to perform.
flags Device address flags:
DDI_DEV_AUTOINCR Automatically increment the device address, dev_addr, during data accesses.
DDI_DEV_NO_AUTOINCR Do not advance the device address, dev_addr, during data accesses.
These routines generate multiple writes to the mapped memory or device register. repcount data is copied from the
host address, host_addr, to the device address, dev_addr. For each input datum, the ddi_rep_put8(),
ddi_rep_put16(), ddi_rep_put32(), and ddi_rep_put64() functions write 8 bits, 16 bits, 32 bits, and 64 bits of data,
respectively, to the device address, dev_addr. dev_addr and host_addr must be aligned to the datum boundary de<hy>
scribed by the function.
Each individual datum will automatically be translated to maintain a consistent view between the host and the device
based on the encoded information in the data access handle. The translation may involve byte-swapping if the host
and the device have incompatible endian characteristics.
When the flags argument is set to DDI_DEV_AUTOINCR, these functions treat the device address, dev_addr, as a
memory buffer location on the device and increment its address on the next input datum. However, when the flags ar<hy>
gument is set to DDI_DEV_NO_AUTOINCR, the same device address will be used for every datum access. For
example, this flag may be useful when writing to a data register.
These functions can be called from user, kernel, or interrupt context.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyT{ ddi_rep_putb(), ddi_rep_putl(), ddi_rep_putll(), and ddi_rep_putw() are Obsolete ddi_rep_put8(),
ddi_rep_put16(), ddi_rep_put32(), ddi_rep_put64() are Committed T}
ddi_get8(9F), ddi_put8(9F), ddi_regs_map_free(9F), ddi_regs_map_setup(9F), ddi_rep_get8(9F), ddi_de<hy>
vice_acc_attr(9S)
