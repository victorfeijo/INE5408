<beginning of page>
auths <-> print authorizations granted to a user
auths [ user ]...
The auths command prints on standard output the authorizations that you or the optionally-specified user or role
have been granted. Authorizations are rights that are checked by certain privileged programs to determine whether a
user may execute restricted functionality.
Each user may have zero or more authorizations. Authorizations are represented by fully-qualified names, which
identify the organization that created the authorization and the functionality that it controls. Following the Java con<hy>
vention, the hierarchical components of an authorization are separated by dots (.), starting with the reverse order In<hy>
ternet domain name of the creating organization, and ending with the specific function within a class of authoriza<hy>
tions.
An asterisk (*) indicates all authorizations in a class.
A user's authorizations are looked up in user_attr(4) and in the /etc/security/policy.conf file (see policy.conf(4)).
Authorizations may be specified directly in user_attr(4) or indirectly through prof_attr(4). Authorizations may also
be assigned to every user in the system directly as default authorizations or indirectly as default profiles in the
/etc/security/policy.conf file. Example 1 Sample output
The auths output has the following form:
 example% auths tester01 tester02
 tester01 : solaris.system.date,solaris.jobs.admin
 tester02 : solaris.system.*
 example%
Notice that there is no space after the comma separating the authorization names in tester01.
The following exit values are returned:
0 Successful completion.
1 An error occurred.
/etc/user_attr
/etc/security/auth_attr
/etc/security/policy.conf
/etc/security/prof_attr
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
profiles(1), roles(1), getauthattr(3SECDB), auth_attr(4), policy.conf(4), prof_attr(4), user_attr(4), attributes(5)
