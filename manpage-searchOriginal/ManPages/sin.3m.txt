<beginning of page>
sin, sinf, sinl <-> sine function
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double sin(double x);
float sinf(float x);
long double sinl(long double x);
These functions compute the sine of its argument x, measured in radians.
Upon successful completion, these functions return the sine of x.
If x is NaN, a NaN is returned.
If x is <+->0, x is returned.
If x is <+->Inf, a domain error occurs and a NaN is returned.
These functions will fail if:
Domain Error The x argument is <+->Inf.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the invalid floating-point
exception is raised.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
asin(3M), feclearexcept(3M), fetestexcept(3M), isnan(3M), math.h(3HEAD), attributes(5), standards(5)
