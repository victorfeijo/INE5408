<beginning of page>
dat_ep_set_watermark <-> set high watermark on Endpoint
cc [ flag... ] file... -ldat [ library... ]
#include <dat/udat.h>
DAT_RETURN
 dat_ep_set_watermark (
 IN DAT_EP_HANDLE ep_handle,
 IN DAT_COUNT soft_high_watermark,
 IN DAT_COUNT hard_high_watermark
 )
ep_handle The handle for an instance of an Endpoint.
soft_high_watermark The soft high watermark for the number of Recv buffers consumed by the Endpoint.
hard_high_watermark The hard high watermark for the number of Recv buffers consumed by the Endpoint.
The dat_ep_set_watermark() function sets the soft and hard high watermark values for EP and arms EP for gener<hy>
ating asynchronous events for high watermarks. An asynchronous event will be generated for IA async_evd when
the number of Recv buffers at EP exceeds the soft high watermark for the first time. A connection broken event will
be generated for EP connect_evd when the number of Recv buffers at EP exceeds the hard high watermark. These
can occur during this call or when EP takes a buffer from the SRQ or EP RQ. The soft and hard high watermark
asynchronous event generation and setting are independent of each other.
The asynchronous event for a soft high watermark is generated only once per setting. Once an event is generated, no
new asynchronous events for the soft high watermark is generated until the EP is again set for the soft high water<hy>
mark. If the Consumer is once again interested in the event, the Consumer should again set the soft high watermark.
If the Consumer is not interested in a soft or hard high watermark, the value of DAT_WATERMARK_INFINITE
can be specified for the case that is the default value. This value specifies that a non-asynchronous event will be gen<hy>
erated for a high watermark EP attribute for which this value is set. It does not prevent generation of a connection
broken event for EP when no Recv buffer is available for a message arrived on the EP connection.
The operation is supported for all states of Endpoint.
DAT_SUCCESS The operation was successful.
DAT_INVALID_HANDLE The ep_handle argument is an invalid DAT handle.
DAT_INVALID_PARAMETER One of the parameters is invalid.
DAT_MODEL_NOT_SUPPORTED The requested Model was not supported by the Provider. The Provider does
not support EP Soft or Hard High Watermarks.
For a hard high watermark, the Provider is ready to generate a connection broken event as soon as the connection is
established.
If the asynchronous event for a soft or hard high watermark has not yet been generated, this call simply modifies the
values for these attributes. The Provider remains armed for generation of these asynchronous events.
Regardless of whether an asynchronous event for the soft and hard high watermark has been generated, this opera<hy>
tion will set the generation of an asynchronous event with the Consumer-provided high watermark values. If the new
high watermark values are below the current number of Receive DTOs at EP, an asynchronous event will be generat<hy>
ed immediately. Otherwise the old soft or hard (or both) high watermark values are simply replaced with the new
ones.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard: uDAPL, 1.2 _ MT-LevelUnsafe
dat_ep_create(3DAT), dat_ep_recv_query(3DAT), dat_srq_create(3DAT), dat_srq_free(3DAT),
dat_srq_post_recv(3DAT), dat_srq_query(3DAT), dat_srq_resize(3DAT), dat_srq_set_lw(3DAT), libdat(3LIB),
attributes(5)
