<beginning of page>
thr_join <-> wait for thread termination
cc -mt [ flag... ] file...[ library... ]
#include <thread.h>
int thr_join(thread_t thread, thread_t *departed, void **status);
The thr_join() function suspends processing of the calling thread until the target thread completes. The thread argu<hy>
ment must be a member of the current process and cannot be a detached thread. See thr_create(3C).
If two or more threads wait for the same thread to complete, all will suspend processing until the thread has termi<hy>
nated, and then one thread will return successfully and the others will return with an error of ESRCH. The
thr_join() function will not block processing of the calling thread if the target thread has already terminated.
If a thr_join() call returns successfully with a non-null status argument, the value passed to thr_exit(3C) by the ter<hy>
minating thread will be placed in the location referenced by status.
If the target thread ID is 0, thr_join() finds and returns the status of a terminated undetached thread in the process.
If no such thread exists, it suspends processing of the calling thread until a thread for which no other thread is wait<hy>
ing enters that state, at which time it returns successfully, or until all other threads in the process are either daemon
threads or threads waiting in thr_join(), in which case it returns EDEADLK. See NOTES.
If departed is not NULL, it points to a location that is set to the ID of the terminated thread if thr_join() returns suc<hy>
cessfully.
If successful, thr_join() returns 0. Otherwise, an error number is returned to indicate the error.
EDEADLK A joining deadlock would occur, such as when a thread attempts to wait for itself, or the calling thread
is waiting for any thread to exit and only daemon threads or waiting threads exist in the process.
ESRCH No undetached thread could be found corresponding to the given thread ID.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
thr_create(3C), thr_exit(3C), wait(3C), attributes(5), standards(5)
Using thr_join(3C) in the following syntax,
 while (thr_join(0, NULL, NULL) == 0);
will wait for the termination of all non-daemon threads, excluding threads that are themselves waiting in thr_join().
