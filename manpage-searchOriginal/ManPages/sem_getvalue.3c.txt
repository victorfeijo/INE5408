<beginning of page>
sem_getvalue <-> get the value of a semaphore
#include <semaphore.h>
int sem_getvalue(sem_t *restrict sem, int *restrict sval);
The sem_getvalue() function updates the location referenced by the sval argument to have the value of the sema<hy>
phore referenced by sem without affecting the state of the semaphore. The updated value represents an actual sema<hy>
phore value that occurred at some unspecified time during the call, but it need not be the actual value of the sema<hy>
phore when it is returned to the calling process.
If sem is locked, then the value returned by sem_getvalue() is either zero or a negative number whose absolute value
represents the number of processes waiting for the semaphore at some unspecified time during the call.
The value set in sval may be 0 or positive. If sval is 0, there may be other processes (or LWPs or threads) waiting for
the semaphore; if sval is positive, no process is waiting.
Upon successful completion, sem_getvalue() returns 0. Otherwise, it returns <mi>1 and sets errno to indicate the error.
The sem_getvalue() function will fail if:
EINVAL The sem argument does not refer to a valid semaphore.
ENOSYS The sem_getvalue() function is not supported by the system.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
semctl(2), semget(2), semop(2), sem_post(3C), sem_wait(3C), attributes(5), standards(5)
