<beginning of page>
modunload <-> unload a module
modunload -i module_id [-e exec_file]
modunload unloads a loadable module from the running system. The module_id is the ID of the module as shown
by modinfo(1M). If ID is 0, all modules that were autoloaded which are unloadable, are unloaded. Modules loaded
by modload(1M) are not affected.
The following options are supported:
-e exec_file Specify the name of a shell script or executable image file to be executed before the module is unloaded.
The first argument passed is the module id (in decimal). There are two additional arguments that are module specific.
For loadable drivers, the second argument is the driver major number. For loadable system calls, the second argu<hy>
ment is the system call number. For loadable exec classes, the second argument is the index into the execsw table.
For loadable filesystems, the second argument is the index into the vfssw table. For loadable streams modules, the
second argument is the index into the fmodsw table. For loadable scheduling classes, the second argument is the in<hy>
dex into the class array. Minus one is passed for an argument that does not apply.
-i module_id Specify the module to be unloaded.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu
modinfo(1M), modload(1M), update_drv(1M), attributes(5)
The modunload command is often used on driver modules to force the system to reread the associated driver config<hy>
uration file. While this works in the current Solaris release, it is not the supported way to reread the configuration file
and is not guaranteed to work in future releases. The supported way for rereading driver configuration file is through
the update_drv(1M) command.
