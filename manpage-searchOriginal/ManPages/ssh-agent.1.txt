<beginning of page>
ssh-agent <-> authentication agent
ssh-agent [-a bind_address] [-c | -s ] [-d]
 [-t life] [command [args]...]
ssh-agent [-c | -s] -k
ssh-agent is a program to hold private keys used for public key authentication (RSA, DSA). ssh-agent is often start<hy>
ed at the beginning of a login session. All other windows or programs are started as clients to the ssh-agent pro<hy>
gram. Through use of environment variables, the agent can be located and automatically used for authentication
when logging in to other machines using ssh(1). See the System Administration Guide: Security Services.
If a command line is given, this is executed as a subprocess of the agent. When the command dies, so does the agent.
The agent initially does not have any private keys. Keys are added using ssh-add(1), which sends the identity to the
agent. Several identities can be stored in the agent; the agent can automatically use any of these identities. Use the -l
option in ssh-add(1) to display the identities currently held by the agent.
The agent is run in the user's local host. Authentication data need not be stored on any other machine, and authenti<hy>
cation passphrases never go over the network. However, if the connection to the agent is forwarded over SSH remote
logins, the user can use the privileges given by the identities anywhere in the network in a secure way.
There are two main ways to get an agent setup. Either you let the agent start a new subcommand into which some
environment variables are exported, or you let the agent print the needed shell commands (either sh(1) or csh(1) syn<hy>
tax can be generated) which can be evalled in the calling shell. Later, use ssh(1) to look at these variables and use
them to establish a connection to the agent.
A unix-domain socket is created (/tmp/ssh-XXXXXXXX/agent.pid) and the name of this socket is stored in the
SSH_AUTH_SOCK environment variable. The socket is made accessible only to the current user. This method is
easily abused by root or another instance of the same user.
The SSH_AGENT_PID environment variable holds the agent's PID.
The agent exits automatically when the command given on the command line terminates.
The following options are supported:
-a bind_address Binds the agent to the unix-domain socket bind_address. The default is /tmp/ssh-
XXXXXXXX/agent.pid.
-c Generates C-shell commands on stdout. This is the default if SHELL indicates that it is a csh style of shell.
-d Debug mode. When this option is specified, ssh-agent does not fork.
-k Kills the current agent (given by the SSH_AGENT_PID environment variable).
-s Generates Bourne shell commands on stdout. This is the default if SHELL does not indicate that it is a csh style
of shell.
-t life Set a default value for the maximum lifetime (life) of identities added to the agent. life can be specified in sec<hy>
onds or in a time format specified in sshd_config(4). life specified for an identity with ssh-add(1) overrides this val<hy>
ue. Without this option the default maximum life is forever.
The following exit values are returned:
0 Successful completion.
1 An error occurred.
<beginning of page>
/tmp/ssh-XXXXXXXX/agent.pid
Unix-domain sockets used to contain the connection to the authentication agent. These sockets should only be read<hy>
able by the owner. The sockets are removed when the agent exits.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wsshu _ Interface StabilityCommitted
ssh(1), ssh-add(1), ssh-keygen(1), sshd(1M), sshd_config(4), attributes(5)
System Administration Guide: Security Services
