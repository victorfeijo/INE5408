<beginning of page>
curs_touch, touchwin, touchline, untouchwin, wtouchln, is_linetouched, is_wintouched <-> curses refresh control rou<hy>
tines
cc [ flag ... ] file ... -lcurses [ library ... ]
#include <curses.h>
int touchwin(WINDOW *win);
int touchline(WINDOW *win, int start, int count);
int untouchwin(WINDOW *win);
int wtouchln(WINDOW *win, int y, int n, int changed);
int is_linetouched(WINDOW *win, int line);
int is_wintouched(WINDOW *win);
The touchwin() and touchline() routines throw away all optimization information about which parts of the window
have been touched, by pretending that the entire window has been drawn on. This is sometimes necessary when us<hy>
ing overlapping windows, since a change to one window affects the other window, but the records of which lines
have been changed in the other window do not reflect the change. The routine touchline() only pretends that count
lines have been changed, beginning with line start.
The untouchwin() routine marks all lines in the window as unchanged since the last call to wrefresh().
 The wtouchln() routine makes n lines in the window, starting at line y, look as if they have (changed=1) or have
not (changed=0) been changed since the last call to wrefresh().
The is_linetouched() and is_wintouched() routines return TRUE if the specified line/window was modified since
the last call to wrefresh(); otherwise they return FALSE. In addition, is_linetouched() returns ERR if line is not
valid for the given window.
All routines return the integer ERR upon failure and an integer value other than ERR upon successful completion,
unless otherwise noted in the preceding routine descriptions.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelUnsafe
curs_refresh(3CURSES), curses(3CURSES), attributes(5)
The header <curses.h> automatically includes the headers <stdio.h> and <unctrl.h>.
Note that all routines except wtouchln() may be macros.
