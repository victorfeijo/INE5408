<beginning of page>
mlib_ImageThresh1_Inp <-> image thresholding
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_ImageThresh1_Inp(mlib_image *srcdst,
 const mlib_s32 *thresh, const mlib_s32 *ghigh, const mlib_s32 *glow);
The mlib_ImageThresh1_Inp() function compares each pixel in the image to a threshold value on a per-channel
basis. If the pixel is less than or equal to the threshold value, then it is reset to the low output level. If the pixel is
greater than the threshold value, then it is reset to the high output level.
It uses the following equation:
 srcdst[x][y][i] = glow[i] if srcdst[x][y][i] <<=> thresh[i]
 srcdst[x][y][i] = ghigh[i] if srcdst[x][y][i] > thresh[i]
The function takes the following arguments:
srcdst Pointer to source and destination image.
thresh Threshold value. thresh[i] contains the threshold for channel i.
ghigh High output level. ghigh[i] contains the high output level for channel i.
glow Low output level. glow[i] contains the low output level for channel i.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_ImageThresh1(3MLIB), mlib_ImageThresh1_Fp(3MLIB), mlib_ImageThresh1_Fp_Inp(3MLIB),
mlib_ImageThresh2(3MLIB), mlib_ImageThresh2_Fp(3MLIB), mlib_ImageThresh2_Fp_Inp(3MLIB),
mlib_ImageThresh2_Inp(3MLIB), mlib_ImageThresh3(3MLIB), mlib_ImageThresh3_Fp(3MLIB), mlib_Im<hy>
ageThresh3_Fp_Inp(3MLIB), mlib_ImageThresh3_Inp(3MLIB), mlib_ImageThresh4(3MLIB), mlib_Im<hy>
ageThresh4_Fp(3MLIB), mlib_ImageThresh4_Fp_Inp(3MLIB), mlib_ImageThresh4_Inp(3MLIB), mlib_Im<hy>
ageThresh5(3MLIB), mlib_ImageThresh5_Fp(3MLIB), mlib_ImageThresh5_Fp_Inp(3MLIB), mlib_ImageTh<hy>
resh5_Inp(3MLIB), attributes(5)
