<beginning of page>
compress, uncompress, zcat <-> compress, uncompress files or display expanded files
compress [-fv/] [-b bits] [file]...
compress -c [-fv] [-b bits] [file]
uncompress [-fv] [-c | -/] [file]...
zcat [file]...
The compress utility attempts to reduce the size of the named files by using adaptive Lempel-Ziv coding. Except
when the output is to the standard output, each file is replaced by one with the extension .Z, while keeping the same
ownership modes, change times and modification times, ACLs, and extended attributes. The compress utility also at<hy>
tempt to set the owner and group of file.z to the owner and group of file, but does not fail if this cannot be done. If
appending the .Z to the file pathname would make the pathname exceed 1023 bytes, the command fails. If no files
are specified, the standard input is compressed to the standard output.
The amount of compression obtained depends on the size of the input, the number of bits per code, and the distribu<hy>
tion of common substrings. Typically, text such as source code or English is reduced by 50<mi>60%. Compression is
generally much better than that achieved by Huffman coding (as used in pack(1)) and it takes less time to compute.
The bits parameter specified during compression is encoded within the compressed file, along with a magic number
to ensure that neither decompression of random data nor recompression of compressed data is subsequently allowed.
The uncompress utility restores files to their original state after they have been compressed using the compress util<hy>
ity. If no files are specified, the standard input is uncompressed to the standard output.
This utility supports the uncompressing of any files produced by compress. For files produced by compress on other
systems, uncompress supports 9- to 16-bit compression (see -b).
The zcat utility writes to standard output the uncompressed form of files that have been compressed using com<hy>
press. It is the equivalent of uncompress-c. Input files are not affected.
The following options are supported:
-b bits Sets the upper limit (in bits) for common substring codes. bits must be between 9 and 16 (16 is the default).
Lowering the number of bits result in larger, less compressed files.
-c Writes to the standard output; no files are changed and no .Z files are created. The behavior of zcat is identical to
that of `uncompress -c'.
-f When compressing, forces compression of file, even if it does not actually reduce the size of the file, or if the cor<hy>
responding file.Z file already exists.
If the -f option is not specified, and the process is not running in the background, prompts to verify whether an exist<hy>
ing file should be overwritten. If the response is affirmative, the existing file is overwritten. When uncompressing,
does not prompt for overwriting files. If the -f option is not specified, and the process is not running in the back<hy>
ground, prompts to verify whether an existing file should be overwritten. If the standard input is not a terminal and -f
is not specified, writes a diagnostic message to standard error and exits with a status greater than 0.
-v Verbose. Writes to standard error messages concerning the percentage reduction or expansion of each file.
-/ When compressing or decompressing, copies any extended system attributes associated with the source file to the
target file and copies any extended system attributes associated with extended attributes of the source file to the cor<hy>
responding extended attributes associated with the target file. If any extended system attributes cannot be copied, the
original file is retained, a diagnostic is written to stderr, and the final exit status is non-zero.
The following operand is supported:
file A path name of a file to be compressed by compress, uncompressed by uncompress, or whose uncompressed
form is written to standard out by zcat. If file is <mi>, or if no file is specified, the standard input is used.
<beginning of page>
See largefile(5) for the description of the behavior of compress, uncompress, and zcat when encountering files
greater than or equal to 2 Gbyte ( 2^31 bytes).
See environ(5) for descriptions of the following environment variables that affect the execution of compress, un<hy>
compress, and zcat: LANG, LC_ALL, LC_COLLATE, LC_CTYPE, LC_MESSAGES, and NLSPATH.
Affirmative responses are processed using the extended regular expression defined for the yesexpr keyword in the
LC_MESSAGES category of the user's locale. The locale specified in the LC_COLLATE category defines the be<hy>
havior of ranges, equivalence classes, and multi-character collating elements used in the expression defined for ye<hy>
sexpr. The locale specified in LC_CTYPE determines the locale for interpretation of sequences of bytes of text data
a characters, the behavior of character classes used in the expression defined for the yesexpr. See locale(5).
The following error values are returned:
0 Successful completion.
1 An error occurred.
2 One or more files were not compressed because they would have increased in size (and the -f option was not speci<hy>
fied).
>2 An error occurred.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wesu _ CSIEnabled _ Interface StabilityCommitted _ StandardSee standards(5).
ln(1), pack(1), fgetattr(3C), fsetattr(3C), attributes(5), environ(5), largefile(5), locale(5), standards(5)
Usage: compress [-fv/] [-b bits] [file... ]
compress c [-fv] [-b bits] [file... ]
Invalid options were specified on the command line.
Usage: uncompress [-fv] [-c | -/] [file]...
Invalid options were specified on the command line.
Missing maxbits
Maxbits must follow -b, or invalid maxbits, not a numeric value.
file: not in compressed format
The file specified to uncompress has not been compressed.
file: compressed with xxbits, can only handle yybits
file was compressed by a program that could deal with more bits than the compress code on this machine. Recom<hy>
press the file with smaller bits.
file: already has .Z suffix -- no change
The file is assumed to be already compressed. Rename the file and try again.
<beginning of page>
file: already exists; do you wish to overwrite (y or n)?
Respond y if you want the output file to be replaced; n if not.
uncompress: corrupt input
A SIGSEGV violation was detected, which usually means that the input file is corrupted.
Compression:xx.xx%
Percentage of the input saved by compression. (Relevant only for -v.)
- - not a regular file: unchanged
When the input file is not a regular file, (such as a directory), it is left unaltered.
- - has xx other links: unchanged
The input file has links; it is left unchanged. See ln(1) for more information.
- - file unchanged
No savings are achieved by compression. The input remains uncompressed.
- -filename too long to tack on .Z
The path name is too long to append the .Z suffix.
- -cannot preserve extended attributes. file unchanged
Extended system attributes could not be copied.
Although compressed files are compatible between machines with large memory, -b 12 should be used for file trans<hy>
fer to architectures with a small process data space (64KB or less).
compress should be more flexible about the existence of the .Z suffix.
