<beginning of page>
termios <-> general terminal interface
#include <termios.h>
int tcgetattr(int fildes, struct termios *termios_p);
int tcsetattr(int fildes, int optional_actions,
 const struct termios *termios_p);
int tcsendbreak(int fildes, int duration);
int tcdrain(int fildes);
int tcflush(int fildes, int queue_selector);
int tcflow(int fildes, int action);
speed_t cfgetospeed(const struct termios *termios_p);
int cfsetospeed(struct termios *termios_p, speed_t speed);
speed_t cfgetispeed(const struct termios *termios_p);
int cfsetispeed(struct termios *termios_p, speed_t speed);
#include <sys/types.h>
#include <termios.h>
pid_t tcgetpgrp(int fildes);
int tcsetpgrp(int fildes, pid_t pgid);
pid_t tcgetsid(int fildes);
These functions describe a general terminal interface for controlling asynchronous communications ports. A more
detailed overview of the terminal interface can be found in termio(7I), which also describes an ioctl(2) interface that
provides the same functionality. However, the function interface described by these functions is the preferred user in<hy>
terface.
Each of these functions is now described on a separate manual page.
ioctl(2), cfgetispeed(3C), cfgetospeed(3C), cfsetispeed(3C), cfsetospeed(3C), tcdrain(3C), tcflow(3C),
tcflush(3C), tcgetattr(3C), tcgetpgrp(3C), tcgetsid(3C), tcsendbreak(3C), tcsetattr(3C), tcgetpgrp(3C), tcsend<hy>
break(3C), termio(7I)
