<beginning of page>
ldi_poll <-> Poll a device
#include <sys/sunldi.h>
int ldi_poll(ldi_handle_t lh, short events, int anyyet, short *reventsp,
 struct pollhead **phpp);
lh Layered handle.
events Potential events. Valid events are:
POLLIN Data other than high priority data may be read without blocking.
POLLOUT Normal data may be written without blocking.
POLLPRI High priority data may be received without blocking.
POLLHUP Device hangup has occurred.
POLLERR An error has occurred on the device.
POLLRDNORM Normal data (priority band = 0) may be read without blocking.
POLLRDBAND Data from a non-zero priority band may be read without blocking.
POLLWRNORM Data other than high priority data may be read without blocking.
POLLWRBAND Priority data (priority band > 0) may be written.
anyyet A flag that is non-zero if any other file descriptors in the pollfd array have events pending. The
poll(2) system call takes a pointer to an array of pollfd structures as one of its arguments. See poll(2) for
more details.
reventsp Pointer to a bitmask of the returned events satisfied.
phpp Pointer to a pointer to a pollhead structure.
The ldi_poll() function passes a poll request to the device entry point for the device specified by the layered handle.
This operation is supported for block, character, and streams devices.
The ldi_poll() function returns 0 upon success. If a failure occurs before the request is passed on to the device, pos<hy>
sible return values are:
EINVAL Invalid input parameters.
ENOTSUP Operation is not supported for this device.
These functions may be called from user or kernel context.
