<beginning of page>
mlib_VectorMinimum_U8, mlib_VectorMinimum_S8, mlib_VectorMinimum_S16, mlib_VectorMinimum_S32,
mlib_VectorMinimum_F32, mlib_VectorMinimum_D64 <-> find the minimum value in a vector
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VectorMinimum_U8(mlib_u8 *min, const mlib_u8 *x,
 mlib_s32 n);
mlib_status mlib_VectorMinimum_S8(mlib_s8 *min, const mlib_s8 *x,
 mlib_s32 n);
mlib_status mlib_VectorMinimum_S16(mlib_s16 *min, const mlib_s16 *x,
 mlib_s32 n);
mlib_status mlib_VectorMinimum_S32(mlib_s32 *min, const mlib_s32 *x,
 mlib_s32 n);
mlib_status mlib_VectorMinimum_F32(mlib_f32 *min, const mlib_f32 *x,
 mlib_s32 n);
mlib_status mlib_VectorMinimum_D64(mlib_d64 *min, const mlib_d64 *x,
 mlib_s32 n);
Each of these functions finds the minimum value of all elements in a vector.
The following equation is used:
 max[0] = MIN{ x[i] i = 0, 1, ..., (n - 1) }
Each of the functions takes the following arguments:
min Pointer to the minimum value.
x Pointer to the first element of the source vector.
n Number of elements in the source vector.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VectorMaximum_U8(3MLIB), mlib_MatrixMaximum_U8(3MLIB), mlib_MatrixMinimum_U8(3MLIB),
attributes(5)
