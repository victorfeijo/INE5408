<beginning of page>
mq_unlink <-> remove a message queue
#include <mqueue.h>
int mq_unlink(const char *name);
The mq_unlink() function removes the message queue named by the pathname name. After a successful call to
mq_unlink() with name, a call to mq_open(3C) with name fails if the flag O_CREAT is not set in flags. If one or
more processes have the message queue open when mq_unlink() is called, destruction of the message queue is post<hy>
poned until all references to the message queue have been closed. Calls to mq_open(3C) to re-create the message
queue may fail until the message queue is actually removed. However, the mq_unlink() call need not block until all
references have been closed; it may return immediately.
Upon successful completion, mq_unlink() returns 0; otherwise, the named message queue is not changed by this
function call, the function returns <mi>1 and sets errno to indicate the error.
The mq_unlink() function will fail if:
EACCES Permission is denied to unlink the named message queue.
ENAMETOOLONG The length of the name string exceeds PATH_MAX, or a pathname component is longer
than NAME_MAX while _POSIX_NO_TRUNC is in effect.
ENOENT The named message queue, name, does not exist.
ENOSYS mq_unlink() is not supported by the system.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyCommitted _ MT-LevelMT-Safe _ StandardSee standards(5).
mqueue.h(3HEAD), mq_close(3C), mq_open(3C), attributes(5), standards(5)
Solaris 2.6 was the first release to support the Asynchronous Input and Output option. Prior to this release, this func<hy>
tion always returned <mi>1 and set errno to ENOSYS.
