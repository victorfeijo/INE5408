<beginning of page>
mlib_VideoIDCT8x8_U8_S16_DC <-> inverse Discrete Cosine Transform
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoIDCT8x8_U8_S16_DC(mlib_u8 *block,
 const mlib_s16 *coeffs, mlib_s32 stride);
The mlib_VideoIDCT8x8_U8_S16_DC() function can be used only when F(0,0) is nonzero. It computes the in<hy>
verse DCT (called IDCT) for the destination IDCT block of data type mlib_u8 and source DCT coefficients of data
type mlib_s16. This function is not guaranteed to be IEEE-1180-compliant. The output of the IDCT routine is the
difference between the current block and the reference block. The difference pixel can occupy nine bits and is repre<hy>
sented as a 16-bit datum. The output must be added to the motion-compensated reference block in order to recon<hy>
struct the current block.
The function takes the following arguments:
block Pointer to the current block. block must be 8-byte aligned.
coeffs Pointer to the source DCT coefficients. coeffs must be 8-byte aligned.
stride Stride, in bytes, between adjacent rows in a block. stride must be a multiple of eight..
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoIDCT_IEEE_S16_S16(3MLIB), mlib_VideoIDCT8x8_S16_S16(3MLIB), mlib_VideoID<hy>
CT8x8_S16_S16_DC(3MLIB), mlib_VideoIDCT8x8_S16_S16_NA(3MLIB), mlib_VideoID<hy>
CT8x8_S16_S16_Q1(3MLIB), mlib_VideoIDCT8x8_U8_S16(3MLIB), mlib_VideoID<hy>
CT8x8_U8_S16_NA(3MLIB), mlib_VideoIDCT8x8_U8_S16_Q1(3MLIB), attributes(5)
