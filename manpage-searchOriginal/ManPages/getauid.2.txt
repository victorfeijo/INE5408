<beginning of page>
getauid, setauid <-> get or set user audit identity
cc [ flag ... ] file ... -lbsm -lsocket -lnsl [ library ... ]
#include <sys/param.h>
#include <bsm/libbsm.h>
int getauid(au_id_t *auid);
int setauid(au_id_t *auid);
The getauid() function returns the audit user ID for the current process. This value is initially set at login time and
inherited by all child processes. This value does not change when the real/effective user IDs change, so it can be
used to identify the logged-in user even when running a setuid program. The audit user ID governs audit decisions
for a process.
The setauid() function sets the audit user ID for the current process.
Upon successful completion, the getauid() function returns the audit user ID of the current process on success. Oth<hy>
erwise, it returns <mi>1 and sets errno to indicate the error.
Upon successful completion the setauid() function returns 0. Otherwise, <mi>1 is returned and errno is set to indicate
the error.
The getauid() and setauid() functions will fail if:
EFAULT The auid argument points to an invalid address.
EPERM The {PRIV_SYS_AUDIT} privilege is not asserted in the effective set of the calling process.
The getauid() function will fail if:
EPERM The {PRIV_PROC_AUDIT} privilege is not asserted in the effective set of the calling process.
Only a process with appropriate privileges can successfully execute these calls.
bsmconv(1M), audit(2), getaudit(2), privileges(5)
The functionality described on this manual page is available only if the Solaris Auditing has been enabled. See
bsmconv(1M) for more information.
These functions have been superseded by getaudit(2) and setaudit().
