<beginning of page>
mlib_GraphicsDrawPoint, mlib_GraphicsDrawPoint_8, mlib_GraphicsDrawPoint_32, mlib_GraphicsDraw<hy>
Point_X_8, mlib_GraphicsDrawPoint_X_32, mlib_GraphicsDrawPoint_B_8, mlib_GraphicsDrawPoint_B_32 <->
draw point
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_GraphicsDrawPoint_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c);
mlib_status mlib_GraphicsDrawPoint_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c);
mlib_status mlib_GraphicsDrawPoint_X_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsDrawPoint_X_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsDrawPoint_B_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsDrawPoint_B_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 c, mlib_s32 a);
Each of the mlib_GraphicsDrawPoint_*() functions draws a point at (x,y) in color c.
Each of the mlib_GraphicsDrawPoint_X_*() functions draws a point at (x,y) in Xor mode as follows:
  data[x,y] ^= c ^ c2
Each of the mlib_GraphicsDrawPoint_B_*() functions draws a point at (x,y) with alpha blending as follows:
  data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
Each of the functions takes some of the following arguments:
buffer Pointer to the image into which the function is drawing.
x X coordinate of the point.
y Y coordinate of the point.
c Color used in the drawing.
c2 Alternation color.
a Alpha value for blending. 0 <<=> a <<=> 255.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
<beginning of page>
mlib_GraphicsDrawPointSet(3MLIB), attributes(5)
