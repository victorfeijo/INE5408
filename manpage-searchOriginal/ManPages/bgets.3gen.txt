<beginning of page>
bgets <-> read stream up to next delimiter
cc [ flag ... ] file ... -lgen [ library ... ]
#include <libgen.h>
char *bgets(char *buffer, size_t count, FILE *stream,
 const char *breakstring);
The bgets() function reads characters from stream into buffer until either count is exhausted or one of the characters
in breakstring is encountered in the stream. The read data is terminated with a null byte ('\0') and a pointer to the
trailing null is returned. If a breakstring character is encountered, the last non-null is the delimiter character that ter<hy>
minated the scan.
Note that, except for the fact that the returned value points to the end of the read string rather than to the beginning,
the call
 bgets(buffer, sizeof buffer, stream, "\n");
is identical to
 fgets (buffer, sizeof buffer, stream);
There is always enough room reserved in the buffer for the trailing null character.
If breakstring is a null pointer, the value of breakstring from the previous call is used. If breakstring is null at the
first call, no characters will be used to delimit the string.
NULL is returned on error or end-of-file. Reporting the condition is delayed to the next call if any characters were
read but not yet returned. Example 1 Example of the bgets() function.
The following example prints the name of the first user encountered in /etc/passswd, including a trailing ":"
 #include <stdio.h>
 #include<libgen.h>
 int main()
 {
  char buffer[8];
  FILE *fp;
  if ((fp = fopen("/etc/passwd","r")) == NULL) {
  perror("/etc/passwd");
  return 1;
  }
  if (bgets(buffer, 8, fp, ":") == NULL) {
  perror("bgets");
  return 1;
  }
  (void) puts(buffer);
  return 0;
 }
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
gets(3C), attributes(5)
When compiling multithread applications, the _REENTRANT flag must be defined on the compile line. This flag
<beginning of page>
should only be used in multithreaded applications.
