<beginning of page>
sinh, sinhf, sinhl <-> hyperbolic sine function
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double sinh(double x);
float sinhf(float x);
long double sinhl(long double x);
These functions compute the hyperbolic sine of x.
Upon successful completion, these functions return the hyperbolic sine of x.
If the result would cause an overflow, a range error occurs and <+->HUGE_VAL, <+->HUGE_VALF, and
<+->HUGE_VALL (with the same sign as x) is returned as appropriate for the type of the function.
If x is NaN, a NaN is returned.
If x is <+->0 or <+->Inf, x is returned.
For exceptional cases, matherr(3M) tabulates the values to be returned by acos() as specified by SVID3 and XPG3.
These functions will fail if:
Range Error The result would cause an overflow.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, the overflow floating-point ex<hy>
ception is raised.
The asinh() function sets errno to ERANGE if the result would cause an overflow.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
An application can also set errno to 0 before calling asinh(). On return, if errno is non-zero, an error has occurred.
The asinhf() and asinhl() functions do not set errno.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
asinh(3M), cosh(3M), feclearexcept(3M), fetestexcept(3M), isnan(3M), math.h(3HEAD), matherr(3M),
tanh(3M), attributes(5), standards(5)
