<beginning of page>
setkey <-> set encoding key
#include <stdlib.h>
void setkey(const char *key);
The setkey() function provides (rather primitive) access to the hashing algorithm employed by the crypt(3C) func<hy>
tion. The argument of setkey() is an array of length 64 bytes containing only the bytes with numerical value of 0 and
1. If this string is divided into groups of 8, the low-order bit in each group is ignored; this gives a 56-bit key which is
used by the algorithm. This is the key that will be used with the algorithm to encode a string block passed to en<hy>
crypt(3C).
No values are returned.
The setkey() function will fail if:
ENOSYS The functionality is not supported on this implementation.
In some environments, decoding may not be implemented. This is related to U.S. Government restrictions on en<hy>
cryption and decryption routines: the DES decryption algorithm cannot be exported outside the U.S.A. Historical
practice has been to ship a different version of the encryption library without the decryption feature in the routines
supplied. Thus the exported version of encrypt() does encoding but not decoding.
Because setkey() does not return a value, applications wishing to check for errors should set errno to 0, call
setkey(), then test errno and, if it is non-zero, assume an error has occurred.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelSafe
crypt(3C), encrypt(3C), attributes(5), standards(5)
