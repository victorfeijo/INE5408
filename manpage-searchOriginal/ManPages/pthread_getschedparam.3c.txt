<beginning of page>
pthread_getschedparam, pthread_setschedparam <-> access dynamic thread scheduling parameters
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_getschedparam(pthread_t thread, int *restrict policy,
 struct sched_param *restrict param);
int pthread_setschedparam(pthread_t thread, int policy,
 const struct sched_param *param);
The pthread_getschedparam() and pthread_setschedparam() functions allow the scheduling policy and schedul<hy>
ing parameters of individual threads within a multithreaded process to be retrieved and set. Supported policies are :
SCHED_OTHER traditional time-sharing scheduling class
SCHED_FIFO real-time class: run to completion
SCHED_RR real-time class: round-robin
SCHED_IA interactive time-sharing class
SCHED_FSS fair-share scheduling class
SCHED_FX fixed priority scheduling class
See pthreads(5). The affected scheduling parameter is the sched_priority member of the sched_param structure.
The pthread_getschedparam() function retrieves the scheduling policy and scheduling parameters for the thread
whose thread ID is given by thread and stores those values in policy and param, respectively. The priority value re<hy>
turned from pthread_getschedparam() is the value specified by the most recent pthread_setschedparam() or
pthread_create() call affecting the target thread, and does not reflect any temporary adjustments to its priority as a
result of any priority inheritance or ceiling functions. The pthread_setschedparam() function sets the scheduling
policy and associated scheduling parameters for the thread whose thread ID is given by thread to the policy and as<hy>
sociated parameters provided in policy and param, respectively.
If the pthread_setschedparam() function fails, no scheduling parameters will be changed for the target thread.
If successful, the pthread_getschedparam() and pthread_setschedparam() functions return 0. Otherwise, an error
number is returned to indicate the error.
The pthread_getschedparam() and pthread_gsetschedparam() functions will fail if:
ESRCH The value specified by thread does not refer to an existing thread.
The pthread_setschedparam() function will fail if:
EINVAL The value specified by policy or one of the scheduling parameters associated with the scheduling policy
policy is invalid.
EPERM The caller does not have the appropriate permission to set either the scheduling parameters or the schedul<hy>
ing policy of the specified thread.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
pthread_attr_init(3C), sched_getparam(3C), sched_get_priority_max(3C)sched_get_priority_max(3C),
sched_get_priority_min(3C), sched_setparam(3C), sched_getscheduler(3C), sched_setscheduler(3C), at<hy>
tributes(5), pthreads(5), standards(5)
