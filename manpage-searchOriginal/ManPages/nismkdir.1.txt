<beginning of page>
nismkdir <-> create NIS+ directories
nismkdir [-D defaults] [-m hostname] [-s hostname] dirname
The nismkdir command creates new NIS+ subdirectories within an existing domain. It can also be used to create
replicated directories. Without options, this command will create a subdirectory with the same master and the repli<hy>
cas as its parent directory.
It is advisable to use nisserver(1M) to create an NIS+ domain which consists of the specified directory along with
the org_dir and groups_dir subdirectories.
The two primary aspects that are controlled when making a directory are its access rights, and its degree of replica<hy>
tion.
A host that serves a NIS+ directory must be a NIS+ client in a directory above the one it is serving. The exceptions
to this rule are the root NIS+ servers, which are both clients and servers of the same NIS+ directory.
When the host's default domain is different from the default domain on the client where the command is executed,
the hostname supplied as an argument to the -s or -m options must be fully qualified.
Special per-server and per-directory access restrictions may apply when this command updates the serving lists of
the affected NIS+ servers. See nisopaccess(1).
The following options are supported:
-D defaults Specify a different set of defaults to be used when creating new directories. The defaults string is a series
of tokens separated by colons. These tokens represent the default values to be used for the generic object properties.
All of the legal tokens are described below.
ttl=time This token sets the default time to live for objects that are created by this command. The value time is speci<hy>
fied in the format as defined by the nischttl(1) command. The default value is 12h (12 hours).
owner=ownername This token specifies that the NIS+ principal ownername should own the created object. The de<hy>
fault for this value is the principal who is executing the command.
group=groupname This token specifies that the group groupname should be the group owner for the object that is
created. The default value is NULL.
access=rights This token specifies the set of access rights that are to be granted for the given object. The value rights
is specified in the format as defined by the nischmod(1) command. The default value is <mi><mi><mi><mi>rmcdr<mi><mi><mi>r<mi><mi><mi>.
-m hostname If the directory named by dirname does not exist, then a new directory that is not replicated is created
with host hostname as its master server.
If the directory name by dirname does exist, then the host named by hostname is made its master server.
-s hostname Specify that the host hostname will be a replica for an existing directory named dirname.
The following operand is supported:
dirname The fully qualified NIS+ name of the directory that has to be created.
Example 1 Using the nismkdir Command
To create a new directory bar under the foo.com. domain that shares the same master and replicas as the foo.com.
directory one would use the command:
 example% nismkdir bar.foo.com.
<beginning of page>
To create a new directory bar.foo.com. that is not replicated under the foo.com. domain one would use the com<hy>
mand:
 example% nismkdir -m myhost.foo.com. bar.foo.com.
To add a replica server of the bar.foo.com. directory, one would use the command:
 example% nismkdir -s replica.foo.com. bar.foo.com.
NIS_DEFAULTS This variable contains a defaults string that will override the NIS+ standard defaults. If the -D
switch is used those values will then override both the NIS_DEFAULTS variable and the standard defaults.
NIS_PATH If this variable is set, and the NIS+ directory name is not fully qualified, each directory specified will be
searched until the directory is found (see nisdefaults(1)).
The following exit values are returned:
0 Successful operation.
1 Operation failed.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wnisu
NIS+(1), nischmod(1), nischttl(1), nisdefaults(1), nisls(1), nisopaccess(1), nisrmdir(1), nisserver(1M), at<hy>
tributes(5)
NIS+ might not be supported in future releases of the Solaris operating system. Tools to aid the migration from
NIS+ to LDAP are available in the current Solaris release. For more information, visit http://www.sun.com/directo<hy>
ry/nisplus/transition.html.
