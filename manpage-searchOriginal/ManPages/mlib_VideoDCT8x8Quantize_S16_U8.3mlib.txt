<beginning of page>
mlib_VideoDCT8x8Quantize_S16_U8 <-> forward Discrete Cosine Transform (DCT) and quantization
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoDCT8x8Quantize_S16_U8(
 mlib_s16 coeffs[64], const mlib_u8 *block,
 const mlib_d64 dqtable[64], mlib_s32 stride);
The mlib_VideoDCT8x8Quantize_S16_U8() function computes the forward DCT and then quantizes the DCT co<hy>
efficients. It's a combination of mlib_VideoDCT8x8_S16_U8() and mlib_VideoQuantize_S16() for better perfor<hy>
mance.
The source and destination buffer addresses must be 8-byte aligned.
This function can be used in JPEG with 8-bit precision, or in MPEG for the intra mode.
The function takes the following arguments:
coeffs Pointer to the quantized DCT coefficients. Note that coeffs must be 8-byte aligned.
block Pointer to an 8x8 block. Note that block must be 8-byte aligned.
dqtable Pointer to the quantization table generated by mlib_VideoQuantizeInit_S16().
stride Stride in bytes between adjacent rows in the block. Note that stride must be a multiple of eight.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoDCT8x8Quantize_S16_S16_B12(3MLIB), mlib_VideoDCT8x8Quan<hy>
tize_S16_S16_B12_NA(3MLIB), mlib_VideoDCT8x8Quantize_S16_U8_NA(3MLIB), mlib_VideoQuan<hy>
tizeInit_S16(3MLIB), attributes(5)
