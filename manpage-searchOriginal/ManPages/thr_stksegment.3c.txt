<beginning of page>
thr_stksegment <-> get thread stack address and size
cc -mt [ flag... ] file...[ library... ]
#include <thread.h>
#include <signal.h>
int thr_stksegment(stack_t *ss);
The thr_stksegment() function returns, in its stack_t argument, the address and size of the calling thread's stack.
The stack_t structure includes the following members:
 void *ss_sp
 size_t ss_size
 int ss_flags
On successful return from thr_stksegment(), ss_sp contains the high address of the caller's stack and ss_size con<hy>
tains the size of the stack in bytes. The ss_flags member is always 0. Note that the meaning of ss_sp is reversed
from other uses of stack_t such as sigaltstack(2) where ss_sp is the low address.
The stack information provided by thr_stksegment() is typically used by debuggers, garbage collectors, and similar
applications. Most applications should not require such information.
The thr_stksegment() function returns 0 if the thread stack address and size were successfully retrieved. Other<hy>
wise, it returns a non-zero error value.
The thr_stksegment() function will fail if:
EAGAIN The stack information for the thread is not available because the thread's initialization is not yet complete,
or the thread is an internal thread.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
sigaltstack(2), thr_create(3C), attributes(5)
