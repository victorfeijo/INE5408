<beginning of page>
getch, wgetch, mvgetch, mvwgetch <-> get a single-byte character from the terminal
cc [ flag... ] file... -I /usr/xpg4/include -L /usr/xpg4/lib \
 -R /usr/xpg4/lib -lcurses [ library... ]
c89 [ flag... ] file... -lcurses [ library... ]
#include <curses.h>
int getch(void);
int wgetch(WINDOW *win);
int mvgetch(int y, int x);
int mvwgetch(WINDOW *win, int y, int x);
win Is a pointer to the window associated with the terminal from which the character is to be read.
y Is the y (row) coordinate for the position of the character to be read.
x Is the x (column) coordinate for the position of the character to be read.
These functions read a single-byte character from the terminal associated with the current or specified window. The
results are unspecified if the input is not a single-byte character. If keypad(3XCURSES) is enabled, these functions
respond to the pressing of a function key by returning the corresponding KEY_ value defined in <curses.h>
Processing of terminal input is subject to the general rules described on the keypad(3XCURSES) manual page.
If echoing is enabled, then the character is echoed as though it were provided as an input argument to add<hy>
ch(3XCURSES), except for the following characters:
<backspace> The input is interpreted as follows: unless the cursor already was in column 0, <backspace> moves the
cursor one column toward the start of the current line and any characters after the <backspace> are added or inserted
starting there. The character at the resulting cursor position it then deleted as though delch(3XCURSES) were
called, except that if the cursor was originally in the first column of the line, the user is alerted as though
beep(3XCURSES) were called.
Function keys The user is alerted as though beep() were called. Information concerning the function keys is not re<hy>
turned to the caller.
If the current or specified window is not a pad, and it has been moved modified since the last refresh operation, then
it will be refreshed before another character is read.
The following is a list of tokens for function keys that are returned by the getch() set of functions if keypad han<hy>
dling is enabled (some terminals may not support all tokens).
tab() box; cw(1.65i) cw(3.85i) lw(1.65i) lw(3.85i) ConstantDescription _ KEY_BREAKBreak key KEY_DOWN<hy>
The down arrow key KEY_UPThe up arrow key KEY_LEFTThe left arrow key KEY_RIGHTThe right arrow key
KEY_HOMEHome key KEY_BACKSPACEBackspace KEY_F0T{ Function keys. Space for 64 keys is reserved.
T} KEY_F(n)For 0 <= n <= 63 KEY_DLDelete line KEY_ILInsert line KEY_DCDelete character KEY_ICInsert
char or enter insert mode KEY_EICExit insert char mode KEY_CLEARClear screen KEY_EOSClear to end of
screen KEY_EOLClear to end of line KEY_SFScroll 1 line forward
 KEY_SRScroll 1 line backwards KEY_NPAGENext page KEY_PPAGEPrevious page KEY_STABSet tab
KEY_CTABClear tab KEY_CATABClear all tabs KEY_ENTEREnter or send KEY_SRESETSoft (partial) reset
KEY_RESETReset or hard reset KEY_PRINTPrint or copy KEY_LLHome down or bottom (lower left)
KEY_A1Upper left of keypad KEY_A3Upper right of keypad KEY_B2Center of keypad KEY_C1Lower left of
keypad KEY_C3Lower right of keypad KEY_BTABBack tab KEY_BEGBeginning key KEY_CANCELCancel key
KEY_CLOSEClose key KEY_COMMANDCmd (command) key KEY_COPYCopy key KEY_CREATECreate key
<beginning of page>
KEY_ENDEnd key KEY_EXITExit key KEY_FINDFind key KEY_HELPHelp key KEY_MARKMark key
KEY_MESSAGEMessage key KEY_MOVEMove key KEY_NEXTNext object key KEY_OPENOpen key
KEY_OPTIONSOptions key KEY_PREVIOUSPrevious object key KEY_REDORedo key KEY_REFERENCERef<hy>
erence key KEY_REFRESHRefresh key KEY_REPLACEReplace key KEY_RESTARTRestart key KEY_RE<hy>
SUMEResume key KEY_SAVESave key KEY_SBEGShifted beginning key KEY_SCANCELShifted cancel key
KEY_SCOMMANDShifted command key KEY_SCOPYShifted copy key KEY_SCREATEShifted create key
KEY_SDCShifted delete char key KEY_SDLShifted delete line key KEY_SELECTSelect key KEY_SENDShifted
end key KEY_SEOLShifted clear line key KEY_SEXITShifted exit key KEY_SFINDShifted find key
KEY_SHELPShifted help key KEY_SHOMEShifted home key KEY_SICShifted input key KEY_SLEFT Shifted
left arrow key KEY_SMESSAGESShifted messages key KEY_SMOVEShifted move key KEY_SNEXTShifted
next key KEY_SOPTIONSShifted options key KEY_SPREVIOUSShifted previous key KEY_SPRINTShifted print
key KEY_SREDOShifted redo key KEY_SREPLACEShifted replace key KEY_SRIGHTShifted right arrow key
KEY_SRSUMEShifted resume key KEY_SSAVEShifted save key KEY_SSUSPENDShifted suspend key
KEY_SUNDOShifted undo key KEY_SUSPENDSuspend key KEY_UNDOUndo key
Upon successful completion, these functions return the single-byte character, KEY_ value, or ERR. When in the
nodelay mode and no data is available, ERR is returned.
No errors are defined.
Applications should not define the escape key by itself as a single-character function.
When using these functions, nocbreak mode (cbreak(3XCURSES)) and echo mode (echo(3XCURSES)) should not
be used at the same time. Depending on the state of the terminal when each character is typed, the application may
produce undesirable results.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelUnsafe
cbreak(3XCURSES), echo(3XCURSES), halfdelay(3XCURSES), keypad(3XCURSES), libcurses(3XCURSES),
nodelay(3XCURSES), notimeout(3XCURSES), raw(3XCURSES), timeout(3XCURSES), attributes(5), stan<hy>
dards(5)
