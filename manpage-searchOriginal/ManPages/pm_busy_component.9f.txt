<beginning of page>
pm_busy_component, pm_idle_component <-> control device component availability for Power Management
#include <sys/ddi.h>
#include <sys/sunddi.h>
int pm_busy_component(dev_info_t *dip, int component);
int pm_idle_component(dev_info_t *dip, int component);
Solaris DDI specific (Solaris DDI)
dip Pointer to the device's dev_info structure.
component The number of the component to be power-managed.
The pm_busy_component() function sets component of dip to be busy. Calls to pm_busy_component() are
stacked, requiring a corresponding number of calls to pm_idle_component() to make the component idle again.
When a device is busy it will not be power-managed by the system.
The pm_idle_component() function marks component idle, recording the time that component went idle. This func<hy>
tion must be called once for each call to pm_busy_component(). A component which is idle is available to be
power-managed by the system. The pm_idle_component() function has no effect if the component is already idle,
except to update the system's notion of when the device went idle.
If these functions are called as a result of entry into the driver's attach(9E), detach(9E) or power(9E) entry point,
these functions must be called from the same thread which entered attach(9E), detach(9E) or power(9E).
The pm_busy_component() and pm_idle_component() functions return:
DDI_SUCCESS Successfully set the indicated component busy or idle.
DDI_FAILURE Invalid component number component or the device has no components.
These functions can be called from user or kernel context. These functions may also be called from interrupt context,
providing they are not the first Power Management function called by the driver.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface stability<hy>
Committed
power.conf(4), pm(7D), attach(9E), detach(9E), power(9E), pm_raise_power(9F), pm(9P), pm-components(9P)
Writing Device Drivers
