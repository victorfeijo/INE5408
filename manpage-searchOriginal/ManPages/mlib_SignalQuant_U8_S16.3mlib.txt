<beginning of page>
mlib_SignalQuant_U8_S16, mlib_SignalQuant_U8S_S16S <-> 16-bit to 8-bit quantization
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_SignalQuant_U8_S16(mlib_u8 *dst,
 const mlib_s16 *src, const mlib_s16 *thresh, mlib_s32 n);
mlib_status mlib_SignalQuant_U8S_S16S(mlib_u8 *dst,
 const mlib_s16 *src, const mlib_s16 *thresh, mlib_s32 n);
Each of these functions quantizes a signal array by using the following equation:
 X = x(n) n = 0, 1, ...
 Z = z(n) n = 0, 1, ...
  = 0 for x(n) < t(0)
  = k for t(k) <<=> x(n) < t(k+1)
  = 255 for x(n) <>=> t(255)
Each of the functions takes the following arguments:
dst Output signal array.
src Input signal array.
thresh Array of 256 thresholds.
n Number of samples in the input signal array.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
attributes(5)
