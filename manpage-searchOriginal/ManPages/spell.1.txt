<beginning of page>
spell, hashmake, spellin, hashcheck <-> report spelling errors
spell [-bilvx] [+ local_file] [file] ...
/usr/lib/spell/hashmake
/usr/lib/spell/spellin n
/usr/lib/spell/hashcheck spelling_list
The spell command collects words from the named files and looks them up in a spelling list. Words that neither oc<hy>
cur among nor are derivable (by applying certain inflections, prefixes, or suffixes) from words in the spelling list are
written to the standard output.
If there are no file arguments, words to check are collected from the standard input. spell ignores most troff(1),
tbl(1), and eqn(1) constructs. Copies of all output words are accumulated in the history file (spellhist), and a stop
list filters out misspellings (for example, their=thy<mi>y+ier) that would otherwise pass.
By default, spell (like deroff(1)) follows chains of included files (.so and .nx troff(1) requests), unless the names of
such included files begin with /usr/lib.
The standard spelling list is based on many sources, and while more haphazard than an ordinary dictionary, is also
more effective in respect to proper names and popular technical words. Coverage of the specialized vocabularies of
biology, medicine and chemistry is light.
Three programs help maintain and check the hash lists used by spell:
hashmake Reads a list of words from the standard input and writes the corresponding nine-digit hash code on the
standard output.
spellin Reads n hash codes from the standard input and writes a compressed spelling list on the standard output.
hashcheck Reads a compressed spelling_list and recreates the nine-digit hash codes for all the words in it. It writes
these codes on the standard output.
The following options are supported:
-b Check British spelling. Besides preferring centre, colour, programme, speciality, travelled, and so forth, this
option insists upon <mi>ise in words like standardise.
-i Cause deroff(1) to ignore .so and .nx commands. If deroff(1) is not present on the system, then this option is ig<hy>
nored.
-l Follow the chains of all included files.
-v Print all words not literally in the spelling list, as well as plausible derivations from the words in the spelling list.
-x Print every plausible stem, one per line, with = preceding each word.
+local_file Specify a set of words that are correct spellings (in addition to spell's own spelling list) for each job. lo<hy>
cal_file is the name of a user-provided file that contains a sorted list of words, one per line. Words found in local_file
are removed from spell's output. Use sort(1) to order local_file in ASCII collating sequence. If this ordering is not
followed, some entries in local_file might be ignored.
The following operands are supported:
<beginning of page>
file A path name of a text file to check for spelling errors. If no files are named, words are collected from the stan<hy>
dard input.
See environ(5) for descriptions of the following environment variables that affect the execution of spell:
LC_CTYPE, LC_MESSAGES, and NLSPATH.
The following exit values are returned:
0 Successful completion.
>0 An error occurred.
D_SPELL=/usr/lib/spell/hlist[ab]
hashed spelling lists, American & British
S_SPELL=/usr/lib/spell/hstop
hashed stop list
H_SPELL=/var/adm/spellhist
history file
/usr/share/lib/dict/words
master dictionary
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wesu
deroff(1), eqn(1), sort(1), tbl(1), troff(1), attributes(5), environ(5)
spell works only on English words defined in the U.S. ASCII codeset.
Because copies of all output are accumulated in the spellhist file, spellhist might grow quite large and require purg<hy>
ing.
The spelling list's coverage is uneven. New installations might wish to monitor the output for several months to
gather local additions.
British spelling was done by an American.
