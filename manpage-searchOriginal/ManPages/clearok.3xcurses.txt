<beginning of page>
clearok, idlok, leaveok, scrollok, setscrreg, wsetscrreg <-> terminal output control functions
cc [ flag... ] file... -I /usr/xpg4/include -L /usr/xpg4/lib \
 -R /usr/xpg4/lib -lcurses [ library... ]
c89 [ flag... ] file... -lcurses [ library... ]
#include <curses.h>
int clearok(WINDOW *win, bool bf);
int idlok(WINDOW *win, bool bf);
int leaveok(WINDOW *win, bool bf);
int scrollok(WINDOW *win, bool bf);
int setscrreg(int top, int bot);
int wsetscrreg(WINDOW *win, int top, int bot);
These functions set options that deal with the output within Curses functions.
The clearok() function assigns the value of bf to an internal flag in the specified window that governs clearing of the
screen during a refresh. If, during a refresh operation on the specified window, the flag in curscr is TRUE or the flag
in the specified window is TRUE, clearok() clears the screen, redraws it in its entirety, and sets the flag to FALSE
in curscr and in the specified window. The initial state is unspecified
The idlok() function specifies whether the implementation may use the hardware insert-line, delete-line, and scroll
features of terminals so equipped. If bf is TRUE, use of these features is enabled. If bf is FALSE, use of these fea<hy>
tures is disabled and lines are instead redrawn as required. The initial state is FALSE.
The leaveok() function controls the cursor position after a refresh operation. If bf is TRUE, refresh operations on the
specified window may leave the terminal's cursor at an arbitrary position. If bf is FALSE, then at the end of any re<hy>
fresh operation, the terminal's cursor is positioned at the cursor position contained in the specified window. The ini<hy>
tial state is FALSE.
The scrollok() function controls the use of scrolling.If bf is TRUE, then scrolling is enabled for the specified win<hy>
dow. If bf is FALSE, scrolling is disabled for the specified window. The initial state is FALSE.
The setscrreg() and wsetscrreg() functions define a software scrolling region in the current or specified window.
The top and bottom arguments are the line numbers of the first and last line defining the scrolling region. (Line 0 is
the top line of the window.) If this option and scrollok() are enabled, an attempt to move off the last line of the mar<hy>
gin causes all lines in the scrolling region to scroll one line in the direction of the first line. Only characters in the
window are scrolled. If a software scrolling region is set and scrollok() is not enabled, an attempt to move off the
last line of the margin does not reposition any lines in the scrolling region.
win Is a pointer to a window.
bf Is a Boolean expression.
top Is the top line of the scrolling region (top of the window is line 0).
bot Is the bottom line of the scrolling region (top of the window is line 0).
Upon successful completion, the setscrreg() and wsetscrreg() functions return OK. Otherwise, they return ERR.
The other functions always return OK.
No errors are defined.
 The only reason to enable the idlok() feature is to use scrolling to achieve the visual effect of motion of a partial
<beginning of page>
window, such as for a screen editor. In other cases, the feature can be visually annoying.
The leaveok() option provides greater efficiency for applications that do not use the cursor.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelUnsafe
bkgdset(3XCURSES), clear(3XCURSES), doupdate(3XCURSES), libcurses(3XCURSES), scrl(3XCURSES), at<hy>
tributes(5), standards(5)
