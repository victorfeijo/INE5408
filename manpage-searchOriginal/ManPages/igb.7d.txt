<beginning of page>
igb <-> Intel 82575 1Gb PCI Express NIC Driver
/dev/igb*
The igb Gigabit Ethernet driver is a multi-threaded, loadable, clonable, GLD-based STREAMS driver supporting
the Data Link Provider Interface, dlpi(7P), on Intel 82575 Gigabit Ethernet controllers.
The igb driver functions include controller initialization, frame transmit and receive, promiscuous and multicast
support, and error recovery and reporting.
The igb driver and hardware support auto-negotiation, a protocol specified by the 1000 Base-T standard. Auto-ne<hy>
gotiation allows each device to advertise its capabilities and discover those of its peer (link partner). The highest
common denominator supported by both link partners is automatically selected, yielding the greatest avail<hy>
able throughput, while requiring no manual configuration. The igb driver also allows you to configure the advertised
capabilities to less than the maximum (where the full speed of the interface is not required), or to force a specific
mode of operation, irrespective of the link partner's advertised capabilities.
The cloning character-special device, /dev/igb, is used to access all Intel 82575 Gigabit devices installed within the
system.
The igb driver is managed by the dladm(1M) command line utility, which allows VLANs to be defined on top of
igb instances and for igb instances to be aggregated. See dladm(1M) for more details.
You must send an explicit DL_ATTACH_REQ message to associate the opened stream with a particular device
(PPA). The PPA ID is interpreted as an unsigned integer data type and indicates the corresponding device instance
(unit) number. The driver returns an error (DL_ERROR_ACK) if the PPA field value does not correspond to a valid
device instance number for the system. The device is initialized on first attach and de-initialized (stopped) at last de<hy>
tach.
The values returned by the driver in the DL_INFO_ACK primitive in response to your DL_INFO_REQ are: <bu> Maxi<hy>
mum SDU is 9000. <bu> Minimum SDU is 0. <bu> DLSAP address length is 8. <bu> MAC type is DL_ETHER. <bu> SAP (Ser<hy>
vice Access Point) length value is -2, meaning the physical address component is followed immediately by a 2-byte
SAP component within the DLSAP address. <bu> Broadcast address value is the Ethernet/IEEE broadcast address
(FF:FF:FF:FF:FF:FF).
Once in the DL_ATTACHED state, you must send a DL_BIND_REQ to associate a particular SAP with the stream.
By default, the igb driver performs auto-negotiation to select the link speed and mode. Link speed and mode can be
any one of the following, (as described in the IEEE803.2 standard):
1000 Mbps, full-duplex.
100 Mbps, full-duplex.
100 Mbps, half-duplex.
10 Mbps, full-duplex.
10 Mbps, half-duplex.
The auto-negotiation protocol automatically selects speed (1000 Mbps, 100 Mbps, or 10 Mbps) and operation mode
(full-duplex or half-duplex) as the highest common denominator supported by both link partners.
Alternatively, you can set the capabilities advertised by the igb device using ndd(1M). The driver supports a number
of parameters whose names begin with adv_ (see below). Each of these parameters contains a boolean value that de<hy>
termines if the device advertises that mode of operation. For example, the adv_1000fdx_cap parameter indicates if
1000M full duplex is advertised to link partner. The adv_autoneg cap parameter controls whether auto-negotiation
is performed. If adv_autoneg_cap is set to 0, the driver forces the mode of operation selected by the first non-zero
parameter in priority order as shown below:
  (highest priority/greatest throughput)
  adv_1000fdx_cap 1000Mbps full duplex
  adv_100fdx_cap 100Mpbs full duplex
  adv_100hdx_cap 100Mbps half duplex
  adv_10fdx_cap 10Mpbs full duplex
  adv_10hdx_cap 10Mpbs half duplex
<beginning of page>
  (lowest priority/least throughput)
All capabilities default to enabled. Note that changing any capability parameter causes the link to go down while the
link partners renegotiate the link speed/duplex using the newly changed capabilities.
/dev/igb* Special character device.
/kernel/drv/igb 32-bit device driver (x86).
/kernel/drv/amd64/igb 64-bit device driver (x86).
/kernel/drv/sparcv9/igb 64-bit device driver (SPARC).
/kernel/drv/igb.conf Configuration file.
dladm(1M), ndd(1M), netstat(1M), driver.conf(4), attributes(5), streamio(7I), dlpi(7P),
Writing Device Drivers
STREAMS Programming Guide
Network Interfaces Programmer's Guide
