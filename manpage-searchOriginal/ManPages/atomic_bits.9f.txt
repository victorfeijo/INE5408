<beginning of page>
atomic_bits, atomic_set_long_excl, atomic_clear_long_excl <-> atomic set and clear bit operations
#include <sys/atomic.h>
int atomic_set_long_excl(volatile ulong_t *target, uint_t bit);
int atomic_clear_long_excl(volatile ulong_t *target, uint_t bit);
The atomic_set_long_excl() and atomic_clear_long_excl() functions perform an exclusive atomic bit set or clear
operation on target. The value of bit specifies the number of the bit to be modified within target. Bits are numbered
from zero to one less than the maximum number of bits in a long. If the value of bit falls outside of this range, the
result of the operation is undefined.
The atomic_set_long_excl() and atomic_clear_long_excl() functions return 0 if bit was successfully set or cleared.
They return -1 if bit was already set or cleared.
No errors are defined.
These functions can be called from user, interrupt, or kernel context.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed
atomic_add(9F), atomic_and(9F), atomic_cas(9F), atomic_dec(9F), atomic_inc(9F), atomic_or(9F), atom<hy>
ic_swap(9F), membar_ops(9F), attributes(5), atomic_ops(3C)
