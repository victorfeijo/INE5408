<beginning of page>
getauditflags, getauditflagsbin, getauditflagschar <-> convert audit flag specifications
cc [ flag... ] file... -lbsm -lsocket -lnsl [ library... ]
#include <sys/param.h>
#include <bsm/libbsm.h>
int getauditflagsbin(char *auditstring, au_mask_t *masks);
int getauditflagschar(char *auditstring, au_mask_t *masks, int verbose);
The getauditflagsbin() function converts the character representation of audit values pointed to by auditstring into
au_mask_t fields pointed to by masks. These fields indicate which events are to be audited when they succeed and
which are to be audited when they fail. The character string syntax is described in audit_control(4).
The getauditflagschar() function converts the au_mask_t fields pointed to by masks into a string pointed to by au<hy>
ditstring. If verbose is 0, the short (2-character) flag names are used. If verbose is non-zero, the long flag names are
used. The auditstring argument should be large enough to contain the ASCII representation of the events.
The auditstring argument contains a series of event names, each one identifying a single audit class, separated by
commas. The au_mask_t fields pointed to by masks correspond to binary values defined in <bsm/audit.h>, which
is read by <bsm/libbsm.h>.
Upon successful completion, getauditflagsbin() and getauditflagschar() return 0. Otherwise they return <mi>1.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT-LevelMT-Safe
bsmconv(1M), audit.log(4), audit_control(4), attributes(5)
This is not a very extensible interface.
The functionality described on this manual page is available only if the Solaris Auditing has been enabled. See
bsmconv(1M) for more information.
