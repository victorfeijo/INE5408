<beginning of page>
mlib_VectorMerge_U8C_U8, mlib_VectorMerge_S8C_S8, mlib_VectorMerge_S16C_S16, mlib_Vec<hy>
torMerge_S32C_S32 <-> vertor merge
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VectorMerge_U8C_U8(mlib_u8 *z, const mlib_u8 *r,
 const mlib_u8 *i, mlib_s32 n);
mlib_status mlib_VectorMerge_S8C_S8(mlib_s8 *z, const mlib_s8 *r,
 const mlib_s8 *i, mlib_s32 n);
mlib_status mlib_VectorMerge_S16C_S16(mlib_s16 *z, const mlib_s16 *r,
 const mlib_s16 *i, mlib_s32 n);
mlib_status mlib_VectorMerge_S32C_S32(mlib_s32 *z, const mlib_s32 *r,
 const mlib_s32 *i, mlib_s32 n);
Each of these functions computes the complex vector from two vectors representing the real and imaginary parts.
The following equation is used:
 z[2*k] = r[k]
 z[2*k + 1] = i[k]
where k = 0, 1, ..., (n - 1).
Each of the functions takes the following arguments:
z Pointer to the first complex element of the destination vector. z[2*k] contains the real part, and z[2*k + 1] contains
the imaginary part.
r Pointer to the first element of the real part.
i Pointer to the first element of the imaginary part.
n Number of elements in the vectors.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VectorSplit_U8_U8C(3MLIB), attributes(5)
