<beginning of page>
m_setvalues_layout <-> set layout values of a LayoutObject
cc [ flag... ] file... -llayout [ library... ]
#include <sys/layout.h>
int m_setvalues_layout(LayoutObject layout_object,
 const LayoutValues values, int *index_returned);
The m_setvalues_layout() function changes the layout values of a LayoutObject.
The layout_object argument specifies a LayoutObject returned by the m_create_layout(3LAYOUT) function.
The values argument specifies the list of layout values that are to be changed. The values are written into the Lay<hy>
outObject and may affect the behavior of subsequent layout functions. Some layout values do alter internal states
maintained by a LayoutObject.
The m_setvalues_layout() function can be implemented as a macro that evaluates the first argument twice.
Upon successful completion, the requested layout values are set and 0 is returned. Otherwise <mi>1 is returned and er<hy>
rno is set to indicate the error. If any value cannot be set, none of the layout values are changed and the (zero-based)
index of the first value causing the error is returned in index_returned.
The m_setvalues_layout() function may fail if:
EINVAL The layout value specified by index_returned is unknown, its value is invalid, or the layout_object argu<hy>
ment is invalid.
EMFILE There are {OPEN_MAX} file descriptors currently open in the calling process.
Do not use expressions with side effects such as auto-increment or auto-decrement within the first argument to the
m_setvalues_layout() function.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
m_create_layout(3LAYOUT), attributes(5), standards(5)
