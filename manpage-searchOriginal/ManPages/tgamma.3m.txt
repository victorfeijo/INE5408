<beginning of page>
tgamma, tgammaf, tgammal <-> compute gamma function
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double tgamma(double x);
float tgammaf(float x);
long double tgammal(long double x);
These functions compute the gamma() function of x.
Upon successful completion, these functions return gamma(x).
If x is a negative integer, a domain error occurs and a NaN is returned.
If the correct value would cause overflow, a range error occurs and tgamma(), tgammaf(), and tgammal() return the
value of the macro <+->HUGE_VAL, <+->HUGE_VALF, or <+->HUGE_VALL, respectively.
If x is NaN, a NaN is returned.
If x is <+->Inf, x is returned.
If x is <+->0, a pole error occurs and tgamma(), tgammaf(), and tgammal() return <+->HUGE_VAL, <+->HUGE_VALF,
and <+->HUGE_VALL, respectively.
If x is +Inf, a domain error occurs and a NaN is returned.
These functions will fail if:
Domain Error The value of x is a negative integer or x is <mi>Inf.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the invalid floating-point
exception is raised.
Pole Error The value of x is zero.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the divide-by-zero float<hy>
ing-point exception is raised.
Range Error The value overflows.
If the integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero, then the overflow floating-
point exception is raised.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
feclearexcept(3M), fetestexcept(3M), lgamma(3M), math.h(3HEAD), attributes(5), standards(5)
