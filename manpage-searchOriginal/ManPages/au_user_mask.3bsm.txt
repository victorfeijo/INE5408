<beginning of page>
au_user_mask <-> get user's binary preselection mask
cc [ flag... ] file... -lbsm -lsocket -lnsl [ library... ]
#include <bsm/libbsm.h>
int au_user_mask(char *username, au_mask_t *mask_p);
The au_user_mask() function reads the default, system wide audit classes from audit_control(4), combines them
with the per-user audit classes from the audit_user(4) database, and updates the binary preselection mask pointed to
by mask_p with the combined value.
The audit flags in the flags field of the audit_control(4) database and the always-audit-flags and never-audit-flags
from the audit_user(4) database represent binary audit classes. These fields are combined by au_preselect(3BSM)
as follows:
mask = ( flags + always-audit-flags) <mi> never-audit-flags
The au_user_mask() function fails only if both the both the audit_control(4) and the audit_user(4) database en<hy>
tries could not be retrieved. This allows for flexible configurations.
Upon successful completion, au_user_mask() returns 0. It fails and returns <mi>1 if both the audit_control(4) and the
audit_user(4) database entries could not be retrieved.
/etc/security/audit_control
file containing default parameters read by the audit daemon, auditd(1M)
/etc/security/audit_user
file that stores per-user audit event mask
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyStable _ MT-LevelMT-Safe
login(1), bsmconv(1M), getaudit(2), setaudit(2), au_preselect(3BSM), getacinfo(3BSM), getauusernam(3BSM),
audit_control(4), audit_user(4), attributes(5)
The au_user_mask() function should be called by programs like login(1) which set a process's preselection mask
with setaudit(2). getaudit(2) should be used to obtain audit characteristics for the current process.
The functionality described on this manual page is available only if the Solaris Auditing has been enabled. See
bsmconv(1M) for more information.
