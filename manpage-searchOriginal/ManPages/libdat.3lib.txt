<beginning of page>
libdat <-> direct access transport library
cc [ flag... ] file... -ldat [ library... ]
#include <dat/udat.h>
The libdat library provides an application with the User Direct Access Programming Library (uDAPL) 1.2 functions
to access the underlying RDMA-able interconnects. Different uDAPL service providers listed in the DAT static reg<hy>
istry dat.conf(4) can be registered during runtime with the DAT library. After an application opens an interface
adapter belonging to a particular service provider, all function calls will be redirected to that service provider's li<hy>
brary.
The shared object libdat.so.1 provides the public interfaces defined below for applications. See Intro(3) for addi<hy>
tional information on shared object interfaces.
tab(); lw(2.75i) lw(2.75i) lw(2.75i) lw(2.75i) dat_cno_createdat_cno_free dat_cno_modify_agentdat_cno_query
dat_cno_waitdat_cr_accept dat_cr_handoffdat_cr_query dat_cr_rejectdat_ep_connect dat_ep_create<hy>
dat_ep_disconnect dat_ep_dup_connectdat_ep_free dat_ep_get_statusdat_ep_modify dat_ep_post_rd<hy>
ma_readdat_ep_post_rdma_write dat_ep_post_recvdat_ep_post_send dat_ep_querydat_ep_reset
dat_evd_clear_unwaitabledat_evd_create dat_evd_dequeuedat_evd_disable dat_evd_enabledat_evd_free
dat_evd_modify_cnodat_evd_post_se dat_evd_querydat_evd_resize dat_evd_set_unwaitabledat_evd_wait
dat_get_consumer_contextdat_get_handle_type dat_ia_closedat_ia_open dat_ia_querydat_lmr_create
dat_lmr_freedat_lmr_query dat_provider_finidat_provider_init dat_psp_createdat_psp_create_any
dat_psp_freedat_psp_query dat_pz_createdat_pz_free dat_pz_querydat_registry_list_providers
dat_rmr_binddat_rmr_create dat_rmr_freedat_rmr_query dat_rsp_createdat_rsp_free dat_rsp_query<hy>
dat_set_consumer_context dat_strerror
tab(); lw(2.75i) lw(2.75i) lw(2.75i) lw(2.75i) dat_ep_create_with_srqdat_ep_recv_query dat_ep_set_water<hy>
markdat_lmr_sync_rdma_read dat_lmr_sync_rdma_writedat_srq_create dat_srq_freedat_srq_post_recv
dat_srq_querydat_srq_resize dat_srq_set_lw
The shared object libdat.so.1 also provides the public interfaces defined below for service providers.
tab(); lw(2.75i) lw(2.75i) dat_registry_add_providerdat_registry_remove_provider
/usr/lib/libdat.so.1 shared object
/usr/lib/64/libdat.so.1 64-bit shared object
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wudaplu (user) _ SUNWudaplr (root) _ Interface StabilityStandard: uDAPL, 1.1, 1.2 _ MT-LevelUnsafe
datadm(1M), Intro(3), dat.conf(4), attributes(5)
The libdat library supports service providers written according to the uDAPL 1.2 specification. A service provider
library has to be a dynamic loadable shared object with two public entry points exported:
tab(); lw(2.75i) lw(2.75i) dat_provider_initdat_provider_fini
<beginning of page>
In terms of installation, the service provider package should include a service_provider.conf(4) file. The
datadm(1M) administrative configuration program should be used to add and remove service provider's entries in
the system-wide dat.conf(4).
