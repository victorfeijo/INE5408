<beginning of page>
pthread_barrier_wait <-> synchronize at a barrier
cc -mt [ flag... ] file... [ library... ]
#include <pthread.h>
int pthread_barrier_wait(pthread_barrier_t *barrier);
The pthread_barrier_wait() function synchronizes participating threads at the barrier referenced by barrier. The
calling thread blocks until the required number of threads have called pthread_barrier_wait() specifying the barri<hy>
er.
When the required number of threads have called pthread_barrier_wait() specifying the barrier, the constant
PTHREAD_BARRIER_SERIAL_THREAD is returned to one unspecified thread and 0 is returned to each of the
remaining threads. At this point, the barrier is reset to the state it had as a result of the most recent pthread_barri<hy>
er_init(3C) function that referenced it.
The constant PTHREAD_BARRIER_SERIAL_THREAD is defined in <pthread.h> and its value is distinct from
any other value returned by pthread_barrier_wait().
The results are undefined if this function is called with an uninitialized barrier.
If a signal is delivered to a thread blocked on a barrier, upon return from the signal handler the thread resumes wait<hy>
ing at the barrier if the barrier wait has not completed (that is, if the required number of threads have not arrived at
the barrier during the execution of the signal handler); otherwise, the thread continues as normal from the completed
barrier wait. Until the thread in the signal handler returns from it, it is unspecified whether other threads may pro<hy>
ceed past the barrier once they have all reached it.
A thread that has blocked on a barrier does not prevent any unblocked thread that is eligible to use the same process<hy>
ing resources from eventually making forward progress in its execution.
Eligibility for processing resources is determined by the scheduling policy.
Upon successful completion, the pthread_barrier_wait() function returns PTHREAD_BARRIER_SERI<hy>
AL_THREAD for a single (arbitrary) thread synchronized at the barrier and 0 for each of the other threads. Other<hy>
wise, an error number is returned to indicate the error.
The pthread_barrier_wait() function will fail if:
EINVAL The value specified by barrier does not refer to an initialized barrier object.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
pthread_barrier_destroy(3C), attributes(5), standards(5)
