<beginning of page>
inetconv <-> convert inetd.conf entries into smf service manifests, import them into smf repository
inetconv -?
inetconv [-f] [-n] [-i srcfile] [-o destdir]
inetconv -e [-n] [-i srcfile]
The inetconv utility converts a file containing records of inetd.conf(4) into smf(5) service manifests, and then im<hy>
port those manifests into the smf repository. Once the inetd.conf file has been converted, the only way to change as<hy>
pects of an inet service is to use the inetadm(1M) utility.
There is a one-to-one correspondence between a service line in the input file and the manifest generated. By default,
the manifests are named using the following template:
 <svcname>-<proto>.xml
The <svcname> token is replaced by the service's name and the <proto> token by the service's protocol. Any slash
(/) characters that exist in the source line for the service name or protocol are replaced with underscores (_).
The service line is recorded as a property of the converted service.
During the conversion process, if a service line is found to be malformed or to be for an internal inetd service, no
manifest is generated and that service line is skipped.
The input file is left untouched by the conversion process.
The following options are supported:
-? Display a usage message.
-e Enable smf services which are listed in the input file.
-f If a service manifest of the same name as the one to be generated is found in the destination directory, inetconv
will overwrite that manifest if this option is specified. Otherwise, an error message is generated and the conversion
of that service is not performed.
-i srcfile Permits the specification of an alternate input file srcfile. If this option is not specified, then the in<hy>
etd.conf(4) file is used as input.
-n Turns off the auto-import of the manifests generated during the conversion process. Later, if you want to import a
generated manifest into the smf(5) repository, you can do so through the use of the svccfg(1M) utility.
If the -e option is specified, the -n option only displays the smf services that would be enabled.
-o Permits the specification of an alternate destination directory destdir for the generated manifests. If this option is
not specified, then the manifests are placed in /var/svc/manifest/network/rpc, if the service is a RPC service, or
/var/svc/manifest/network otherwise.
Example 1 Generating smf Manifests from inetd.conf
The following command generates smf(5) manifests from inetd.conf(4) and places them in /var/tmp, overwriting
any preexisting manifests of the same name, and then imports them into the smf repository.
 # inetconv -f -o /var/tmp
 100232/10 -> /var/tmp/100232_10-rpc_udp.xml
 Importing 100232_10-rpc_udp.xml ...Done
 telnet -> /var/tmp/telnet-tcp6.xml
 Importing telnet-tcp6.xml ...Done
<beginning of page>
Example 2 Generating Manifests from an Alternate Input File
The following command specifies a different input file and does not load the resulting manifests into the smf reposi<hy>
tory.
 # inetconv -n -i /export/test/inet.svcs -o /var/tmp
 100232/10 -> /var/tmp/100232_10-rpc_udp.xml
 telnet -> /var/tmp/telnet-tcp6.xml
The following exit values are returned:
0 Operation completed successfully (no errors).
1 Invalid options specified.
2 One or more service lines are malformed, and thus no manifest(s) were generated for them.
3 An error occurred importing one or more of the generated manifests.
4 A system error occurred.
/var/svc/manifest/network/{rpc}/<svcname>-<proto>.xml
default output manifest file name
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilityEvolving
inetadm(1M), inetd(1M), svccfg(1M), inetd.conf(4), attributes(5), smf(5)
