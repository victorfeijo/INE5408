<beginning of page>
scandir, alphasort <-> scan a directory
/usr/ucb/cc [ flag... ] file...
#include <sys/types.h>
#include <sys/dir.h>
int scandir(dirname, namelist, select, dcomp)
char *dirname;
struct direct *(*namelist[]);
int (*select(), (*dcomp)();
int alphasort(d1, d2)
struct direct **d1, **d2;
The scandir() function reads the directory dirname and builds an array of pointers to directory entries using mal<hy>
loc(3C). The second parameter is a pointer to an array of structure pointers. The third parameter is a pointer to a rou<hy>
tine which is called with a pointer to a directory entry and should return a non zero value if the directory entry
should be included in the array. If this pointer is NULL, then all the directory entries will be included. The last argu<hy>
ment is a pointer to a routine which is passed to qsort(3C), which sorts the completed array. If this pointer is NULL,
the array is not sorted.
The alphasort() function sorts the array alphabetically.
The scandir() function returns the number of entries in the array and a pointer to the array through the parameter
namelist. The scandir() function returns <mi>1 if the directory cannot be opened for reading or if malloc(3C) cannot al<hy>
locate enough memory to hold all the data structures.
The alphasort() function returns an integer greater than, equal to, or less than 0 if the directory entry name pointed
to by d1 is greater than, equal to, or less than the directory entry name pointed to by d2.
The scandir() and alphasort() functions have transitional interfaces for 64-bit file offsets. See lf64(5).
getdents(2), malloc(3C), qsort(3C), readdir(3UCB), readdir(3C), lf64(5)
Use of these functions should be restricted to applications written on BSD platforms. Use of these functions with
any of the system libraries or in multithreaded applications is unsupported.
