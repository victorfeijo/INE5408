<beginning of page>
sched_setparam <-> set scheduling parameters
#include <sched.h>
int sched_setparam(pid_t pid, const struct sched_param *param);
The sched_setparam() function sets the scheduling parameters of the process specified by pid to the values speci<hy>
fied by the sched_param structure pointed to by param. The value of the sched_priority member in the
sched_param structure is any integer within the inclusive priority range for the current scheduling policy of the
process specified by pid. Higher numerical values for the priority represent higher priorities. If the value of pid is
negative, the behavior of the sched_setparam() function is unspecified.
If a process specified by pid exists and if the calling process has permission, the scheduling parameters will be set
for the process whose process ID is equal to pid. The real or effective user ID of the calling process must match the
real or saved (from exec(2)) user ID of the target process unless the effective user ID of the calling process is 0. See
Intro(2).
If pid is zero, the scheduling parameters will be set for the calling process.
The target process, whether it is running or not running, resumes execution after all other runnable processes of
equal or greater priority have been scheduled to run.
If the priority of the process specified by the pid argument is set higher than that of the lowest priority running
process and if the specified process is ready to run, the process specified by the pid argument preempts a lowest pri<hy>
ority running process. Similarly, if the process calling sched_setparam() sets its own priority lower than that of one
or more other non-empty process lists, then the process that is the head of the highest priority list also preempts the
calling process. Thus, in either case, the originating process might not receive notification of the completion of the
requested priority change until the higher priority process has executed.
If successful, the sched_setparam() function returns 0.
If the call to sched_setparam() is unsuccessful, the priority remains unchanged, and the function returns <mi>1 and sets
errno to indicate the error.
The sched_setparam() function will fail if:
EINVAL One or more of the requested scheduling parameters is outside the range defined for the scheduling policy
of the specified pid.
EPERM The requesting process does not have permission to set the scheduling parameters for the specified process,
or does not have the appropriate privilege to invoke sched_setparam().
ESRCH No process can be found corresponding to that specified by pid.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyCommitted _ MT-LevelMT-Safe _ StandardSee standards(5).
Intro(2), exec(2), librt(3LIB), sched.h(3HEAD), sched_getparam(3C), sched_getscheduler(3C),
sched_setscheduler(3C), attributes(5), standards(5)
