<beginning of page>
socketpair <-> create a pair of connected sockets
cc [ flag ... ] file ... -lxnet [ library ... ]
#include <sys/socket.h>
int socketpair(int domain, int type, int protocol, int socket_vector[2]);
The socketpair() function creates an unbound pair of connected sockets in a specified domain, of a specified type,
under the protocol optionally specified by the protocol argument. The two sockets are identical. The file descriptors
used in referencing the created sockets are returned in socket_vector0 and socket_vector1.
The type argument specifies the socket type, which determines the semantics of communications over the socket.
The socket types supported by the system are implementation-dependent. Possible socket types include:
SOCK_STREAM Provides sequenced, reliable, bidirectional, connection-mode byte streams, and may provide a
transmission mechanism for out-of-band data.
SOCK_DGRAM Provides datagrams, which are connectionless-mode, unreliable messages of fixed maximum
length.
SOCK_SEQPACKET Provides sequenced, reliable, bidirectional, connection-mode transmission path for records.
A record can be sent using one or more output operations and received using one or more input operations, but a sin<hy>
gle operation never transfers part of more than one record. Record boundaries are visible to the receiver via the
MSG_EOR flag.
If the protocol argument is non-zero, it must specify a protocol that is supported by the address family. The proto<hy>
cols supported by the system are implementation-dependent.
The process may need to have appropriate privileges to use the socketpair() function or to create some sockets.
domain Specifies the communications domain in which the sockets are to be created.
type Specifies the type of sockets to be created.
protocol Specifies a particular protocol to be used with the sockets. Specifying a protocol of 0 causes socketpair() to
use an unspecified default protocol appropriate for the requested socket type.
socket_vector Specifies a 2-integer array to hold the file descriptors of the created socket pair.
The documentation for specific address families specifies which protocols each address family supports. The docu<hy>
mentation for specific protocols specifies which socket types each protocol supports.
The socketpair() function is used primarily with UNIX domain sockets and need not be supported for other do<hy>
mains.
Upon successful completion, this function returns 0. Otherwise, <mi>1 is returned and errno is set to indicate the error.
The socketpair() function will fail if:
EAFNOSUPPORT The implementation does not support the specified address family.
EMFILE No more file descriptors are available for this process.
ENFILE No more file descriptors are available for the system.
<beginning of page>
EOPNOTSUPP The specified protocol does not permit creation of socket pairs.
EPROTONOSUPPORT The protocol is not supported by the address family, or the protocol is not supported by the
implementation.
EPROTOTYPE The socket type is not supported by the protocol.
The socketpair() function may fail if:
EACCES The process does not have appropriate privileges.
ENOBUFS Insufficient resources were available in the system to perform the operation.
ENOMEM Insufficient memory was available to fulfill the request.
ENOSR There were insufficient STREAMS resources available for the operation to complete.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Standard _ MT-LevelMT-Safe
socket(3XNET), attributes(5), standards(5)
