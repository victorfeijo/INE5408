<beginning of page>
y0, y0f, y0l, y1, y1f, y1l, yn, ynf, ynl <-> Bessel functions of the second kind
c99 [ flag... ] file... -lm [ library... ]
#include <math.h>
double y0(double x);
float y0f(float x);
long double y0l(long double x);
double y1(double x);
float y1f(float x);
long double y1l(long double x);
double yn(int n, double x);
float ynf(int n, float x);
long double ynl(int n, long double x);
These functions compute Bessel functions of x of the second kind of orders 0, 1 and n, respectively.
Upon successful completion, these functions return the relevant Bessel value of x of the second kind.
If x is NaN, a NaN is returned.
If x is negative, <mi>HUGE_VAL or NaN is returned.
If x is 0.0, <mi>HUGE_VAL is returned.
If the correct result would cause overflow, <mi>HUGE_VAL is returned.
For exceptional cases, matherr(3M) tabulates the values to be returned as specified by SVID3 and XPG3.
No errors are returned.
An application wanting to check for exceptions should call feclearexcept(FE_ALL_EXCEPT) before calling these
functions. On return, if fetestexcept(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDER<hy>
FLOW) is non-zero, an exception has been raised. An application should either examine the return value or check
the floating point exception flags to detect exceptions.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
See below. _ MT-LevelMT-Safe
The y0(), y1(), and yn() functions are Standard. The y0f(), y0l(), y1f(), y1l(), ynf(), and ynl() functions are Stable.
isnan(3M), feclearexcept(3M), fetestexcept(3M), j0(3M), math.h(3HEAD), matherr(3M), attributes(5), stan<hy>
dards(5)
