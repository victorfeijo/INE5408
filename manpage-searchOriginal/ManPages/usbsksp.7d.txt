<beginning of page>
usbsksp <-> Keyspan USB to serial converter driver
#include <fcntl.h>
#include <sys/termio.h>
usbskpsp@unit
The usbsksp driver is a loadable STREAMS and USBA (Solaris USB architecture) compliant client driver that pro<hy>
vides basic asynchronous communication support for Keyspan USB-to-serial converters. The usbsksp driver sup<hy>
ports the Keyspan USA19HS, USA49WG and USA49WLC models. By default, the USA19HS and USA49WG
models are compatible with the usbsksp driver and no configuration or installation steps are required. (The
USA49WG model is a USB 2.0 device comforming to Universal Serial Bus Specification 2.0 and the USB 2.0 host
controller is required to support the USA49WG model. Note that the USA49WG is not compatible with USB 1.1
host controllers). If you use the Keyspan USA49WLC model, you must download and install a firmware package to
enable the device to work with the usbsksp driver. See the Keyspan website (http://www.keyspan.com/down<hy>
loads/sun/) for more information. Serial device streams are built with appropriate modules that are pushed atop the
usbsksp driver by the autopush(1M) facility.
The usbsksp module supports the termio(7I) device control functions specified by flags in the c_cflag word of the
termios structure, and by the IGNBRK, IGNPAR, PARMRK and INPCK flags in the c_iflag word of the termios
structure. All other termio(7I) functions must be performed by STREAMS modules pushed atop the driver. When a
device is opened, the ldterm(7M) and ttcompat(7M) STREAMS modules are automatically pushed on top of the
stream, providing the standard termio(7I) interface.
Use device logical names /dev/term/[0-9]* to access the serial ports. These names are typically used to provide a
logical access point for a dial-in line that is used with a modem.
A special feature (controlled by the minor device number) is available that enables a single tty line to be connected
to a modem and used for incoming and outgoing calls. By accessing through device logical name /dev/cua/[0-9]*,
you can open a port without the carrier detect signal being asserted, either through hardware or an equivalent soft<hy>
ware mechanism. These devices are commonly known as 'dial-out' lines.
Unlike onboard serial ports, the usbsksp ports cannot serve as a local serial console.
A dial-in line can be opened only if the corresponding dial-out line is closed. A blocking /dev/term open waits until
the /dev/cua line is closed (which drops Data Terminal Ready, after which Carrier Detect usually drops as well) and
carrier is detected again. A non-blocking /dev/term open returns an error if the /dev/cua is open.
If the /dev/term line is opened successfully (usually only when carrier is recognized on the modem), the corre<hy>
sponding /dev/cua line cannot be opened. This allows a modem and port to be used for dial-in (by enabling the line
for login in /etc/inittab) or dial-out (by tip(1), or uucp(1C)) when no one is logged in on the line.
Device hot-removal is functionally equivalent to a modem disconnect event, as defined in termio(7I).
The usbsksp driver supports the standard set of termio(7I) ioctl calls.
Input and output line speeds can be set to the following baud rates: 0, 50, 75, 110, 134, 150, 200, 300, 600, 1200,
1800, 2400, 4800, 9600, 19200, 38400, 57600, 115200, or 230400. Input and output line speeds cannot be set in<hy>
dependently. For example, when the output speed is set, the input speed is automatically set to the same speed.
An open() fails under the following conditions:
ENXIO The unit being opened does not exist.
EBUSY The /dev/cua (dial-out) device is being opened while the /dev/term (dial-in device) is open, or the dial-in
device is being opened with a no-delay open while the dial-out device is open.
EBUSY The unit has been marked as exclusive-use by another process with a TIOCEXCL ioctl() call.
EIO USB device I/O error.
<beginning of page>
/kernel/drv/usbsksp
32-bit x86 ELF kernel module.
/kernel/drv/amd64/usbsksp
64-bit x86 ELF kernel module.
/kernel/drv/sparcv9/usbsksp
64-bit SPARC ELF kernel module.
/dev/cua/[0-9]*
dial-out tty lines.
/dev/term/[0-9]*
dial-in tty lines.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ ArchitectureS<hy>
PARC, x86, PCI-based systems _ AvailabilitySUNWuksp
strconf(1), tip(1), uucp(1C), autopush(1M), ioctl(2), open(2), termios(3C), attributes(5), usba(7D), termio(7I),
ldterm(7M), ttcompat(7M)
In addition to being logged, the following messages may appear on the system console. All messages are formatted
in the following manner:
 Warning: <device path> (usbsksp<instance num>): Error Message...
Device was disconnected while open. Data may have been lost.
The device has been hot-removed or powered off while it was open and a possible data transfer was in progress. The
job may be aborted.
Device is not identical to the previous one on this port. Please disconnect and reconnect.
The device was hot-removed while open. A new device was hot-inserted which is not identical to the original de<hy>
vice. Please disconnect the device and reconnect the original device to the same port.
Device has been reconnected, but data may have been lost.
The device that was hot-removed from its USB port has been re-inserted again to the same port. It is available for ac<hy>
cess but data from a previous transfer may be lost.
Cannot access <device>. Please reconnect.
This device has been disconnected because a device other than the original one has been inserted. The driver informs
you of this fact by displaying the name of the original device.
No valid firmware available for Keyspan usa49wlc usb-to-serial adapter. Please download it from Keyspan
website and install it.
<beginning of page>
By default, only an empty firmware package is installed for the usa49wlc model. Please download the SUNWukspfw
package from Keyspan's web site and install it.
The following messages may be logged into the system log. They are formatted in the following manner:
 <device path><usbsksp<instance number>): message...
Input overrun Data was lost.
