<beginning of page>
dump <-> dump selected parts of an object file
dump [-aCcfghLorstV [-p]] [-T index [, indexn]] filename...
dump [-afhorstL [-p] [v]] filename...
dump [-hsr [-p] [-d number [, numbern]]] filename...
dump [-hsrt [-p] [-n name]] filename...
The dump utility dumps selected parts of each of its object file arguments.
The dump utility is best suited for use in shell scripts, whereas the elfdump(1) command is recommended for more
human-readable output.
This utility will accept both object files and archives of object files. It processes each file argument according to one
or more of the following options:
-a Dumps the archive header of each member of an archive.
-c Dumps the string table(s).
-C Dumps decoded C++ symbol table names.
-f Dumps each file header.
-g Dumps the global symbols in the symbol table of an archive.
-h Dumps the section headers.
-L Dumps dynamic linking information and static shared library information, if available.
-o Dumps each program execution header.
-r Dumps relocation information.
-s Dumps section contents in hexadecimal.
-t Dumps symbol table entries.
-T index
-T index1,index2 Dumps only the indexed symbol table entry defined by index or a range of entries defined by in<hy>
dex1,index2.
-V Prints version information.
The following modifiers are used in conjunction with the options listed above to modify their capabilities.
-d number
-d number1,number2 Dumps the section number indicated by number or the range of sections starting at number1
and ending at number2. This modifier can be used with -h, -s, and -r. When -d is used with -h or -s, the argument is
treated as the number of a section or range of sections. When -d is used with -r, the argument is treated as the num<hy>
ber of the section or range of sections to which the relocation applies. For example, to print out all relocation entries
associated with the .text section, specify the number of the section as the argument to -d. If .text is section number 2
in the file, dump -r -d 2 will print all associated entries. To print out a specific relocation section, use dump -s -n
<beginning of page>
name for raw data output, or dump -sv -n name for interpreted output.
-n name Dumps information pertaining only to the named entity. This modifier can be used with -h, -s, -r, and -t.
When -n is used with -h or -s, the argument will be treated as the name of a section. When -n is used with -t or -r,
the argument will be treated as the name of a symbol. For example, dump -t -n .text will dump the symbol table en<hy>
try associated with the symbol whose name is .text, where dump -h -n .text will dump the section header informa<hy>
tion for the .text section.
-p Suppresses printing of the headings.
-v Dumps information in symbolic representation rather than numeric. This modifier can be used with
-a (date, user id, group id)
-f (class, data, type, machine, version, flags)
-h (type, flags)
-L (value)
-o (type, flags)
-r (name, type)
-s (interpret section contents wherever possible)
-t (type, bind)
When -v is used with -s, all sections that can be interpreted, such as the string table or symbol table, will be inter<hy>
preted. For example, dump -sv -n .symtab filename... will produce the same formatted output as dump -tv file<hy>
name..., but dump -s -n .symtab filename... will print raw data in hexadecimal. Without additional modifiers,
dump -sv filename... will dump all sections in the files, interpreting all those that it can and dumping the rest (such
as .text or .data) as raw data.
The dump utility attempts to format the information it dumps in a meaningful way, printing certain information in
character, hexadecimal, octal, or decimal representation as appropriate.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wbtool
elfdump(1), nm(1), ar.h(3HEAD), a.out(4), attributes(5)
