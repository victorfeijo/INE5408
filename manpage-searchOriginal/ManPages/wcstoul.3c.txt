<beginning of page>
wcstoul, wcstoull <-> convert wide-character string to unsigned long
#include <wchar.h>
unsigned long wcstoul(const wchar_t *restrict nptr,
 wchar_t **restrict endptr, int base);
unsigned long long wcstoull(const wchar_t *restrict nptr,
 wchar_t **restrict endptr, int base);
The wcstoul() and wcstoull() functions convert the initial portion of the wide-character string pointed to by nptr to
unsigned long and unsigned long long representation, respectively. First they decompose the input wide-character
string into three parts: 1. An initial, possibly empty, sequence of white-space wide-character codes (as specified by
the function iswspace(3C)) 2.
 Asubject sequence interpreted as an integer represented in some radix determined by the value of base 3. a final
wide-character string of one or more unrecognized wide-character codes, including the terminating null wide-char<hy>
acter code of the input wide character string
They then attempt to convert the subject sequence to an unsigned integer and return the result.
If the value of base is 0, the expected form of the subject sequence is that of a decimal constant, an octal constant, or
a hexadecimal constant, any of which may be preceded by a `+' or a `<mi>' sign. A decimal constant begins with a non-
zero digit, and consists of a sequence of decimal digits. An octal constant consists of the prefix `0', optionally fol<hy>
lowed by a sequence of the digits `0' to `7' only. A hexadecimal constant consists of the prefix `0x' or `0X', fol<hy>
lowed by a sequence of the decimal digits and letters `a' (or `A') to `f' (or `F'), with values 10 to 15, respectively.
If the value of base is between 2 and 36, the expected form of the subject sequence is a sequence of letters and digits
representing an integer with the radix specified by base, optionally preceded by a `+' or a `<mi>' sign, but not including
an integer suffix. The letters from `a' (or `A') to `z' (or `Z') inclusive are ascribed the values 10 to 35; only letters
whose ascribed values are less than that of base are permitted. If the value of base is 16, the wide-character codes
`0x' or `0X' may optionally precede the sequence of letters and digits, following the sign, if present.
The subject sequence is defined as the longest initial subsequence of the input wide-character string, starting with
the first wide-character code that is not a white space and is of the expected form. The subject sequence contains no
wide-character codes if the input wide-character string is empty or consists entirely of white-space wide-character
codes, or if the first wide-character code that is not a white space is other than a sign or a permissible letter or digit.
If the subject sequence has the expected form and the value of base is 0, the sequence of wide-character codes start<hy>
ing with the first digit is interpreted as an integer constant. If the subject sequence has the expected form and the val<hy>
ue of base is between 2 and 36, it is used as the base for conversion, ascribing to each letter its value as given above.
If the subject sequence begins with a minus sign, the value resulting from the conversion is negated. A pointer to the
final wide character string is stored in the object pointed to by endptr, provided that endptr is not a null pointer.
If the subject sequence is empty or does not have the expected form, no conversion is performed; the value of nptr is
stored in the object pointed to by endptr, provided that endptr is not a null pointer.
The wcstoul() function does not change the setting of errno if successful.
Since 0, {ULONG_MAX}, and {ULLONG_MAX} are returned on error and 0 is also a valid return on success, an
application wanting to check for error situations should set errno to 0, then call wcstoul() or wcstoull(), then check
errno.
The wcstoul() and wcstoull() functions do not change the setting of errno if successful.
Upon successful completion, wcstoul() and wcstoull() return the converted value, if any. If no conversion could be
performed, 0 is returned and errno may be set to indicate the error. If the correct value is outside the range of repre<hy>
sentable values, {ULONG_MAX} or {ULLONG_MAX}, respectively, is returned and errno is set to ERANGE.
The wcstoul() and wcstoull() functions will fail if:
EINVAL The value of base is not supported.
ERANGE The value to be returned is not representable.
<beginning of page>
The wcstoul() and wcstoull() functions may fail if:
EINVAL No conversion could be performed.
Unlike wcstod(3C) and wcstol(3C), wcstoul() and wcstoull() must always return a non-negative number; using the
return value of wcstoul() for out-of-range numbers with wcstoul() or wcstoull() could cause more severe problems
than just loss of precision if those numbers can ever be negative.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface StabilityS<hy>
tandard _ MT-LevelMT-Safe
isspace(3C), iswalpha(3C), scanf(3C), wcstod(3C), wcstol(3C), attributes(5), standards(5)
