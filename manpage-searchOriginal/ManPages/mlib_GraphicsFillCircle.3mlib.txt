<beginning of page>
mlib_GraphicsFillCircle, mlib_GraphicsFillCircle_8, mlib_GraphicsFillCircle_32, mlib_GraphicsFillCircle_X_8,
mlib_GraphicsFillCircle_X_32, mlib_GraphicsFillCircle_A_8, mlib_GraphicsFillCircle_A_32, mlib_GraphicsFill<hy>
Circle_B_8, mlib_GraphicsFillCircle_B_32, mlib_GraphicsFillCircle_AB_8, mlib_GraphicsFillCircle_AB_32 <->
draw filled circle
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_GraphicsFillCircle_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c);
mlib_status mlib_GraphicsFillCircle_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c);
mlib_status mlib_GraphicsFillCircle_X_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsFillCircle_X_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 c2);
mlib_status mlib_GraphicsFillCircle_A_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c);
mlib_status mlib_GraphicsFillCircle_A_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c);
mlib_status mlib_GraphicsFillCircle_B_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillCircle_B_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillCircle_AB_8(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillCircle_AB_32(mlib_image *buffer, mlib_s16 x,
 mlib_s16 y, mlib_s32 r, mlib_s32 c, mlib_s32 a);
Each of the mlib_GraphicsFillCircle_*() functions draws a filled circle with the center at (x, y) and radius r.
Each of the mlib_GraphicsFillCircle_X_*() functions draws a filled circle in Xor mode as follows:
  data[x,y] ^= c ^ c2
Each of the mlib_GraphicsFillCircle_A_*() functions draws a filled circle with antialiasing.
Each of the mlib_GraphicsFillCircle_B_*() functions draws a filled circle with alpha blending as follows:
  data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
Each of the mlib_GraphicsFillCircle_AB_*() functions draws a filled circle with antialiasing and alpha blending.
Each of the functions takes some of the following arguments:
buffer Pointer to the image into which the function is drawing.
x X coordinate of the center.
y Y coordinate of the center.
<beginning of page>
r Radius of the arc.
c Color used in the drawing.
c2 Alternation color.
a Alpha value for blending. 0 <<=> a <<=> 255.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_GraphicsFillArc(3MLIB), mlib_GraphicsFillEllipse(3MLIB), attributes(5)
