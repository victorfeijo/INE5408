<beginning of page>
whereis <-> locate the binary, source, and manual page files for a command
/usr/ucb/whereis [-bmsu] [-BMS directory... -f] filename...
The whereis utility locates source/binary and manuals sections for specified files. The supplied names are first
stripped of leading pathname components and any (single) trailing extension of the form .ext, for example, .c. Prefix<hy>
es of s. resulting from use of source code control are also dealt with. whereis then attempts to locate the desired pro<hy>
gram in a list of standard places:
 etc
 /sbin
 /usr/bin
 /usr/ccs/bin
 /usr/ccs/lib
 /usr/lang
 /usr/lbin
 /usr/lib
 /usr/sbin
 /usr/ucb
 /usr/ucblib
 /usr/ucbinclude
 /usr/games
 /usr/local
 /usr/local/bin
 /usr/new
 /usr/old
 /usr/hosts
 /usr/include
 /usr/etc
The following options are supported:
-b Searches only for binaries.
-B Changes or otherwise limits the places where whereis searches for binaries.
-f Terminates the last directory list and signals the start of file names, and must be used when any of the -B, -M, or
-S options are used.
-m Searches only for manual sections.
-M Changes or otherwise limits the places where whereis searches for manual sections.
-s Searches only for sources.
-S Changes or otherwise limit the places where whereis searches for sources.
-u Searches for unusual entries. A file is said to be unusual if it does not have one entry of each requested type. Thus
`whereis -m -u *' asks for those files in the current directory which have no documentation.
Example 1 Finding files
Find all files in /usr/bin which are not documented in /usr/share/man/man1 with source in /usr/src/cmd:
 example% cd /usr/ucb
 example% whereis -u -M /usr/share/man/man1 -S /usr/src/cmd -f *
<beginning of page>
<bu> /usr/src/* <bu> /usr/{doc,man}/* <bu> /etc, /usr/{lib,bin,ucb,old,new,local}
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wscpu
chdir(2), attributes(5)
Since whereis uses chdir(2) to run faster, pathnames given with the -M, -S, or -B must be full; that is, they must be<hy>
gin with a `/'.
