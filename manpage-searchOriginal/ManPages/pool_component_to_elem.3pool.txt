<beginning of page>
pool_component_to_elem, pool_to_elem, pool_conf_to_elem, pool_resource_to_elem <-> resource pool element-re<hy>
lated functions
cc [ flag... ] file... -lpool [ library... ]
#include <pool.h>
pool_elem_t *pool_component_to_elem(pool_conf_t *conf,
 pool_component_t *component);
pool_elem_t *pool_conf_to_elem(pool_conf_t *conf);
pool_elem_t *pool_resource_to_elem(pool_conf_t *conf
 pool_resource_t *resource);
pool_elem_t *pool_to_elem(pool_conf_t *conf, pool_t *pool);
A pool element, as represented by a pool_elem_t, is a common abstraction for any libpool entity that contains prop<hy>
erties. All such types can be converted to the opaque pool_elem_t type using the appropriate conversion functions
prototyped above. The conf argument for each function refers to the target configuration to which the operation ap<hy>
plies.
Upon successful completion, these functions return a pool_elem_t corresponding to the argument passed in. Other<hy>
wise they return NULL and pool_error(3POOL) returns the pool-specific error value.
These function will fail if:
POE_BADPARAM The supplied configuration's status is not POF_VALID.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ CSIEnabled _ In<hy>
terface StabilityUnstable _ MT-LevelSafe
libpool(3LIB), pool_error(3POOL), attributes(5)
