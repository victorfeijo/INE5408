<beginning of page>
mlib_VideoDCT16x16_S16_S16 <-> forward Discrete Cosine Transform (DCT)
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_VideoDCT16x16_S16_S16(mlib_s16 coeffs[256],
 const mlib_s16 block[256]);
The input to the DCT routine is the difference between the current block and the reference block. The difference pix<hy>
el can occupy nine bits and is represented as a 16-bit datum. The source and destination buffer addresses must be
8-byte aligned.
The function takes the following arguments:
coeffs Pointer to the destination DCT coefficients. coeffs must be 8-byte aligned.
block Pointer to an 16x16 motion-compensated block that is the difference between the reference block and the cur<hy>
rent block. block must be 8-byte aligned.
The function returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_VideoDCT2x2_S16_S16(3MLIB), mlib_VideoDCT4x4_S16_S16(3MLIB), mlib_VideoD<hy>
CT8x8_S16_S16(3MLIB), mlib_VideoDCT8x8_S16_S16_B12(3MLIB), mlib_VideoD<hy>
CT8x8_S16_S16_NA(3MLIB), mlib_VideoDCT8x8_S16_U8(3MLIB), mlib_VideoD<hy>
CT8x8_S16_U8_NA(3MLIB), mlib_VideoDCT16x16_S16_S16(3MLIB), mlib_VideoD<hy>
CT16x16_S16_S16_B10(3MLIB), mlib_VideoDeQuantize_S16(3MLIB), mlib_VideoDeQuan<hy>
tizeInit_S16(3MLIB), mlib_VideoQuantize_S16(3MLIB), mlib_VideoQuantizeInit_S16(3MLIB), attributes(5)
