<beginning of page>
sysevent_get_attr_list <-> get attribute list pointer
cc [flag ...] file... -lsysevent -lnvpair [library ...]
#include <libsysevent.h>
#include <libnvpair.h>
int sysevent_get_attr_list(sysevent_t *ev, nvlist_t **attr_list);
ev handle to a system event
attr_list address of a pointer to attribute list (nvlist_t)
The sysevent_get_attr_list() function updates attr_list to point to a searchable name-value pair list associated with
the sysevent event, ev. The interface manages the allocation of the attribute list, but it is up to the caller to free the
list when it is no longer needed with a call to nvlist_free(). See nvlist_alloc(3NVPAIR).
The sysevent_get_attr_list() function returns 0 if the attribute list for ev is found to be valid. Otherwise it returns <mi>1
and sets errno to indicate the error.
The sysevent_get_attr_list() function will fail if:
ENOMEM Insufficient memory available to allocate an nvlist.
EINVAL Invalid sysevent event attribute list.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
syseventd(1M), nvlist_alloc(3NVPAIR), nvlist_lookup_boolean(3NVPAIR), attributes(5)
The libsysevent interfaces do not work at all in non-global zones.
