<beginning of page>
net_hook_register <-> add a hook to be called in event processing
#include <sys/neti.h>
net_hook_t net_hook_register(const net_data_t net, hook_t *hook);
Solaris DDI specific (Solaris DDI).
net value returned from a successful call to net_protocol_register().
hook pointer to a hook_t structure.
The net_hook_register() function uses hooks that allow callbacks to be registered with events that belong to a net<hy>
work protocol. A successful call to net_hook_register() requires that a valid handle for a network protocol be pro<hy>
vided (the net parameter), along with a hook description that includes a reference to an available event.
While it is possible to use the same hook_t structure with multiple calls to net_hook_register(), it is not encour<hy>
aged.
The hook_t structure passed in with this function is described by hook_t(9S). The following describes how this
structure is used.
h_func Must be non-NULL and represent a function that fits the specified interface.
h_name Gives the hook a name that represents its owner. No duplication of h_name among the hooks present for an
event is allowed.
h_flags Currently unused and must be set to 0.
h_hint, h_hintvalue Specify a hint to net_hook_register() on how to insert this hook. If the hint cannot be speci<hy>
fied, then an error is returned.
h_arg; May take any value that the consumer wishes to have passed back when the hook is activated.
If the net_hook_register() function succeeds, 0 is returned. Otherwise, one of the following errors is returned:
ENOMEM The system cannot allocate any more memory to support registering this hook.
ENXIO A hook cannot be found among the given family of events.
EEXIST A hook with the given h_name already exists on that event.
ESRCH A before or after dependency cannot be satisfied due to the hook with
EBUSY The h_hint field specifies a hint that cannot currently be satisfied because it conflicts with another hook. An
example of this might be specifying HH_FIRST or HH_LAST when another hook has already been registered with
this value.
The net_hook_register() function may be called from user or kernel context.
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilityCommitted
net_hook_unregister(9F), hook_t(9S)
