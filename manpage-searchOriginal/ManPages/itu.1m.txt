<beginning of page>
itu <-> convert packages to Driver Update format and patch Solaris install media for Install Time Update
itu makedu -r solaris_release [-v] [-f] [-d output_dir] [-o iso_file]
 [-l iso_label] package [package...]
itu updatemedia -R media_root [-v] [-f] [-o iso_file]
 [-l iso_label] pkg_or_patch [pkg_or_patch...]
itu makeiso -o iso_file [-v] [-l iso_label] media_root
The itu utility converts driver packages to Driver Update (DU) format and patches a Solaris install media with driver
packages and patches for Install Time Update (ITU). itu has three subcommands: makedu, updatemedia and
makeiso.
The following options are supported:
-d output_dir
Directory where the Driver Update directory is to be created.
-f
If output_dir/DU or iso_file already exists, remove it without asking first.
-l iso_label
Label/volume name of the ISO image (if -o option is specified).
-o iso_file
Path of the ISO image file to be created. For subcommands updatemedia and makeiso, it will be a bootable ISO im<hy>
age. This option must be specified for subcommand makeiso.
-R media_root
Top-level directory of on-disk image of Solaris installation media. This option must be specified for subcommand
updatemedia.
-r solaris_release
Solaris release number for which the Driver Update is intended. It takes the form of the output of uname -r, for ex<hy>
ample, 5.10. This option must be specified for subcommand makedu.
-v
Verbose. Multiple -v options increase verbosity.
The itu subcommands are described as follows.
The makedu subcommand takes one or more driver packages as input and converts them to DU format. At the be<hy>
ginning of an interactive Solaris installation session, these driver updates can be applied to the running kernel, which
will then also automatically apply them to the newly installed Solaris at the end of the installation process.
The -r option is required to specify the Solaris release number for which the driver updates apply. The solaris_re<hy>
lease option argument takes the form uname -r output, for example, 5.10 or 5.11.
If the -d option is specified, the resulting DU directory tree is placed in the directory output_dir.
If the -o option is specified, a (non-bootable) ISO image of the DU directory tree is written in the file iso_file. This
ISO image can be burned onto a CD/DVD using cdrw(1) or cdrecord(1) (not a SunOS man page). See the "Exam<hy>
ples" section below for an example of creating a DU on a floppy.
<beginning of page>
At least one of -d and -o option must be specified. If both are specified, then both an ISO image and a directory tree
are generated.
The updatemedia subcommand takes a list of driver packages and patches as input and applies them to the miniroot
of a Solaris install media. It also places them in a subdirectory called ITUs under the Solaris install media's top-level
directory:
 media_root/ITUs
When booting a system from the updated media, the patches and packages will be part of the booted Solaris image.
They will also be applied to the target system being installed at the end of the installation process.
The -R option must be entered on the command line to specify the Solaris install media. Note that the install media
must be on a location that is writable by itu.
If the -o option is specified, a bootable ISO image of the patched install media is also created in the file iso_file. The
ISO image can then be burned onto a CD or DVD.
The makeiso subcommand runs mkisofs(8) to create a bootable Solaris ISO image of the Solaris install media me<hy>
dia_root and writes it to the file iso_file. The ISO image file can then be burned onto a CD or DVD with utilities
such as cdrw(1) or cdrecord(1). (Note that mkisofs(8) and cdrecord(1) are not SunOS man pages.) Caution -
The Solaris install media media-root must contain the file boot/grub/stage2_eltorito, which will be written to the
media boot sectors. This file will be modified with some boot information, thus it has to be writable. If necessary,
first save a copy, prior to running this subcommand.
The following operands are supported:
package [package...]
One or more driver packages.
pkg_or_patch [pkg_or_patch...]
One or more patches or packages.
media_root
The top-level directory of a Solaris install media.
Example 1 Creating a DU CD/DVD
The following commands create a Driver Update CD/DVD containing the packages SAMPLEpkg1 and SAM<hy>
PLEpkg2.
 # itu makedu -r 5.10 -o my.iso SAMPLEpkg1 SAMPLEpkg2
 # cdrw -i my.iso
Example 2 Creating a DU Floppy
The following commands create a Driver Update floppy containing the driver package MYdriver.
 # rmformat -F quick /dev/rdiskette
 # mkfs -F pcfs /dev/rdiskette
 # mount -F pcfs /dev/diskette /mnt
 # /usr/bin/itu makedu -r 5.10 -d /mnt /export/MYdriver
 # umount /mnt
 # dd if=/dev/rdiskette of=floppy.dd
<beginning of page>
The itu command above creates the DU directly onto the floppy mounted on /mnt. The dd invocation stores an im<hy>
age of the floppy in the file floppy.dd. This is useful for distributing a DU floppy in file form. From the file, the flop<hy>
py can then be recreated as follows:
 # dd if=floppy.dd of=/dev/rdiskette
Example 3 Patching the Solaris Install Media
The following command patches the Solaris install media in /export/s10u1 with patch /opt/patches/123456-07 and
driver package /opt/pkgs/MYdriver. The command also creates a bootable ISO image with ISO label "MyS10U1"
in the file /tmp/dvd.iso.
 # /usr/bin/itu updatemedia -R /export/s10u1 -o /tmp/dvd.iso -l MyS10U1 \
  /opt/patches/123456-07 /opt/pkgs/MYdriver
Example 4 Creating a Bootable ISO Image
The following commands create the bootable ISO image mydvd.iso of the Solaris install image /export/so<hy>
laris-10u1 with ISO label "Special-S10".
 # /usr/bin/itu makeiso -o mydvd.iso -l "Special-S10" \
  /export/solaris-10u1
 # cdrw -i mydvd.iso
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilityCommitted
cdrw(1), patchadd(1M), pkgadd(1M), attributes(5)
mkisofs(8), (/usr/share/man/man8/mkisofs.8), in the SUNWfsman package (not a SunOS man page)
