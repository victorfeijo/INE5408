<beginning of page>
strcoll <-> string collation
#include <string.h>
int strcoll(const char *s1, const char *s2);
Both strcoll() and strxfrm(3C) provide for locale-specific string sorting. strcoll() is intended for applications in
which the number of comparisons per string is small. When strings are to be compared a number of times,
strxfrm(3C) is a more appropriate function because the transformation process occurs only once.
The strcoll() function does not change the setting of errno if successful.
Since no return value is reserved to indicate an error, an application wishing to check for error situations should set
errno to 0, then call strcoll(), then check errno.
Upon successful completion, strcoll() returns an integer greater than, equal to, or less than zero in direct correlation
to whether string s1 is greater than, equal to, or less than the string s2. The comparison is based on strings interpret<hy>
ed as appropriate to the program's locale for category LC_COLLATE (see setlocale(3C)).
On error, strcoll() may set errno, but no return value is reserved to indicate an error.
The strcoll() function may fail if:
EINVAL The s1 or s2 arguments contain characters outside the domain of the collating sequence.
/usr/lib/locale/locale/locale.so.*
LC_COLLATE database for locale
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ CSIEnabled _ In<hy>
terface StabilityStandard _ MT-LevelMT-Safe with exceptions
The strcoll() function can be used safely in multithreaded applications, as long as setlocale(3C) is not being called
to change the locale.
localedef(1), setlocale(3C), string(3C), strxfrm(3C), wsxfrm(3C), attributes(5), environ(5), standards(5)
