<beginning of page>
getconf <-> get configuration values
/usr/bin/getconf [-v specification] system_var
/usr/bin/getconf [-v specification] path_var pathname
/usr/bin/getconf -a
/usr/xpg4/bin/getconf [-v specification] system_var
/usr/xpg4/bin/getconf [-v specification] path_var pathname
/usr/xpg4/bin/getconf -a
/usr/xpg6/bin/getconf [-v specification] system_var
/usr/xpg6/bin/getconf [-v specification] path_var pathname
/usr/xpg6/bin/getconf -a
getconf [-abdlpqrtw] [-c RE] [-n RE] [-s RE] [-v name][name [path [value]] ...]
In the first synopsis form, the getconf utility writes to the standard output the value of the variable specified by sys<hy>
tem_var, in accordance with specification if the -v option is used.
In the second synopsis form, getconf writes to the standard output the value of the variable specified by path_var for
the path specified by pathname, in accordance with specification if the -v option is used.
In the third synopsis form, config writes to the standard output the names of the current system configuration vari<hy>
ables.
The value of each configuration variable is determined as if it were obtained by calling the function from which it is
defined to be available. The value reflects conditions in the current operating environment.
The getconf built-in in ksh93 is associated with the /bin and /usr/bin paths. It is invoked when getconf is executed
without a pathname prefix and the pathname search finds a /bin/getconf or /usr/bin/getconf executable.
getconf displays the system configuration value for name. If name is a filesystem specific variable, the value is deter<hy>
mined relative to path, or, the current directory, if path is omitted. If value is specified, getconf attempts to change
the process local value to value. - can be used in place of path when it is not relevant. Only writable variables can be
set. readonly variables cannot be changed.
The current value for name is written to the standard output. If name is valid but undefined, undefined is written to
the standard output. If name is invalid or an error occurs in determining its value, a diagnostic is written to standard
error and getconf exits with a non-zero exit status.
More than one variable can be set or queried by providing the name path value 3-tuple for each variable, specifying -
for value when querying.
If no operands are specified, all known variables are written in name=value form to the standard output, one per line.
Only one of --call, --name or --standard can be specified.
The following options are supported by /usr/bin/getconf, /usr/xpg4/bin/getconf, and /usr/xpg6/bin/getconf
-a Writes the names of the current system configuration variables to the standard output.
-vspecification Gives the specification which governs the selection of values for configuration variables.
The following options are supported by the getconf built-in command in ksh93:
-a
--all Call the native getconf -a.
<beginning of page>
-b
--base List base variable name without call and standard prefixes.
-c
--call=RE Display variables with call prefix that matches RE. The call prefixes are: <bu> CS
confstr(3C), <bu> PC
pathconf(2) <bu> SC
sysconf(3C) <bu> SI
sysinfo(2) <bu> XX
Constant value
-d
--defined Only display defined values when no operands are specified.
-l
--lowercase List variable names in lower case.
-n
--name=RE Display variables with names that match RE.
-p
--portable Display the named writable variables and values in a form that can be directly executed by ksh93(1) to
set the values. If name is omitted, lists all writable variables.
-q
--quote Quote values ("...").
-r
--readonly Display the named readonly variables in name=value form. If name is omitted, lists all readonly vari<hy>
ables.
-s
--standard=RE Display variables with standard prefix that matches RE. Use the --table option to view all standard
prefixes, including local additions.
The standard prefixes available on all systems are:
 AES
 AST
 C
 GNU
 POSIX
 SVID
 XBS5
 XOPEN
 XPG
-t
--table Display the internal table that contains the name, standard, standard section, and system call symbol prefix
for each variable.
-w
--writable Display the named writable variables in name=value form. If name is omitted, lists all writable variables.
-v
--specification=name Call the native getconf -v name.
The following operands are supported by /usr/bin/getconf, /usr/xpg4/bin/getconf, and /usr/xpg6/bin/getconf:
<beginning of page>
path_var A name of a configuration variable whose value is available from the pathconf(2) function. All of the val<hy>
ues in the following table are supported:
tab(); lw(1.83i) lw(1.83i) lw(1.83i) lw(1.83i) lw(1.83i) lw(1.83i) LINK_MAXNAME_MAX_POSIX_CHOWN_RE<hy>
STRICTED MAX_CANONPATH_MAX_POSIX_NO_TRUNC MAX_INPUTPIPE_BUF_POSIX_VDISABLE
pathname A path name for which the variable specified by path_var is to be determined.
system_var A name of a configuration variable whose value is available from confstr(3C) or sysconf(3C). All of the
values in the following table are supported:
tab(); lw(2.75i) lw(2.75i) lw(2.75i) lw(2.75i) ARG_MAXBC_BASE_MAX BC_DIM_MAXBC_SCALE_MAX
BC_STRING_MAXCHAR_BIT CHARCLASS_NAME_MAXCHAR_MAX CHAR_MINCHILD_MAX
CLK_TCKCOLL_WEIGHTS_MAX CS_PATHEXPR_NEST_MAX HOST_NAME_MAXINT_MAX
INT_MINLFS64_CFLAGS LFS64_LDFLAGSLFS64_LIBS LFS64_LINTFLAGSLFS_CFLAGS LFS_LD<hy>
FLAGSLFS_LIBS LFS_LINTFLAGSLINE_MAX LONG_BITLONG_MAX LONG_MINMB_LEN_MAX
NGROUPS_MAXNL_ARGMAX NL_LANGMAXNL_MSGMAX NL_NMAXNL_SETMAX
NL_TEXTMAXNZERO OPEN_MAXPOSIX2_BC_BASE_MAX POSIX2_BC_DIM_MAX<hy>
POSIX2_BC_SCALE_MAX POSIX2_BC_STRING_MAXPOSIX2_C_BIND POSIX2_C_DEV<hy>
POSIX2_CHAR_TERM POSIX2_COLL_WEIGHTS_MAXPOSIX2_C_VERSION POSIX2_EXPR_NEST_MAX<hy>
POSIX2_FORT_DEV POSIX2_FORT_RUNPOSIX2_LINE_MAX POSIX2_LOCALEDEF<hy>
POSIX2_RE_DUP_MAX POSIX2_SW_DEVPOSIX2_SYMLINKS POSIX2_UPEPOSIX2_VERSION
POSIX_ALLOC_SIZE_MINPOSIX_REC_INCR_XFER_SIZE
POSIX_REC_MAX_XFER_SIZEPOSIX_REC_MIN_XFER_SIZE POSIX_REC_XFER_ALIGN<hy>
POSIX_V6_ILP32_OFF32 POSIX_V6_ILP32_OFF32_CFLAGSPOSIX_V6_ILP32_OFF32_LDFLAGS
POSIX_V6_ILP32_OFF32_LIBSPOSIX_V6_ILP32_OFFBIG POSIX_V6_ILP32_OFF<hy>
BIG_CFLAGSPOSIX_V6_ILP32_OFFBIG_LDFLAGS POSIX_V6_ILP32_OFFBIG_LIB<hy>
SPOSIX_V6_LP64_OFF64 POSIX_V6_LP64_OFF64_CFLAGSPOSIX_V6_LP64_OFF64_LDFLAGS
POSIX_V6_LP64_OFF64_LIBSPOSIX_V6_LPBIG_OFFBIG POSIX_V6_LPBIG_OFF<hy>
BIG_CFLAGSPOSIX_V6_LPBIG_OFFBIG_LDFLAGS POSIX_V6_LPBIG_OFFBIG_LIB<hy>
SPOSIX_V6_WIDTH_RESTRICTED_ENVS SYMLINK_MAXSYMLOOP_MAX
_POSIX2_BC_BASE_MAX_POSIX2_BC_DIM_MAX
_POSIX2_BC_SCALE_MAX_POSIX2_BC_STRING_MAX _POSIX2_CHAR<hy>
CLASS_NAME_MAX_POSIX2_CHAR_TERM _POSIX2_COLL_WEIGHTS_MAX_POSIX2_C_BIND
_POSIX2_C_DEV_POSIX2_C_VERSION _POSIX2_EXPR_NEST_MAX_POSIX2_FORT_DEV
_POSIX2_FORT_RUN_POSIX2_LINE_MAX _POSIX2_LOCALEDEF_POSIX2_PBS _POSIX2_PBS_AC<hy>
COUNTING_POSIX2_PBS_CHECKPOINT _POSIX2_PBS_LOCATE_POSIX2_PBS_MESSAGE
_POSIX2_PBS_TRACK_POSIX2_RE_DUP_MAX _POSIX2_SW_DEV_POSIX2_UPE _POSIX2_VER<hy>
SION_POSIX_ADVISORY_INFO _POSIX_AIO_LISTIO_MAX_POSIX_AIO_MAX
_POSIX_ARG_MAX_POSIX_ASYNC_IO _POSIX_BARRIERS_POSIX_CHILD_MAX _POSIX_CLOCK<hy>
RES_MIN_POSIX_CLOCK_SELECTION _POSIX_CPUTIME_POSIX_DELAYTIMER_MAX
_POSIX_HOST_NAME_MAX_POSIX_IPV6 _POSIX_JOB_CONTROL_POSIX_LINK_MAX _POSIX_LO<hy>
GIN_NAME_MAX_POSIX_MAX_CANON _POSIX_MAX_INPUT_POSIX_MONOTONIC_CLOCK
_POSIX_MQ_OPEN_MAX_POSIX_MQ_PRIO_MAX _POSIX_NAME_MAX_POSIX_NGROUPS_MAX
_POSIX_OPEN_MAX_POSIX_PATH_MAX _POSIX_PIPE_BUF_POSIX_PRIO_IO _POSIX_RAW_SOCK<hy>
ETS_POSIX_READER_WRITER_LOCKS _POSIX_REGEXP_POSIX_RE_DUP_MAX _POSIX_RT<hy>
SIG_MAX_POSIX_SAVED_IDS _POSIX_SEM_NSEMS_MAX_POSIX_SEM_VALUE_MAX
_POSIX_SHELL_POSIX_SIGQUEUE_MAX _POSIX_SPAWN_POSIX_SPIN_LOCKS _POSIX_SPO<hy>
RADIC_SERVER_POSIX_SSIZE_MAX _POSIX_SS_REPL_MAX_POSIX_STREAM_MAX _POSIX_SYM<hy>
LINK_MAX_POSIX_SYMLOOP_MAX _POSIX_SYNC_IO_POSIX_THREAD_ATTR_STACKADDR
_POSIX_THREAD_ATTR_STACKSIZE_POSIX_THREAD_CPUTIME _POSIX_THREAD_DESTRUCTOR_IT<hy>
ERATIONS_POSIX_THREAD_KEYS_MAX _POSIX_THREAD_PRIORITY_SCHEDUL<hy>
ING_POSIX_THREAD_PRIO_INHERIT _POSIX_THREAD_PRIO_PRO<hy>
TECT_POSIX_THREAD_PROCESS_SHARED _POSIX_THREAD_SAFE_FUNC<hy>
TIONS_POSIX_THREAD_SPORADIC_SERVER _POSIX_THREAD_THREADS_MAX_POSIX_TIMEOUTS
_POSIX_TIMER_MAX_POSIX_TRA_POSIX_TIMER_MAXCE _POSIX_TIMESTAMP_RESOLUTION
_POSIX_TRACE_EVENT_FILTER_POSIX_TRACE_EVENT_NAME_MAX _POSIX_TRACE_INHER<hy>
<beginning of page>
IT_POSIX_TRACE_LOG _POSIX_TRACE_NAME_MAX_POSIX_TRACE_SYS_MAX _POSIX_TRACE_US<hy>
ER_EVENT_MAX_POSIX_TTY_NAME_MAX _POSIX_TYPED_MEMORY_OBJECTS_POSIX_TZ<hy>
NAME_MAX _POSIX_VERSION_POSIX_V6_ILP32_OFF32 _POSIX_V6_ILP32_OFF<hy>
BIG_POSIX_V6_LP64_OFF64 _POSIX_V6_LPBIG_OFFBIG_V6_ILP32_OFF32 _V6_ILP32_OFF<hy>
BIG_V6_LP64_OFF64 _V6_LPBIG_OFFBIGRE_DUP_MAX SCHAR_MAXSCHAR_MIN
SHRT_MAXSHRT_MIN SSIZE_MAXSTREAM_MAX TMP_MAXTZNAME_MAX
UCHAR_MAXUINT_MAX ULONG_MAXUSHRT_MAX WORD_BITXBS5_ILP32_OFF32
XBS5_ILP32_OFF32_CFLAGSXBS5_ILP32_OFF32_LDFLAGS XBS5_ILP32_OFF32_LIB<hy>
SXBS5_ILP32_OFF32_LINTFLAGS XBS5_ILP32_OFFBIGXBS5_ILP32_OFFBIG_CFLAGS
XBS5_ILP32_OFFBIG_LDFLAGSXBS5_ILP32_OFFBIG_LIBS XBS5_ILP32_OFFBIG_LINT<hy>
FLAGSXBS5_LP64_OFF64 XBS5_LP64_OFF64_CFLAGSXBS5_LP64_OFF64_LDFLAGS
XBS5_LP64_OFF64_LIBSXBS5_LP64_OFF64_LINTFLAGS XBS5_LPBIG_OFFBIGXBS5_LPBIG_OFF<hy>
BIG_CFLAGS XBS5_LPBIG_OFFBIG_LDFLAGSXBS5_LPBIG_OFFBIG_LIBS XBS5_LPBIG_OFF<hy>
BIG_LINTFLAGS_XOPEN_CRYPT _XOPEN_ENH_I18N_XOPEN_IOV_MAX _XOPEN_LEGA<hy>
CY_XOPEN_NAME_MAX _XOPEN_PATH_MAX_XOPEN_SHM _XOPEN_STREAMS_XOPEN_VERSION
_XOPEN_XCU_VERSION_XOPEN_XPG2 _XOPEN_XPG3_XOPEN_XPG4
The symbol PATH also is recognized, yielding the same value as the confstr() name value CS_PATH.
See largefile(5) for the description of the behavior of /usr/bin/getconf when encountering files greater than or equal
to 2 Gbyte ( 2^31 bytes). Example 1 Writing the Value of a Variable
This example illustrates the value of {NGROUPS_MAX}:
 example% getconf NGROUPS_MAX
Example 2 Writing the Value of a Variable for a Specific Directory
This example illustrates the value of NAME_MAX for a specific directory:
 example% getconf NAME_MAX /usr
Example 3 Dealing with Unspecified Results
This example shows how to deal more carefully with results that might be unspecified:
 if value=$(getconf PATH_MAX /usr); then
 if [ "$value" = "undefined" ]; then
 echo PATH_MAX in /usr is infinite.
 else
 echo PATH_MAX in /usr is $value.
 fi
 else
 echo Error in getconf.
 fi
For example:
 sysconf(_SC_POSIX_C_BIND);
and
 system("getconf POSIX2_C_BIND");
in a C program could give different answers. The sysconf call supplies a value that corresponds to the conditions
<beginning of page>
when the program was either compiled or executed, depending on the implementation. The system call to getconf
always supplies a value corresponding to conditions when the program is executed.
See environ(5) for descriptions of the following environment variables that affect the execution of getconf: LANG,
LC_ALL, LC_CTYPE, LC_MESSAGES, and NLSPATH.
The following environment variable is supported by the ksh93 built-in getconf command:
_AST_FEATURES Local writable values that are different from the default are stored in the _AST_FEATURES
environment variable. The _AST_FEATURES value is a space-separated list of name path value 3-tuples, where
name is the system configuration name, path is the corresponding path, - if no path is applicable, and value is the
system configuration value.
The following exit values are returned:
0 The specified variable is valid and information about its current state was written successfully.
>0 An error occurred.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilityCommitted _ StandardSee standards(5).
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wcsu _ Interface StabilitySee below.
The ksh93 built-in binding to /bin and /usr/bin is Volatile. The built-in command-line interface is Committed.
ksh93(1), sh(1), pathconf(2), sysinfo(2), confstr(3C), sysconf(3C), attributes(5), environ(5), largefile(5), stan<hy>
dards(5)
