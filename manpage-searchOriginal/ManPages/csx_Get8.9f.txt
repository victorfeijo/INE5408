<beginning of page>
csx_Get8, csx_Get16, csx_Get32, csx_Get64 <-> read data from device address
#include <sys/pccard.h>
uint8_t csx_Get8(acc_handle_t handle, uint32_t offset);
uint16_t csx_Get16(acc_handle_t handle, uint32_t offset);
uint32_t csx_Get32(acc_handle_t handle, uint32_t offset);
uint64_t csx_Get64(acc_handle_t handle, uint64_t offset);
Solaris DDI Specific (Solaris DDI)
handle The access handle returned from csx_RequestIO(9F), csx_RequestWindow(9F), or csx_DupHandle(9F).
offset The offset in bytes from the base of the mapped resource.
These functions generate a read of various sizes from the mapped memory or device register.
The csx_Get8(), csx_Get16(), csx_Get32(), and csx_Get64() functions read 8 bits, 16 bits, 32 bits, and 64 bits of
data, respectively, from the device address represented by the handle, handle, at an offset in bytes represented by the
offset, offset.
Data that consists of more than one byte will automatically be translated to maintain a consistent view between the
host and the device based on the encoded information in the data access handle. The translation may involve byte
swapping if the host and the device have incompatible endian characteristics.
These functions return the value read from the mapped address.
These functions may be called from user, kernel, or interrupt context.
csx_DupHandle(9F), csx_GetMappedAddr(9F), csx_Put8(9F), csx_RepGet8(9F), csx_RepPut8(9F), csx_Re<hy>
questIO(9F), csx_RequestWindow(9F)
PC Card 95 Standard, PCMCIA/JEIDA
