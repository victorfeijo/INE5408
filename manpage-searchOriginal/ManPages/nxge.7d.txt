<beginning of page>
nxge <-> Sun 10/1 Gigabit Ethernet network driver
/dev/nxge*
The nxge Gigabit Ethernet driver is a multi-threaded, loadable, clonable, GLD-based STREAMS driver supporting
the Data Link Provider Interface, dlpi(7P), on Sun Gigabit Ethernet hardware (NIU, Sun x8, Express Dual 10 Giga<hy>
bit Ethernet fiber XFP low profile adapter and the 10/100/1000BASE-T x8 Express low profile adapter).
The nxge driver functions include chip initialization, frame transmit and receive, flow classification, multicast and
promiscuous support, and error recovery and reporting.
The nxge device provides fully-compliant IEEE 802.3ae 10Gb/s full duplex operation using XFP-based 10GigE op<hy>
tics (NIU, dual 10 Gigabit fiber XFP adapter). The Sun Ethernet hardware supports the IEEE 802.3x frame-based
flow control capabilities.
For the 10/100/1000BASE-T adapter, the nxge driver and hardware support auto-negotiation, a protocol specified by
the 1000 Base-T standard. Auto-negotiation allows each device to advertise its capabilities and discover those of its
peer (link partner). The highest common denominator supported by both link partners is automatically selected,
yielding the greatest available throughput while requiring no manual configuration. The nxge driver also allows you
to configure the advertised capabilities to less than the maximum (where the full speed of the interface is not re<hy>
quired) or to force a specific mode of operation, irrespective of the link partner's advertised capabilities.
The cloning character-special device, /dev/nxge, is used to access all Sun Neptune NIU devices installed within the
system.
The nxge driver is managed by the dladm(1M) command line utility, which allows VLANs to be defined on top of
nxge instances and for nxge instances to be aggregated. See dladm(1M) for more details.
You must send an explicit DL_ATTACH_REQ message to associate the opened stream with a particular device
(PPA). The PPA ID is interpreted as an unsigned integer data type and indicates the corresponding device instance
(unit) number. The driver returns an error (DL_ERROR_ACK) if the PPA field value does not correspond to a valid
device instance number for the system. The device is initialized on first attach and de-initialized (stopped) at last de<hy>
tach.
The values returned by the driver in the DL_INFO_ACK primitive in response to a DL_INFO_REQ are: <bu> Maximum
SDU (default 1500). <bu> Minimum SDU (default 0). The driver pads to the mandatory 60-octet minimum packet size.
<bu> DLSAP address length is 8. <bu> MAC type is DL_ETHER. <bu> SAP length value is -2, meaning the physical address
component is followed immediately by a 2-byte SAP component within the DLSAP address. <bu> Broadcast address
value is the Ethernet/IEEE broadcast address (FF:FF:FF:FF:FF:FF).
Due to the nature of link address definition for IPoIB, the DL_SET_PHYS_ADDR_REQ DLPI primitive is not sup<hy>
ported.
In the transmit case for streams that have been put in raw mode via the DLIOCRAW ioctl, the dlpi application must
prepend the 20 byte IPoIB destination address to the data it wants to transmit over-the-wire. In the receive case, ap<hy>
plications receive the IP/ARP datagram along with the IETF defined 4 byte header.
Once in the DL_ATTACHED state, you must send a DL_BIND_REQ to associate a particular Service Access Point
(SAP) with the stream.
For the 10/100/1000BASE-T adapter, the nxge driver performs auto-negotiation to select the link speed and mode.
Link speed and mode may be 10000 Mbps full-duplex (10 Gigabit adapter), 1000 Mbps full-duplex, 100 Mbps full-
duplex, or 10 Mbps full-duplex, depending on the hardware adapter type. See the IEEE802.3 standard for more in<hy>
formation.
The auto-negotiation protocol automatically selects the 1000 Mbps, 100 Mbps, or 10 Mbps operation modes (full-
duplex only) as the highest common denominator supported by both link partners. Because the nxge device supports
all modes, the effect is to select the highest throughput mode supported by the other device.
You can also set the capabilities advertised by the nxge device using dladm(1M). The driver supports a number of
parameters whose names begin with en_ (see below). Each of these parameters contains a boolean value that deter<hy>
mines if the device advertises that mode of operation. The adv_autoneg_cap parameter controls whether auto-ne<hy>
gotiation is performed. If adv_autoneg_cap is set to 0, the driver forces the mode of operation selected by the first
non-zero parameter in priority order as shown below:
  (highest priority/greatest throughput)
<beginning of page>
  en_1000fdx_cap 1000Mbps full duplex
  en_100fdx_cap 100Mpbs full duplex
  en_10fdx_cap 10Mpbs full duplex
  (lowest priority/least throughput)
All capabilities default to enabled. Note that changing any capability parameter causes the link to go down while the
link partners renegotiate the link speed/duplex using the newly changed capabilities.
/dev/nxge* Special character device.
/kernel/drv/nxge 32-bit device driver (x86).
/kernel/drv/sparcv9/nxge 64-bit device driver (SPARC).
/kernel/drv/amd64/nxge 64-bit device driver (x86).
/kernel/drv/nxge.conf Configuration file.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ ArchitectureS<hy>
PARC, x86
dladm(1M), netstat(1M), attributes(5), streamio(7I), dlpi(7P), driver.conf(4)
Writing Device Drivers
STREAMS Programming Guide
Network Interfaces Programmer's Guide
IEEE 802.3ae Specification <em> 2002
