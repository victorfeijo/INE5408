<beginning of page>
gettxt <-> retrieve a text string from a message database
gettxt msgfile : msgnum [dflt_msg]
gettxt retrieves a text string from a message file in the directory /usr/lib/locale/locale/LC_MESSAGES . The direc<hy>
tory name locale corresponds to the language in which the text strings are written; see setlocale(3C).
msgfile Name of the file in the directory /usr/lib/locale/locale/LC_MESSAGES to retrieve msgnum from. The
name of msgfile can be up to 14 characters in length, but may not contain either \0 (null) or the ASCII code for /
(slash) or : (colon).
msgnum Sequence number of the string to retrieve from msgfile. The strings in msgfile are numbered sequentially
from 1 to n, where n is the number of strings in the file.
dflt_msg Default string to be displayed if gettxt fails to retrieve msgnum from msgfile. Nongraphic characters must
be represented as alphabetic escape sequences.
The text string to be retrieved is in the file msgfile, created by the mkmsgs(1) utility and installed under the directory
/usr/lib/locale/locale/LC_MESSAGES . You control which directory is searched by setting the environment vari<hy>
able LC_MESSAGES. If LC_MESSAGES is not set, the environment variable LANG will be used. If LANG is
not set, the files containing the strings are under the directory /usr/lib/locale/C/LC_MESSAGES .
If gettxt fails to retrieve a message in the requested language, it will try to retrieve the same message from
/usr/lib/locale/C/LC_MESSAGES/ msgfile. If this also fails, and if dflt_msg is present and non-null, then it will dis<hy>
play the value of dflt_msg; if dflt_msg is not present or is null, then it will display the string Message not found!!.
Example 1 The environment variables LANG and LC_MESSAGES.
If the environment variables LANG or LC_MESSAGES have not been set to other than their default values, the fol<hy>
lowing example:
 example% gettxt UX:10 "hello world\n"
will try to retrieve the 10th message from /usr/lib/locale/C/UX/msgfile. If the retrieval fails, the message "hello
world," followed by a newline, will be displayed.
See environ(5) for descriptions of the following environment variables that affect the execution of gettxt:
LC_CTYPE and LC_MESSAGES.
LC_CTYPE Determines how gettxt handles characters. When LC_CTYPE is set to a valid value, gettxt can dis<hy>
play and handle text and filenames containing valid characters for that locale. gettxt can display and handle Extend<hy>
ed Unix Code (EUC) characters where any individual character can be 1, 2, or 3 bytes wide. gettxt can also handle
EUC characters of 1, 2, or more column widths. In the "C" locale, only characters from ISO 8859-1 are valid.
LC_MESSAGES Determines how diagnostic and informative messages are presented. This includes the language
and style of the messages, and the correct form of affirmative and negative responses. In the "C" locale, the mes<hy>
sages are presented in the default form found in the program itself (in most cases, U.S. English).
/usr/lib/locale/C/LC_MESSAGES/*
default message files created by mkmsgs(1)
/usr/lib/locale/locale/LC_MESSAGES/*
message files for different languages created by mkmsgs(1)
See attributes(5) for descriptions of the following attributes:
<beginning of page>
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wloc CSIEnabled
exstr(1), mkmsgs(1), srchtxt(1), gettxt(3C), setlocale(3C), attributes(5), environ(5)
