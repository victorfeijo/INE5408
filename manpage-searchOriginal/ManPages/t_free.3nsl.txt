<beginning of page>
t_free <-> free a library structure
#include <xti.h>
int t_free(void *ptr, int struct_type);
This routine is part of the XTI interfaces which evolved from the TLI interfaces. XTI represents the future evolution
of these interfaces. However, TLI interfaces are supported for compatibility. When using a TLI routine that has the
same name as an XTI routine, the tiuser.h header file must be used. Refer to the TLI COMPATIBILITY section
for a description of differences between the two interfaces.
The t_free() function frees memory previously allocated by t_alloc(3NSL). This function will free memory for the
specified structure, and will also free memory for buffers referenced by the structure.
The argument ptr points to one of the seven structure types described for t_alloc(3NSL), and struct_type identifies
the type of that structure which must be one of the following:
 T_BIND struct t_bind
 T_CALL struct t_call
 T_OPTMGMT struct t_optmgmt
 T_DIS struct t_discon
 T_UNITDATA struct t_unitdata
 T_UDERROR struct t_uderr
 T_INFO structt_info
where each of these structures is used as an argument to one or more transport functions.
The function t_free() will check the addr, opt and udata fields of the given structure, as appropriate, and free the
buffers pointed to by the buf field of the netbuf structure. If buf is a null pointer, t_free() will not attempt to free
memory. After all buffers are freed, t_free() will free the memory associated with the structure pointed to by ptr.
Undefined results will occur if ptr or any of the buf pointers points to a block of memory that was not previously al<hy>
located by t_alloc(3NSL).
Upon successful completion, a value of 0 is returned. Otherwise, a value of -1 is returned and t_errno is set to in<hy>
dicate an error.
ALL - apart from T_UNINIT.
On failure, t_errno is set to the following:
TNOSTRUCTYPE Unsupported struct_type requested.
TPROTO This error indicates that a communication problem has been detected between XTI and the transport
provider for which there is no other suitable XTI error (t_errno).
TSYSERR A system error has occurred during execution of this function.
The XTI and TLI interface definitions have common names but use different header files. This, and other semantic
differences between the two interfaces are described in the subsections below.
The XTI interfaces use the header file, xti.h. TLI interfaces should not use this header. They should use the header:
 #include <tiuser.h>
The t_errno value that can be set by the XTI interface and cannot be set by the TLI interface is:
<beginning of page>
TPROTO
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ MT LevelSafe
t_alloc(3NSL), attributes(5)
