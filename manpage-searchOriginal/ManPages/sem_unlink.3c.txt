<beginning of page>
sem_unlink <-> remove a named semaphore
#include <semaphore.h>
int sem_unlink(const char *name);
The sem_unlink() function removes the semaphore named by the string name. If the semaphore named by name is
currently referenced by other processes, then sem_unlink() has no effect on the state of the semaphore. If one or
more processes have the semaphore open when sem_unlink() is called, destruction of the semaphore is postponed
until all references to the semaphore have been destroyed by calls to sem_close(3C), _Exit(2), or one of the exec
functions (see exec(2)) . Calls to sem_open(3C) to re-create or re-connect to the semaphore refer to a new sema<hy>
phore after sem_unlink() is called. The sem_unlink() call does not block until all references have been destroyed;
it returns immediately.
Upon successful completion, sem_unlink() returns 0. Otherwise, the semaphore is not changed and the function re<hy>
turns a value of <mi>1 and sets errno to indicate the error.
The sem_unlink() function will fail if:
EACCES Permission is denied to unlink the named semaphore.
ENAMETOOLONG The length of name string exceeds PATH_MAX, or a pathname component is longer than
NAME_MAX while _POSIX_NO_TRUNC is in effect.
ENOENT The named semaphore does not exist.
ENOSYS The sem_unlink() function is not supported by the system.
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyCommitted _ MT-LevelMT-Safe _ StandardSee standards(5).
exec(2), exit(2), sem_close(3C), sem_open(3C), attributes(5), standards(5)
Solaris 2.6 was the first release to support the Asynchronous Input and Output option. Prior to this release, this func<hy>
tion always returned <mi>1 and set errno to ENOSYS.
