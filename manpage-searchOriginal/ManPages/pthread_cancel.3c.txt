<beginning of page>
pthread_cancel <-> cancel execution of a thread
cc -mt [ flag... ] file... -lpthread [ library... ]
#include <pthread.h>
int pthread_cancel(pthread_t target_thread);
The pthread_cancel() function requests that target_thread be canceled.
By default, cancellation is deferred until target_thread reaches a cancellation point. See cancellation(5).
Cancellation cleanup handlers for target_thread are called when the cancellation is acted on. Upon return of the last
cancellation cleanup handler, the thread-specific data destructor functions are called for target_thread. target_thread
is terminated when the last destructor function returns.
A thread acting on a cancellation request runs with all signals blocked. All thread termination functions, including
cancellation cleanup handlers and thread-specific data destructor functions, are called with all signals blocked.
The cancellation processing in target_thread runs asynchronously with respect to the calling thread returning from
pthread_cancel().
If successful, the pthread_cancel() function returns 0. Otherwise, an error number is returned to indicate the error.
The pthread_cancel() function may fail if:
ESRCH No thread was found with an ID corresponding to that specified by the given thread ID, target_thread.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe _ StandardSee standards(5).
pthread_cleanup_pop(3C), pthread_cleanup_push(3C), pthread_cond_wait(3C), pthread_cond_timed<hy>
wait(3C), pthread_exit(3C), pthread_join(3C), pthread_setcancelstate(3C), pthread_setcanceltype(3C),
pthread_testcancel(3C), setjmp(3C), attributes(5), cancellation(5), condition(5), standards(5)
See cancellation(5) for a discussion of cancellation concepts.
