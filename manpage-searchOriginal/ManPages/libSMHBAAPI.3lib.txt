<beginning of page>
libSMHBAAPI, libsmhbaapi, SMHBA_GetAdapterAttributes, SMHBA_GetAdapterPortAttributes, SMHBA_Get<hy>
BindingCapability, SMHBA_GetBindingSupport, SMHBA_GetDiscoveredPortAttributes, SMHBA_GetFCPhyAt<hy>
tributes, SMHBA_GetLUNStatistics, SMHBA_GetNumberofPorts, SMHBA_GetPersistentBinding, SMHBA_Get<hy>
PhyStatistics, SMHBA_GetPortAttributesByWWN, SMHBA_GetPortType, SMHBA_GetProtocolStatistics, SMH<hy>
BA_GetSASPhyAttributes, SMHBA_GetTargetMapping, SMHBA_GetVendorLibraryAttributes, SMHBA_GetVer<hy>
sion, SMHBA_GetWrapperLibraryAttributes, SMHBA_RegisterForAdapterAddEvents, SMHBA_Register<hy>
ForAdapterEvents, SMHBA_RegisterForAdapterPhyStatEvents, SMHBA_RegisterForAdapterPortEvents, SMH<hy>
BA_RegisterForAdapterPortStatEvents, SMHBA_RegisterForTargetEvents, SMHBA_RegisterLibrary, SMH<hy>
BA_RemoveAllPersistentBindings, SMHBA_RemovePersistentBinding, SMHBA_ScsiInquiry, SMHBA_ScsiRead<hy>
Capacity, SMHBA_ScsiReportLuns, SMHBA_SendECHO, SMHBA_SendSMPPassThru, SMHBA_SendTEST,
SMHBA_SetBindingSupport, SMHBA_SetPersistentBinding <-> Common Storage Management HBA information li<hy>
brary
cc [ flag... ] file... -lSMHBAAPI [ library... ]
#include <smhbaapi.h>
The functions in this library access Fibre Channel and/or Sereal Attached SCSI HBA data depending on vendor pro<hy>
vided implementation underneath.
HBA information is provided through a standard interface in a vendor independent manner. This common interface
provides access to the following information: <bu> Local HBA attributes <bu> Local HBA port attributes and statistics <bu>
Mapping between discovered devices and operating system SCSI information <bu> Discovered devices port attributes <bu>
SCSI commands for discovered devices (Report LUNS, Read Capacity, and Inquiry) <bu> Storage Managment Protocol
commands to discover Serial Attached SCSI configuration details <bu> Common Transport commands to discover Fibre
Channel Fabric details
The shared object libSMHBAAPI.so.1 provides the public interfaces defined below. See Intro(3) for additional in<hy>
formation on shared object interfaces.
tab(); lw(3i) lw(2.5i) lw(3i) lw(2.5i) HBA_CloseAdapterHBA_FreeLibrary HBA_GetAdapterNameHBA_Get<hy>
NumberOfAdapters HBA_GetRNIDMgmtInfoHBA_LoadLibrary HBA_OpenAdapterHBA_RefreshAdapter<hy>
Configuration HBA_RefreshInformationHBA_RegisterForLinkEvents HBA_RemoveCallbackHBA_SendCT<hy>
PassThruV2 HBA_SendLIRRHBA_SendRLS HBA_SendRNIDV2HBA_SendRPL HBA_SendRPSH<hy>
BA_SendSRL HBA_SetRNIDMgmtInfoSMHBA_GetAdapterAttributes SMHBA_GetAdapterPortAt<hy>
tributesSMHBA_GetBindingCapability SMHBA_GetBindingSupportSMHBA_GetDiscoveredPortAttributes
SMHBA_GetFCPhyAttributesSMHBA_GetLUNStatistics SMHBA_GetNumberofPortsSMHBA_GetPersis<hy>
tentBinding SMHBA_GetPhyStatisticsSMHBA_GetPortAttributesByWWN SMHBA_GetPortTypeSMH<hy>
BA_GetProtocolStatistics SMHBA_GetSASPhyAttributesSMHBA_GetTargetMapping SMHBA_GetVendor<hy>
LibraryAttributesSMHBA_GetVersion SMHBA_GetWrapperLibraryAttributesSMHBA_Register<hy>
ForAdapterAddEvents SMHBA_RegisterForAdapterEventsSMHBA_RegisterForAdapterPhyStatEvents
SMHBA_RegisterForAdapterPortEventsSMHBA_RegisterForAdapterPortStatEvents SMHBA_RegisterFor<hy>
TargetEventsSMHBA_RegisterLibrary SMHBA_RemoveAllPersistentBindingsSMHBA_RemovePersistent<hy>
Binding SMHBA_ScsiInquirySMHBA_ScsiReadCapacity SMHBA_ScsiReportLunsSMHBA_SendECHO
SMHBA_SendSMPPassThruSMHBA_SendTEST SMHBA_SetBindingSupportSMHBA_SetPersistentBind<hy>
ing
Client applications link with the Common Library (using -lSMHBAAPI) to access the interfaces. The Common Li<hy>
brary dynamically loads individual Vendor-Specific Libraries (VSL) listed in /etc/smhba.conf and described on
smhba.conf(4).
Using the libSMHBAAPI involves the following steps: 1. Optionally determining the version of the library by call<hy>
ing SMHBA_GetVersion(). 2. Initializing the Common Library by calling HBA_LoadLibrary(). 3. Determine
the number of HBAs known to the common library by calling HBA_GetNumberOfAdapters(). 4. Determine each
HBA name in turn by calling HBA_GetAdapterName(). 5. Open each HBA in turn by calling HBA_Ope<hy>
nAdapter(). 6. Operate on a given HBA by calling the following: <bu> SMHBA_GetAdapterAttributes() <bu> SMH<hy>
BA_GetAdapterPortAttributes() <bu> SMHBA_GetDiscoveredPortAttributes() <bu> SMHBA_GetPortAttributesBy<hy>
WWN() <bu> SMHBA_GetNumberofPorts() <bu> SMHBA_GetPortType() <bu> SMHBA_GetProtocolStatistics() <bu> SMH<hy>
BA_GetPhyStatistics() <bu> SMHBA_GetBindingCapability() <bu> SMHBA_GetBindingSupport() <bu> SMHBA_Set<hy>
BindingSupport() <bu> SMHBA_GetTargetMapping() <bu> SMHBA_GetPersistentBinding() <bu> SMHBA_SetPersis<hy>
tentBinding() <bu> SMHBA_RemoveAllPersistentBindings() <bu> SMHBA_GetLUNStatistics() <bu> SMHBA_SendScsi<hy>
Inquiry() <bu> SMHBA_SendReportLuns() <bu> SMHBA_SendReadCapacity() <bu> SMHBA_RegisterForAdapterAd<hy>
dEvents() <bu> SMHBA_RegisterForAdapterEvents() <bu> SMHBA_RegisterForAdapterPortEvents() <bu> SMH<hy>
BA_RegisterForAdapterPortStatEvents() <bu> SMHBA_RegisterForAdapterPhyStatEvents() <bu> SMHBA_Regis<hy>
<beginning of page>
terForTargetEvents() <bu> HBA_RegisterForLinkEvents() <bu> HBA_RemoveCallback() For Serial Attached HBA <bu>
SMHBA_GetSASPhyAttributes() <bu> SMHBA_SendSMPPassThru() For Fibre Channle HBA <bu> SMHBA_GetFC<hy>
PhyAttributes() <bu> HBA_SendCTPassThruV2() <bu> HBA_SetRNIDMgmtInfo() <bu> HBA_GetRNIDMgmtInfo() <bu>
HBA_SendRNIDV2() <bu> HBA_SendRPL() <bu> HBA_SendRPS() <bu> HBA_SendSRL() <bu> HBA_SendLIRR() <bu>
HBA_SendRLS() <bu> HBA_SendTEST() <bu> HBA_SendECHO() 7. Close open HBAs by calling
HBA_CloseAdapter(). 8. Unload the library by calling HBA_FreeLibrary().
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ AvailabilitySUN<hy>
Wsmhba, SUNWsmhbar _ Interface StabilityCommitted _ MT-LevelMT-Safe _ StandardT{ ANSI INCITS 428
Storage Management Host Bus Adapter Application Programming Interface (SM-HBA) T}
smhba.conf(4), attributes(5)
