<beginning of page>
aio_return <-> retrieve return status of an asynchronous I/O operation
#include <aio.h>
ssize_t aio_return(struct aiocb *aiocbp);
The aio_return() function returns the return status associated with the aiocb structure referenced by the aiocbp ar<hy>
gument. The return status for an asynchronous I/O operation is the value that would be returned by the correspond<hy>
ing read(2), write(2), or fsync(3C) function call. If the error status for the operation is equal to EINPROGRESS,
then the return status for the operation is undefined. The aio_return() function may be called exactly once to re<hy>
trieve the return status of a given asynchronous operation; thereafter, if the same aiocb structure is used in a call to
aio_return() or aio_error(3C), an error may be returned. When the aiocb structure referred to by aiocbp is used to
submit another asynchronous operation, then aio_return() may be successfully used to retrieve the return status of
that operation.
If the asynchronous I/O operation has completed, then the return status, as described for read(2), write(2), and
fsync(3C), is returned. If the asynchronous I/O operation has not yet completed, the results of aio_return() are un<hy>
defined.
The aio_return() function will fail if:
EINVAL The aiocbp argument does not refer to an asynchronous operation whose return status has not yet been re<hy>
trieved.
ENOSYS The aio_return() function is not supported by the system.
The aio_return() function has a transitional interface for 64-bit file offsets. See lf64(5).
See attributes(5) for descriptions of the following attributes:
tab() box; lw(2.75i) |lw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stabili<hy>
tyCommitted _ MT-LevelAsync-Signal-Safe _ StandardSee standards(5).
close(2), exec(2), exit(2), fork(2), lseek(2), read(2), write(2), fsync(3C), aio.h(3HEAD), signal.h(3HEAD),
aio_cancel(3C), aio_fsync(3C), aio_read(3C), lio_listio(3C), attributes(5), lf64(5), standards(5)
Solaris 2.6 was the first release to support the Asynchronous Input and Output option. Prior to this release, this func<hy>
tion always returned <mi>1 and set errno to ENOSYS.
