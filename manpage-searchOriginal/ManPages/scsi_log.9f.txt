<beginning of page>
scsi_log <-> display a SCSI-device-related message
#include <sys/scsi/scsi.h>
 #include <sys/cmn_err.h>
void scsi_log(dev_info_t *dip, char *drv_name, uint_t level,
 const char *fmt, ...);
Solaris DDI specific (Solaris DDI).
dip Pointer to the dev_info structure.
drv_name String naming the device.
level Error level.
fmt Display format.
The scsi_log() function is a utility function that displays a message via the cmn_err(9F) routine. The error levels
that can be passed in to this function are CE_PANIC, CE_WARN, CE_NOTE, CE_CONT, and SCSI_DEBUG.
The last level is used to assist in displaying debug messages to the console only. drv_name is the short name by
which this device is known; example disk driver names are sd and cmdk. If the dev_info_t pointer is NULL, then the
drv_name will be used with no unit or long name.
If the first character in format is: <bu> An exclamation mark (!), the message goes only to the system buffer. <bu> A caret
(^), the message goes only to the console. <bu> A question mark (?) and level is CE_CONT, the message is always sent
to the system buffer, but is written to the console only when the system has been booted in verbose mode. See ker<hy>
nel(1M). If neither condition is met, the ? character has no effect and is simply ignored.
All formatting conversions in use by cmn_err() also work with scsi_log().
The scsi_log() function may be called from user, interrupt, or kernel context.
kernel(1M), sd(7D), cmn_err(9F), scsi_errmsg(9F)
Writing Device Drivers
