<beginning of page>
mlib_GraphicsFillTriangleStripSet, mlib_GraphicsFillTriangleStripSet_8, mlib_GraphicsFillTriangleStripSet_32,
mlib_GraphicsFillTriangleStripSet_X_8, mlib_GraphicsFillTriangleStripSet_X_32, mlib_GraphicsFillTrian<hy>
gleStripSet_A_8, mlib_GraphicsFillTriangleStripSet_A_32, mlib_GraphicsFillTriangleStripSet_B_8, mlib_Graph<hy>
icsFillTriangleStripSet_B_32, mlib_GraphicsFillTriangleStripSet_G_8, mlib_GraphicsFillTriangleStripSet_G_32,
mlib_GraphicsFillTriangleStripSet_Z_8, mlib_GraphicsFillTriangleStripSet_Z_32, mlib_GraphicsFillTrian<hy>
gleStripSet_AB_8, mlib_GraphicsFillTriangleStripSet_AB_32, mlib_GraphicsFillTriangleStripSet_ABG_8,
mlib_GraphicsFillTriangleStripSet_ABG_32, mlib_GraphicsFillTriangleStripSet_ABGZ_8, mlib_GraphicsFillTri<hy>
angleStripSet_ABGZ_32, mlib_GraphicsFillTriangleStripSet_ABZ_8, mlib_GraphicsFillTriangleStripSet_ABZ_32,
mlib_GraphicsFillTriangleStripSet_AG_8, mlib_GraphicsFillTriangleStripSet_AG_32, mlib_GraphicsFillTrian<hy>
gleStripSet_AGZ_8, mlib_GraphicsFillTriangleStripSet_AGZ_32, mlib_GraphicsFillTriangleStripSet_AZ_8,
mlib_GraphicsFillTriangleStripSet_AZ_32, mlib_GraphicsFillTriangleStripSet_BG_8, mlib_GraphicsFillTrian<hy>
gleStripSet_BG_32, mlib_GraphicsFillTriangleStripSet_BGZ_8, mlib_GraphicsFillTriangleStripSet_BGZ_32,
mlib_GraphicsFillTriangleStripSet_BZ_8, mlib_GraphicsFillTriangleStripSet_BZ_32, mlib_GraphicsFillTrian<hy>
gleStripSet_GZ_8, mlib_GraphicsFillTriangleStripSet_GZ_32 <-> draw filled triangle set where the first side of each
member is common to the second side of the previous member
cc [ flag... ] file... -lmlib [ library... ]
#include <mlib.h>
mlib_status mlib_GraphicsFillTriangleStripSet_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_X_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
mlib_status mlib_GraphicsFillTriangleStripSet_X_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 c2);
mlib_status mlib_GraphicsFillTriangleStripSet_A_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_A_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_B_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_B_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_G_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_G_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_Z_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_Z_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_AB_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
<beginning of page>
mlib_status mlib_GraphicsFillTriangleStripSet_AB_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints, mlib_s32 c,
 mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABG_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABG_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c,
 mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABGZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABGZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_ABZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_AG_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_AG_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_AGZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_AGZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_AZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_AZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c);
mlib_status mlib_GraphicsFillTriangleStripSet_BG_8(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_BG_32(mlib_image *buffer,
 const mlib_s16 *x, const mlib_s16 *y, mlib_s32 npoints,
 const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_BGZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_BGZ_32(mlib_image *buffer,
<beginning of page>
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_BZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_BZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, mlib_s32 c, mlib_s32 a);
mlib_status mlib_GraphicsFillTriangleStripSet_GZ_8(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c);
mlib_status mlib_GraphicsFillTriangleStripSet_GZ_32(mlib_image *buffer,
 mlib_image *zbuffer, const mlib_s16 *x, const mlib_s16 *y,
 const mlib_s16 *z, mlib_s32 npoints, const mlib_s32 *c);
Each of the mlib_GraphicsFillTriangleStripSet_*() functions draws a set of filled triangles with vertices at
{(x1,y1), (x2,y2), (x3,y3)}, {(x2,y2), (x3,y3), (x4,y4)}, ..., and {(xn-2,yn-2), (xn-1,yn-1), (xn,yn)}.
Each of the mlib_GraphicsFillTriangleStripSet_X_*() functions draws a set of filled triangles in Xor mode as fol<hy>
lows:
  data[x,y] ^= c ^ c2
Each of the mlib_GraphicsFillTriangleStripSet_A_*() functions draws a set of filled triangles with antialiasing.
Each of the mlib_GraphicsFillTriangleStripSet_B_*() functions draws a set of filled triangles with alpha blending
as follows:
  data[x,y] = (data[x,y] * (255 - a) + c * a) / 255
Each of the mlib_GraphicsFillTriangleStripSet_G_*() functions draws a set of filled triangles with Gouraud shad<hy>
ing.
Each of the mlib_GraphicsFillTriangleStripSet_Z_*() functions draws a set of filled triangles with Z buffering.
Each of the other functions draws a set of filled triangles with a combination of two or more features like antialiasing
(A), alpha blending (B), Gouraud shading (G), and Z buffering (Z).
Each of the functions takes some of the following arguments:
buffer Pointer to the image into which the function is drawing.
zbuffer Pointer to the image that holds the Z buffer.
x Pointer to array of X coordinates of the points.
y Pointer to array of Y coordinates of the points.
z Pointer to array of Z coordinates of the points.
npoints Number of points in the arrays.
<beginning of page>
c Color used in the drawing, or pointer to array of colors of the points in the case of Gouraud shading.
c2 Alternation color.
a Alpha value for blending. 0 <<=> a <<=> 255.
Each of the functions returns MLIB_SUCCESS if successful. Otherwise it returns MLIB_FAILURE.
See attributes(5) for descriptions of the following attributes:
tab() box; cw(2.75i) |cw(2.75i) lw(2.75i) |lw(2.75i) ATTRIBUTE TYPEATTRIBUTE VALUE _ Interface Stability<hy>
Committed _ MT-LevelMT-Safe
mlib_GraphicsFillTriangle(3MLIB), mlib_GraphicsFillTriangleSet(3MLIB), mlib_GraphicsFillTriangle<hy>
FanSet(3MLIB), attributes(5)
